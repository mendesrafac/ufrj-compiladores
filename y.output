Terminals unused in grammar

   TK_VAR


State 7 conflicts: 1 shift/reduce, 1 reduce/reduce
State 11 conflicts: 1 shift/reduce, 1 reduce/reduce
State 22 conflicts: 1 shift/reduce
State 88 conflicts: 1 shift/reduce


Grammar

    0 $accept: S $end

    1 S: ABRIR1 PROGRAM DECLS MAIN FECHAR

    2 ABRIR1: TK_ABRIR1 ';'

    3 FECHAR: TK_FECHAR ';'

    4 PROGRAM: TK_PROGRAM TK_ID ';'

    5 DECLS: DECL DECLS
    6      | %empty

    7 DECL: VARS

    8 VARS: VAR ';' VARS
    9     | %empty

   10 VAR: TK_ID IDS
   11    | IDS ':' TK_ARRAY '[' TK_CINT TK_PTPT TK_CINT ']' TK_OF TK_ID

   12 IDS: IDS ',' TK_ID
   13    | TK_ID

   14 MAIN: BLOCO '.'

   15 $@1: %empty

   16 BLOCO: TK_BEGIN $@1 CMDS TK_END

   17 CMDS: CMD ';' CMDS
   18     | %empty

   19 CMD: WRITELN
   20    | ATRIB
   21    | CMD_IF
   22    | BLOCO
   23    | CMD_FOR

   24 CMD_FOR: TK_FOR NOME_VAR TK_ATRIB E TK_TO E TK_DO CMD

   25 CMD_IF: TK_IF E TK_THEN CMD
   26       | TK_IF E TK_THEN CMD TK_ELSE CMD

   27 WRITELN: TK_WRITELN '(' E ')'

   28 ATRIB: TK_ID TK_ATRIB E
   29      | TK_ID '[' E ']' TK_ATRIB E

   30 E: E '+' E
   31  | E '-' E
   32  | E '*' E
   33  | E '/' E
   34  | E '<' E
   35  | E '>' E
   36  | E TK_MEIG E
   37  | E TK_MAIG E
   38  | E '=' E
   39  | E TK_DIF E
   40  | E TK_AND E
   41  | '(' E ')'
   42  | F

   43 F: NOME_VAR
   44  | TK_CINT
   45  | TK_CDOUBLE
   46  | TK_CSTRING
   47  | TK_ID '[' E ']'

   48 NOME_VAR: TK_ID


Terminals, with rules where they appear

$end (0) 0
'(' (40) 27 41
')' (41) 27 41
'*' (42) 32
'+' (43) 30
',' (44) 12
'-' (45) 31
'.' (46) 14
'/' (47) 33
':' (58) 11
';' (59) 2 3 4 8 17
'<' (60) 34
'=' (61) 38
'>' (62) 35
'[' (91) 11 29 47
']' (93) 11 29 47
error (256)
TK_ID (258) 4 10 11 12 13 28 29 47 48
TK_CINT (259) 11 44
TK_CDOUBLE (260) 45
TK_VAR (261)
TK_PROGRAM (262) 4
TK_BEGIN (263) 16
TK_END (264) 16
TK_ATRIB (265) 24 28 29
TK_WRITELN (266) 27
TK_CSTRING (267) 46
TK_MAIG (268) 37
TK_MEIG (269) 36
TK_DIF (270) 39
TK_IF (271) 25 26
TK_THEN (272) 25 26
TK_ELSE (273) 26
TK_AND (274) 40
TK_FOR (275) 24
TK_TO (276) 24
TK_DO (277) 24
TK_ARRAY (278) 11
TK_OF (279) 11
TK_PTPT (280) 11
TK_ABRIR1 (281) 2
TK_FECHAR (282) 3


Nonterminals, with rules where they appear

$accept (43)
    on left: 0
S (44)
    on left: 1, on right: 0
ABRIR1 (45)
    on left: 2, on right: 1
FECHAR (46)
    on left: 3, on right: 1
PROGRAM (47)
    on left: 4, on right: 1
DECLS (48)
    on left: 5 6, on right: 1 5
DECL (49)
    on left: 7, on right: 5
VARS (50)
    on left: 8 9, on right: 7 8
VAR (51)
    on left: 10 11, on right: 8
IDS (52)
    on left: 12 13, on right: 10 11 12
MAIN (53)
    on left: 14, on right: 1
BLOCO (54)
    on left: 16, on right: 14 22
$@1 (55)
    on left: 15, on right: 16
CMDS (56)
    on left: 17 18, on right: 16 17
CMD (57)
    on left: 19 20 21 22 23, on right: 17 24 25 26
CMD_FOR (58)
    on left: 24, on right: 23
CMD_IF (59)
    on left: 25 26, on right: 21
WRITELN (60)
    on left: 27, on right: 19
ATRIB (61)
    on left: 28 29, on right: 20
E (62)
    on left: 30 31 32 33 34 35 36 37 38 39 40 41 42, on right: 24 25
    26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 47
F (63)
    on left: 43 44 45 46 47, on right: 42
NOME_VAR (64)
    on left: 48, on right: 24 43


State 0

    0 $accept: . S $end

    TK_ABRIR1  shift, and go to state 1

    S       go to state 2
    ABRIR1  go to state 3


State 1

    2 ABRIR1: TK_ABRIR1 . ';'

    ';'  shift, and go to state 4


State 2

    0 $accept: S . $end

    $end  shift, and go to state 5


State 3

    1 S: ABRIR1 . PROGRAM DECLS MAIN FECHAR

    TK_PROGRAM  shift, and go to state 6

    PROGRAM  go to state 7


State 4

    2 ABRIR1: TK_ABRIR1 ';' .

    $default  reduce using rule 2 (ABRIR1)


State 5

    0 $accept: S $end .

    $default  accept


State 6

    4 PROGRAM: TK_PROGRAM . TK_ID ';'

    TK_ID  shift, and go to state 8


State 7

    1 S: ABRIR1 PROGRAM . DECLS MAIN FECHAR

    TK_ID  shift, and go to state 9

    TK_ID     [reduce using rule 9 (VARS)]
    TK_BEGIN  reduce using rule 6 (DECLS)
    TK_BEGIN  [reduce using rule 9 (VARS)]
    $default  reduce using rule 6 (DECLS)

    DECLS  go to state 10
    DECL   go to state 11
    VARS   go to state 12
    VAR    go to state 13
    IDS    go to state 14


State 8

    4 PROGRAM: TK_PROGRAM TK_ID . ';'

    ';'  shift, and go to state 15


State 9

   10 VAR: TK_ID . IDS
   13 IDS: TK_ID .

    TK_ID  shift, and go to state 16

    $default  reduce using rule 13 (IDS)

    IDS  go to state 17


State 10

    1 S: ABRIR1 PROGRAM DECLS . MAIN FECHAR

    TK_BEGIN  shift, and go to state 18

    MAIN   go to state 19
    BLOCO  go to state 20


State 11

    5 DECLS: DECL . DECLS

    TK_ID  shift, and go to state 9

    TK_ID     [reduce using rule 9 (VARS)]
    TK_BEGIN  reduce using rule 6 (DECLS)
    TK_BEGIN  [reduce using rule 9 (VARS)]
    $default  reduce using rule 6 (DECLS)

    DECLS  go to state 21
    DECL   go to state 11
    VARS   go to state 12
    VAR    go to state 13
    IDS    go to state 14


State 12

    7 DECL: VARS .

    $default  reduce using rule 7 (DECL)


State 13

    8 VARS: VAR . ';' VARS

    ';'  shift, and go to state 22


State 14

   11 VAR: IDS . ':' TK_ARRAY '[' TK_CINT TK_PTPT TK_CINT ']' TK_OF TK_ID
   12 IDS: IDS . ',' TK_ID

    ':'  shift, and go to state 23
    ','  shift, and go to state 24


State 15

    4 PROGRAM: TK_PROGRAM TK_ID ';' .

    $default  reduce using rule 4 (PROGRAM)


State 16

   13 IDS: TK_ID .

    $default  reduce using rule 13 (IDS)


State 17

   10 VAR: TK_ID IDS .
   12 IDS: IDS . ',' TK_ID

    ','  shift, and go to state 24

    $default  reduce using rule 10 (VAR)


State 18

   16 BLOCO: TK_BEGIN . $@1 CMDS TK_END

    $default  reduce using rule 15 ($@1)

    $@1  go to state 25


State 19

    1 S: ABRIR1 PROGRAM DECLS MAIN . FECHAR

    TK_FECHAR  shift, and go to state 26

    FECHAR  go to state 27


State 20

   14 MAIN: BLOCO . '.'

    '.'  shift, and go to state 28


State 21

    5 DECLS: DECL DECLS .

    $default  reduce using rule 5 (DECLS)


State 22

    8 VARS: VAR ';' . VARS

    TK_ID  shift, and go to state 9

    TK_ID     [reduce using rule 9 (VARS)]
    $default  reduce using rule 9 (VARS)

    VARS  go to state 29
    VAR   go to state 13
    IDS   go to state 14


State 23

   11 VAR: IDS ':' . TK_ARRAY '[' TK_CINT TK_PTPT TK_CINT ']' TK_OF TK_ID

    TK_ARRAY  shift, and go to state 30


State 24

   12 IDS: IDS ',' . TK_ID

    TK_ID  shift, and go to state 31


State 25

   16 BLOCO: TK_BEGIN $@1 . CMDS TK_END

    TK_ID       shift, and go to state 32
    TK_BEGIN    shift, and go to state 18
    TK_WRITELN  shift, and go to state 33
    TK_IF       shift, and go to state 34
    TK_FOR      shift, and go to state 35

    $default  reduce using rule 18 (CMDS)

    BLOCO    go to state 36
    CMDS     go to state 37
    CMD      go to state 38
    CMD_FOR  go to state 39
    CMD_IF   go to state 40
    WRITELN  go to state 41
    ATRIB    go to state 42


State 26

    3 FECHAR: TK_FECHAR . ';'

    ';'  shift, and go to state 43


State 27

    1 S: ABRIR1 PROGRAM DECLS MAIN FECHAR .

    $default  reduce using rule 1 (S)


State 28

   14 MAIN: BLOCO '.' .

    $default  reduce using rule 14 (MAIN)


State 29

    8 VARS: VAR ';' VARS .

    $default  reduce using rule 8 (VARS)


State 30

   11 VAR: IDS ':' TK_ARRAY . '[' TK_CINT TK_PTPT TK_CINT ']' TK_OF TK_ID

    '['  shift, and go to state 44


State 31

   12 IDS: IDS ',' TK_ID .

    $default  reduce using rule 12 (IDS)


State 32

   28 ATRIB: TK_ID . TK_ATRIB E
   29      | TK_ID . '[' E ']' TK_ATRIB E

    TK_ATRIB  shift, and go to state 45
    '['       shift, and go to state 46


State 33

   27 WRITELN: TK_WRITELN . '(' E ')'

    '('  shift, and go to state 47


State 34

   25 CMD_IF: TK_IF . E TK_THEN CMD
   26       | TK_IF . E TK_THEN CMD TK_ELSE CMD

    TK_ID       shift, and go to state 48
    TK_CINT     shift, and go to state 49
    TK_CDOUBLE  shift, and go to state 50
    TK_CSTRING  shift, and go to state 51
    '('         shift, and go to state 52

    E         go to state 53
    F         go to state 54
    NOME_VAR  go to state 55


State 35

   24 CMD_FOR: TK_FOR . NOME_VAR TK_ATRIB E TK_TO E TK_DO CMD

    TK_ID  shift, and go to state 56

    NOME_VAR  go to state 57


State 36

   22 CMD: BLOCO .

    $default  reduce using rule 22 (CMD)


State 37

   16 BLOCO: TK_BEGIN $@1 CMDS . TK_END

    TK_END  shift, and go to state 58


State 38

   17 CMDS: CMD . ';' CMDS

    ';'  shift, and go to state 59


State 39

   23 CMD: CMD_FOR .

    $default  reduce using rule 23 (CMD)


State 40

   21 CMD: CMD_IF .

    $default  reduce using rule 21 (CMD)


State 41

   19 CMD: WRITELN .

    $default  reduce using rule 19 (CMD)


State 42

   20 CMD: ATRIB .

    $default  reduce using rule 20 (CMD)


State 43

    3 FECHAR: TK_FECHAR ';' .

    $default  reduce using rule 3 (FECHAR)


State 44

   11 VAR: IDS ':' TK_ARRAY '[' . TK_CINT TK_PTPT TK_CINT ']' TK_OF TK_ID

    TK_CINT  shift, and go to state 60


State 45

   28 ATRIB: TK_ID TK_ATRIB . E

    TK_ID       shift, and go to state 48
    TK_CINT     shift, and go to state 49
    TK_CDOUBLE  shift, and go to state 50
    TK_CSTRING  shift, and go to state 51
    '('         shift, and go to state 52

    E         go to state 61
    F         go to state 54
    NOME_VAR  go to state 55


State 46

   29 ATRIB: TK_ID '[' . E ']' TK_ATRIB E

    TK_ID       shift, and go to state 48
    TK_CINT     shift, and go to state 49
    TK_CDOUBLE  shift, and go to state 50
    TK_CSTRING  shift, and go to state 51
    '('         shift, and go to state 52

    E         go to state 62
    F         go to state 54
    NOME_VAR  go to state 55


State 47

   27 WRITELN: TK_WRITELN '(' . E ')'

    TK_ID       shift, and go to state 48
    TK_CINT     shift, and go to state 49
    TK_CDOUBLE  shift, and go to state 50
    TK_CSTRING  shift, and go to state 51
    '('         shift, and go to state 52

    E         go to state 63
    F         go to state 54
    NOME_VAR  go to state 55


State 48

   47 F: TK_ID . '[' E ']'
   48 NOME_VAR: TK_ID .

    '['  shift, and go to state 64

    $default  reduce using rule 48 (NOME_VAR)


State 49

   44 F: TK_CINT .

    $default  reduce using rule 44 (F)


State 50

   45 F: TK_CDOUBLE .

    $default  reduce using rule 45 (F)


State 51

   46 F: TK_CSTRING .

    $default  reduce using rule 46 (F)


State 52

   41 E: '(' . E ')'

    TK_ID       shift, and go to state 48
    TK_CINT     shift, and go to state 49
    TK_CDOUBLE  shift, and go to state 50
    TK_CSTRING  shift, and go to state 51
    '('         shift, and go to state 52

    E         go to state 65
    F         go to state 54
    NOME_VAR  go to state 55


State 53

   25 CMD_IF: TK_IF E . TK_THEN CMD
   26       | TK_IF E . TK_THEN CMD TK_ELSE CMD
   30 E: E . '+' E
   31  | E . '-' E
   32  | E . '*' E
   33  | E . '/' E
   34  | E . '<' E
   35  | E . '>' E
   36  | E . TK_MEIG E
   37  | E . TK_MAIG E
   38  | E . '=' E
   39  | E . TK_DIF E
   40  | E . TK_AND E

    TK_MAIG  shift, and go to state 66
    TK_MEIG  shift, and go to state 67
    TK_DIF   shift, and go to state 68
    TK_THEN  shift, and go to state 69
    TK_AND   shift, and go to state 70
    '<'      shift, and go to state 71
    '>'      shift, and go to state 72
    '='      shift, and go to state 73
    '+'      shift, and go to state 74
    '-'      shift, and go to state 75
    '*'      shift, and go to state 76
    '/'      shift, and go to state 77


State 54

   42 E: F .

    $default  reduce using rule 42 (E)


State 55

   43 F: NOME_VAR .

    $default  reduce using rule 43 (F)


State 56

   48 NOME_VAR: TK_ID .

    $default  reduce using rule 48 (NOME_VAR)


State 57

   24 CMD_FOR: TK_FOR NOME_VAR . TK_ATRIB E TK_TO E TK_DO CMD

    TK_ATRIB  shift, and go to state 78


State 58

   16 BLOCO: TK_BEGIN $@1 CMDS TK_END .

    $default  reduce using rule 16 (BLOCO)


State 59

   17 CMDS: CMD ';' . CMDS

    TK_ID       shift, and go to state 32
    TK_BEGIN    shift, and go to state 18
    TK_WRITELN  shift, and go to state 33
    TK_IF       shift, and go to state 34
    TK_FOR      shift, and go to state 35

    $default  reduce using rule 18 (CMDS)

    BLOCO    go to state 36
    CMDS     go to state 79
    CMD      go to state 38
    CMD_FOR  go to state 39
    CMD_IF   go to state 40
    WRITELN  go to state 41
    ATRIB    go to state 42


State 60

   11 VAR: IDS ':' TK_ARRAY '[' TK_CINT . TK_PTPT TK_CINT ']' TK_OF TK_ID

    TK_PTPT  shift, and go to state 80


State 61

   28 ATRIB: TK_ID TK_ATRIB E .
   30 E: E . '+' E
   31  | E . '-' E
   32  | E . '*' E
   33  | E . '/' E
   34  | E . '<' E
   35  | E . '>' E
   36  | E . TK_MEIG E
   37  | E . TK_MAIG E
   38  | E . '=' E
   39  | E . TK_DIF E
   40  | E . TK_AND E

    TK_MAIG  shift, and go to state 66
    TK_MEIG  shift, and go to state 67
    TK_DIF   shift, and go to state 68
    TK_AND   shift, and go to state 70
    '<'      shift, and go to state 71
    '>'      shift, and go to state 72
    '='      shift, and go to state 73
    '+'      shift, and go to state 74
    '-'      shift, and go to state 75
    '*'      shift, and go to state 76
    '/'      shift, and go to state 77

    $default  reduce using rule 28 (ATRIB)


State 62

   29 ATRIB: TK_ID '[' E . ']' TK_ATRIB E
   30 E: E . '+' E
   31  | E . '-' E
   32  | E . '*' E
   33  | E . '/' E
   34  | E . '<' E
   35  | E . '>' E
   36  | E . TK_MEIG E
   37  | E . TK_MAIG E
   38  | E . '=' E
   39  | E . TK_DIF E
   40  | E . TK_AND E

    TK_MAIG  shift, and go to state 66
    TK_MEIG  shift, and go to state 67
    TK_DIF   shift, and go to state 68
    TK_AND   shift, and go to state 70
    '<'      shift, and go to state 71
    '>'      shift, and go to state 72
    '='      shift, and go to state 73
    '+'      shift, and go to state 74
    '-'      shift, and go to state 75
    '*'      shift, and go to state 76
    '/'      shift, and go to state 77
    ']'      shift, and go to state 81


State 63

   27 WRITELN: TK_WRITELN '(' E . ')'
   30 E: E . '+' E
   31  | E . '-' E
   32  | E . '*' E
   33  | E . '/' E
   34  | E . '<' E
   35  | E . '>' E
   36  | E . TK_MEIG E
   37  | E . TK_MAIG E
   38  | E . '=' E
   39  | E . TK_DIF E
   40  | E . TK_AND E

    TK_MAIG  shift, and go to state 66
    TK_MEIG  shift, and go to state 67
    TK_DIF   shift, and go to state 68
    TK_AND   shift, and go to state 70
    '<'      shift, and go to state 71
    '>'      shift, and go to state 72
    '='      shift, and go to state 73
    '+'      shift, and go to state 74
    '-'      shift, and go to state 75
    '*'      shift, and go to state 76
    '/'      shift, and go to state 77
    ')'      shift, and go to state 82


State 64

   47 F: TK_ID '[' . E ']'

    TK_ID       shift, and go to state 48
    TK_CINT     shift, and go to state 49
    TK_CDOUBLE  shift, and go to state 50
    TK_CSTRING  shift, and go to state 51
    '('         shift, and go to state 52

    E         go to state 83
    F         go to state 54
    NOME_VAR  go to state 55


State 65

   30 E: E . '+' E
   31  | E . '-' E
   32  | E . '*' E
   33  | E . '/' E
   34  | E . '<' E
   35  | E . '>' E
   36  | E . TK_MEIG E
   37  | E . TK_MAIG E
   38  | E . '=' E
   39  | E . TK_DIF E
   40  | E . TK_AND E
   41  | '(' E . ')'

    TK_MAIG  shift, and go to state 66
    TK_MEIG  shift, and go to state 67
    TK_DIF   shift, and go to state 68
    TK_AND   shift, and go to state 70
    '<'      shift, and go to state 71
    '>'      shift, and go to state 72
    '='      shift, and go to state 73
    '+'      shift, and go to state 74
    '-'      shift, and go to state 75
    '*'      shift, and go to state 76
    '/'      shift, and go to state 77
    ')'      shift, and go to state 84


State 66

   37 E: E TK_MAIG . E

    TK_ID       shift, and go to state 48
    TK_CINT     shift, and go to state 49
    TK_CDOUBLE  shift, and go to state 50
    TK_CSTRING  shift, and go to state 51
    '('         shift, and go to state 52

    E         go to state 85
    F         go to state 54
    NOME_VAR  go to state 55


State 67

   36 E: E TK_MEIG . E

    TK_ID       shift, and go to state 48
    TK_CINT     shift, and go to state 49
    TK_CDOUBLE  shift, and go to state 50
    TK_CSTRING  shift, and go to state 51
    '('         shift, and go to state 52

    E         go to state 86
    F         go to state 54
    NOME_VAR  go to state 55


State 68

   39 E: E TK_DIF . E

    TK_ID       shift, and go to state 48
    TK_CINT     shift, and go to state 49
    TK_CDOUBLE  shift, and go to state 50
    TK_CSTRING  shift, and go to state 51
    '('         shift, and go to state 52

    E         go to state 87
    F         go to state 54
    NOME_VAR  go to state 55


State 69

   25 CMD_IF: TK_IF E TK_THEN . CMD
   26       | TK_IF E TK_THEN . CMD TK_ELSE CMD

    TK_ID       shift, and go to state 32
    TK_BEGIN    shift, and go to state 18
    TK_WRITELN  shift, and go to state 33
    TK_IF       shift, and go to state 34
    TK_FOR      shift, and go to state 35

    BLOCO    go to state 36
    CMD      go to state 88
    CMD_FOR  go to state 39
    CMD_IF   go to state 40
    WRITELN  go to state 41
    ATRIB    go to state 42


State 70

   40 E: E TK_AND . E

    TK_ID       shift, and go to state 48
    TK_CINT     shift, and go to state 49
    TK_CDOUBLE  shift, and go to state 50
    TK_CSTRING  shift, and go to state 51
    '('         shift, and go to state 52

    E         go to state 89
    F         go to state 54
    NOME_VAR  go to state 55


State 71

   34 E: E '<' . E

    TK_ID       shift, and go to state 48
    TK_CINT     shift, and go to state 49
    TK_CDOUBLE  shift, and go to state 50
    TK_CSTRING  shift, and go to state 51
    '('         shift, and go to state 52

    E         go to state 90
    F         go to state 54
    NOME_VAR  go to state 55


State 72

   35 E: E '>' . E

    TK_ID       shift, and go to state 48
    TK_CINT     shift, and go to state 49
    TK_CDOUBLE  shift, and go to state 50
    TK_CSTRING  shift, and go to state 51
    '('         shift, and go to state 52

    E         go to state 91
    F         go to state 54
    NOME_VAR  go to state 55


State 73

   38 E: E '=' . E

    TK_ID       shift, and go to state 48
    TK_CINT     shift, and go to state 49
    TK_CDOUBLE  shift, and go to state 50
    TK_CSTRING  shift, and go to state 51
    '('         shift, and go to state 52

    E         go to state 92
    F         go to state 54
    NOME_VAR  go to state 55


State 74

   30 E: E '+' . E

    TK_ID       shift, and go to state 48
    TK_CINT     shift, and go to state 49
    TK_CDOUBLE  shift, and go to state 50
    TK_CSTRING  shift, and go to state 51
    '('         shift, and go to state 52

    E         go to state 93
    F         go to state 54
    NOME_VAR  go to state 55


State 75

   31 E: E '-' . E

    TK_ID       shift, and go to state 48
    TK_CINT     shift, and go to state 49
    TK_CDOUBLE  shift, and go to state 50
    TK_CSTRING  shift, and go to state 51
    '('         shift, and go to state 52

    E         go to state 94
    F         go to state 54
    NOME_VAR  go to state 55


State 76

   32 E: E '*' . E

    TK_ID       shift, and go to state 48
    TK_CINT     shift, and go to state 49
    TK_CDOUBLE  shift, and go to state 50
    TK_CSTRING  shift, and go to state 51
    '('         shift, and go to state 52

    E         go to state 95
    F         go to state 54
    NOME_VAR  go to state 55


State 77

   33 E: E '/' . E

    TK_ID       shift, and go to state 48
    TK_CINT     shift, and go to state 49
    TK_CDOUBLE  shift, and go to state 50
    TK_CSTRING  shift, and go to state 51
    '('         shift, and go to state 52

    E         go to state 96
    F         go to state 54
    NOME_VAR  go to state 55


State 78

   24 CMD_FOR: TK_FOR NOME_VAR TK_ATRIB . E TK_TO E TK_DO CMD

    TK_ID       shift, and go to state 48
    TK_CINT     shift, and go to state 49
    TK_CDOUBLE  shift, and go to state 50
    TK_CSTRING  shift, and go to state 51
    '('         shift, and go to state 52

    E         go to state 97
    F         go to state 54
    NOME_VAR  go to state 55


State 79

   17 CMDS: CMD ';' CMDS .

    $default  reduce using rule 17 (CMDS)


State 80

   11 VAR: IDS ':' TK_ARRAY '[' TK_CINT TK_PTPT . TK_CINT ']' TK_OF TK_ID

    TK_CINT  shift, and go to state 98


State 81

   29 ATRIB: TK_ID '[' E ']' . TK_ATRIB E

    TK_ATRIB  shift, and go to state 99


State 82

   27 WRITELN: TK_WRITELN '(' E ')' .

    $default  reduce using rule 27 (WRITELN)


State 83

   30 E: E . '+' E
   31  | E . '-' E
   32  | E . '*' E
   33  | E . '/' E
   34  | E . '<' E
   35  | E . '>' E
   36  | E . TK_MEIG E
   37  | E . TK_MAIG E
   38  | E . '=' E
   39  | E . TK_DIF E
   40  | E . TK_AND E
   47 F: TK_ID '[' E . ']'

    TK_MAIG  shift, and go to state 66
    TK_MEIG  shift, and go to state 67
    TK_DIF   shift, and go to state 68
    TK_AND   shift, and go to state 70
    '<'      shift, and go to state 71
    '>'      shift, and go to state 72
    '='      shift, and go to state 73
    '+'      shift, and go to state 74
    '-'      shift, and go to state 75
    '*'      shift, and go to state 76
    '/'      shift, and go to state 77
    ']'      shift, and go to state 100


State 84

   41 E: '(' E ')' .

    $default  reduce using rule 41 (E)


State 85

   30 E: E . '+' E
   31  | E . '-' E
   32  | E . '*' E
   33  | E . '/' E
   34  | E . '<' E
   35  | E . '>' E
   36  | E . TK_MEIG E
   37  | E . TK_MAIG E
   37  | E TK_MAIG E .
   38  | E . '=' E
   39  | E . TK_DIF E
   40  | E . TK_AND E

    '+'  shift, and go to state 74
    '-'  shift, and go to state 75
    '*'  shift, and go to state 76
    '/'  shift, and go to state 77

    TK_MAIG  error (nonassociative)
    TK_MEIG  error (nonassociative)
    TK_DIF   error (nonassociative)
    '<'      error (nonassociative)
    '>'      error (nonassociative)
    '='      error (nonassociative)

    $default  reduce using rule 37 (E)


State 86

   30 E: E . '+' E
   31  | E . '-' E
   32  | E . '*' E
   33  | E . '/' E
   34  | E . '<' E
   35  | E . '>' E
   36  | E . TK_MEIG E
   36  | E TK_MEIG E .
   37  | E . TK_MAIG E
   38  | E . '=' E
   39  | E . TK_DIF E
   40  | E . TK_AND E

    '+'  shift, and go to state 74
    '-'  shift, and go to state 75
    '*'  shift, and go to state 76
    '/'  shift, and go to state 77

    TK_MAIG  error (nonassociative)
    TK_MEIG  error (nonassociative)
    TK_DIF   error (nonassociative)
    '<'      error (nonassociative)
    '>'      error (nonassociative)
    '='      error (nonassociative)

    $default  reduce using rule 36 (E)


State 87

   30 E: E . '+' E
   31  | E . '-' E
   32  | E . '*' E
   33  | E . '/' E
   34  | E . '<' E
   35  | E . '>' E
   36  | E . TK_MEIG E
   37  | E . TK_MAIG E
   38  | E . '=' E
   39  | E . TK_DIF E
   39  | E TK_DIF E .
   40  | E . TK_AND E

    '+'  shift, and go to state 74
    '-'  shift, and go to state 75
    '*'  shift, and go to state 76
    '/'  shift, and go to state 77

    TK_MAIG  error (nonassociative)
    TK_MEIG  error (nonassociative)
    TK_DIF   error (nonassociative)
    '<'      error (nonassociative)
    '>'      error (nonassociative)
    '='      error (nonassociative)

    $default  reduce using rule 39 (E)


State 88

   25 CMD_IF: TK_IF E TK_THEN CMD .
   26       | TK_IF E TK_THEN CMD . TK_ELSE CMD

    TK_ELSE  shift, and go to state 101

    TK_ELSE   [reduce using rule 25 (CMD_IF)]
    $default  reduce using rule 25 (CMD_IF)


State 89

   30 E: E . '+' E
   31  | E . '-' E
   32  | E . '*' E
   33  | E . '/' E
   34  | E . '<' E
   35  | E . '>' E
   36  | E . TK_MEIG E
   37  | E . TK_MAIG E
   38  | E . '=' E
   39  | E . TK_DIF E
   40  | E . TK_AND E
   40  | E TK_AND E .

    TK_MAIG  shift, and go to state 66
    TK_MEIG  shift, and go to state 67
    TK_DIF   shift, and go to state 68
    '<'      shift, and go to state 71
    '>'      shift, and go to state 72
    '='      shift, and go to state 73
    '+'      shift, and go to state 74
    '-'      shift, and go to state 75
    '*'      shift, and go to state 76
    '/'      shift, and go to state 77

    $default  reduce using rule 40 (E)


State 90

   30 E: E . '+' E
   31  | E . '-' E
   32  | E . '*' E
   33  | E . '/' E
   34  | E . '<' E
   34  | E '<' E .
   35  | E . '>' E
   36  | E . TK_MEIG E
   37  | E . TK_MAIG E
   38  | E . '=' E
   39  | E . TK_DIF E
   40  | E . TK_AND E

    '+'  shift, and go to state 74
    '-'  shift, and go to state 75
    '*'  shift, and go to state 76
    '/'  shift, and go to state 77

    TK_MAIG  error (nonassociative)
    TK_MEIG  error (nonassociative)
    TK_DIF   error (nonassociative)
    '<'      error (nonassociative)
    '>'      error (nonassociative)
    '='      error (nonassociative)

    $default  reduce using rule 34 (E)


State 91

   30 E: E . '+' E
   31  | E . '-' E
   32  | E . '*' E
   33  | E . '/' E
   34  | E . '<' E
   35  | E . '>' E
   35  | E '>' E .
   36  | E . TK_MEIG E
   37  | E . TK_MAIG E
   38  | E . '=' E
   39  | E . TK_DIF E
   40  | E . TK_AND E

    '+'  shift, and go to state 74
    '-'  shift, and go to state 75
    '*'  shift, and go to state 76
    '/'  shift, and go to state 77

    TK_MAIG  error (nonassociative)
    TK_MEIG  error (nonassociative)
    TK_DIF   error (nonassociative)
    '<'      error (nonassociative)
    '>'      error (nonassociative)
    '='      error (nonassociative)

    $default  reduce using rule 35 (E)


State 92

   30 E: E . '+' E
   31  | E . '-' E
   32  | E . '*' E
   33  | E . '/' E
   34  | E . '<' E
   35  | E . '>' E
   36  | E . TK_MEIG E
   37  | E . TK_MAIG E
   38  | E . '=' E
   38  | E '=' E .
   39  | E . TK_DIF E
   40  | E . TK_AND E

    '+'  shift, and go to state 74
    '-'  shift, and go to state 75
    '*'  shift, and go to state 76
    '/'  shift, and go to state 77

    TK_MAIG  error (nonassociative)
    TK_MEIG  error (nonassociative)
    TK_DIF   error (nonassociative)
    '<'      error (nonassociative)
    '>'      error (nonassociative)
    '='      error (nonassociative)

    $default  reduce using rule 38 (E)


State 93

   30 E: E . '+' E
   30  | E '+' E .
   31  | E . '-' E
   32  | E . '*' E
   33  | E . '/' E
   34  | E . '<' E
   35  | E . '>' E
   36  | E . TK_MEIG E
   37  | E . TK_MAIG E
   38  | E . '=' E
   39  | E . TK_DIF E
   40  | E . TK_AND E

    '*'  shift, and go to state 76
    '/'  shift, and go to state 77

    $default  reduce using rule 30 (E)


State 94

   30 E: E . '+' E
   31  | E . '-' E
   31  | E '-' E .
   32  | E . '*' E
   33  | E . '/' E
   34  | E . '<' E
   35  | E . '>' E
   36  | E . TK_MEIG E
   37  | E . TK_MAIG E
   38  | E . '=' E
   39  | E . TK_DIF E
   40  | E . TK_AND E

    '*'  shift, and go to state 76
    '/'  shift, and go to state 77

    $default  reduce using rule 31 (E)


State 95

   30 E: E . '+' E
   31  | E . '-' E
   32  | E . '*' E
   32  | E '*' E .
   33  | E . '/' E
   34  | E . '<' E
   35  | E . '>' E
   36  | E . TK_MEIG E
   37  | E . TK_MAIG E
   38  | E . '=' E
   39  | E . TK_DIF E
   40  | E . TK_AND E

    $default  reduce using rule 32 (E)


State 96

   30 E: E . '+' E
   31  | E . '-' E
   32  | E . '*' E
   33  | E . '/' E
   33  | E '/' E .
   34  | E . '<' E
   35  | E . '>' E
   36  | E . TK_MEIG E
   37  | E . TK_MAIG E
   38  | E . '=' E
   39  | E . TK_DIF E
   40  | E . TK_AND E

    $default  reduce using rule 33 (E)


State 97

   24 CMD_FOR: TK_FOR NOME_VAR TK_ATRIB E . TK_TO E TK_DO CMD
   30 E: E . '+' E
   31  | E . '-' E
   32  | E . '*' E
   33  | E . '/' E
   34  | E . '<' E
   35  | E . '>' E
   36  | E . TK_MEIG E
   37  | E . TK_MAIG E
   38  | E . '=' E
   39  | E . TK_DIF E
   40  | E . TK_AND E

    TK_MAIG  shift, and go to state 66
    TK_MEIG  shift, and go to state 67
    TK_DIF   shift, and go to state 68
    TK_AND   shift, and go to state 70
    TK_TO    shift, and go to state 102
    '<'      shift, and go to state 71
    '>'      shift, and go to state 72
    '='      shift, and go to state 73
    '+'      shift, and go to state 74
    '-'      shift, and go to state 75
    '*'      shift, and go to state 76
    '/'      shift, and go to state 77


State 98

   11 VAR: IDS ':' TK_ARRAY '[' TK_CINT TK_PTPT TK_CINT . ']' TK_OF TK_ID

    ']'  shift, and go to state 103


State 99

   29 ATRIB: TK_ID '[' E ']' TK_ATRIB . E

    TK_ID       shift, and go to state 48
    TK_CINT     shift, and go to state 49
    TK_CDOUBLE  shift, and go to state 50
    TK_CSTRING  shift, and go to state 51
    '('         shift, and go to state 52

    E         go to state 104
    F         go to state 54
    NOME_VAR  go to state 55


State 100

   47 F: TK_ID '[' E ']' .

    $default  reduce using rule 47 (F)


State 101

   26 CMD_IF: TK_IF E TK_THEN CMD TK_ELSE . CMD

    TK_ID       shift, and go to state 32
    TK_BEGIN    shift, and go to state 18
    TK_WRITELN  shift, and go to state 33
    TK_IF       shift, and go to state 34
    TK_FOR      shift, and go to state 35

    BLOCO    go to state 36
    CMD      go to state 105
    CMD_FOR  go to state 39
    CMD_IF   go to state 40
    WRITELN  go to state 41
    ATRIB    go to state 42


State 102

   24 CMD_FOR: TK_FOR NOME_VAR TK_ATRIB E TK_TO . E TK_DO CMD

    TK_ID       shift, and go to state 48
    TK_CINT     shift, and go to state 49
    TK_CDOUBLE  shift, and go to state 50
    TK_CSTRING  shift, and go to state 51
    '('         shift, and go to state 52

    E         go to state 106
    F         go to state 54
    NOME_VAR  go to state 55


State 103

   11 VAR: IDS ':' TK_ARRAY '[' TK_CINT TK_PTPT TK_CINT ']' . TK_OF TK_ID

    TK_OF  shift, and go to state 107


State 104

   29 ATRIB: TK_ID '[' E ']' TK_ATRIB E .
   30 E: E . '+' E
   31  | E . '-' E
   32  | E . '*' E
   33  | E . '/' E
   34  | E . '<' E
   35  | E . '>' E
   36  | E . TK_MEIG E
   37  | E . TK_MAIG E
   38  | E . '=' E
   39  | E . TK_DIF E
   40  | E . TK_AND E

    TK_MAIG  shift, and go to state 66
    TK_MEIG  shift, and go to state 67
    TK_DIF   shift, and go to state 68
    TK_AND   shift, and go to state 70
    '<'      shift, and go to state 71
    '>'      shift, and go to state 72
    '='      shift, and go to state 73
    '+'      shift, and go to state 74
    '-'      shift, and go to state 75
    '*'      shift, and go to state 76
    '/'      shift, and go to state 77

    $default  reduce using rule 29 (ATRIB)


State 105

   26 CMD_IF: TK_IF E TK_THEN CMD TK_ELSE CMD .

    $default  reduce using rule 26 (CMD_IF)


State 106

   24 CMD_FOR: TK_FOR NOME_VAR TK_ATRIB E TK_TO E . TK_DO CMD
   30 E: E . '+' E
   31  | E . '-' E
   32  | E . '*' E
   33  | E . '/' E
   34  | E . '<' E
   35  | E . '>' E
   36  | E . TK_MEIG E
   37  | E . TK_MAIG E
   38  | E . '=' E
   39  | E . TK_DIF E
   40  | E . TK_AND E

    TK_MAIG  shift, and go to state 66
    TK_MEIG  shift, and go to state 67
    TK_DIF   shift, and go to state 68
    TK_AND   shift, and go to state 70
    TK_DO    shift, and go to state 108
    '<'      shift, and go to state 71
    '>'      shift, and go to state 72
    '='      shift, and go to state 73
    '+'      shift, and go to state 74
    '-'      shift, and go to state 75
    '*'      shift, and go to state 76
    '/'      shift, and go to state 77


State 107

   11 VAR: IDS ':' TK_ARRAY '[' TK_CINT TK_PTPT TK_CINT ']' TK_OF . TK_ID

    TK_ID  shift, and go to state 109


State 108

   24 CMD_FOR: TK_FOR NOME_VAR TK_ATRIB E TK_TO E TK_DO . CMD

    TK_ID       shift, and go to state 32
    TK_BEGIN    shift, and go to state 18
    TK_WRITELN  shift, and go to state 33
    TK_IF       shift, and go to state 34
    TK_FOR      shift, and go to state 35

    BLOCO    go to state 36
    CMD      go to state 110
    CMD_FOR  go to state 39
    CMD_IF   go to state 40
    WRITELN  go to state 41
    ATRIB    go to state 42


State 109

   11 VAR: IDS ':' TK_ARRAY '[' TK_CINT TK_PTPT TK_CINT ']' TK_OF TK_ID .

    $default  reduce using rule 11 (VAR)


State 110

   24 CMD_FOR: TK_FOR NOME_VAR TK_ATRIB E TK_TO E TK_DO CMD .

    $default  reduce using rule 24 (CMD_FOR)
