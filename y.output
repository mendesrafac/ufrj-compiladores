Terminals unused in grammar

   TK_BREAK
   TK_SWITCH


State 94 conflicts: 2 shift/reduce
State 128 conflicts: 2 shift/reduce
State 129 conflicts: 2 shift/reduce
State 130 conflicts: 2 shift/reduce
State 131 conflicts: 2 shift/reduce
State 132 conflicts: 2 shift/reduce
State 133 conflicts: 2 shift/reduce
State 134 conflicts: 2 shift/reduce
State 135 conflicts: 2 shift/reduce
State 137 conflicts: 15 shift/reduce
State 138 conflicts: 2 shift/reduce
State 139 conflicts: 2 shift/reduce
State 140 conflicts: 2 shift/reduce
State 141 conflicts: 2 shift/reduce
State 142 conflicts: 2 shift/reduce
State 145 conflicts: 1 shift/reduce


Grammar

    0 $accept: S $end

    1 S: TK_START ';' DECLS MAIN TK_STOP ';'

    2 MAIN: TK_MAIN BLOCO
    3     | %empty

    4 DECLS: DECLS DECL
    5      | %empty

    6 DECL: G_VAR ';'

    7 G_VAR: TIPO TK_ID
    8      | TIPO TK_ID '[' TK_CINT ']'
    9      | TIPO TK_ID '[' TK_CINT ']' '[' TK_CINT ']'

   10 VAR: TIPO VAR_DEFS
   11    | TIPO TK_ID TK_ATRIB E
   12    | TIPO TK_ID '[' TK_CINT ']'
   13    | TIPO TK_ID '[' TK_CINT ']' '[' TK_CINT ']'

   14 VAR_DEFS: TK_ID ',' VAR_DEFS
   15         | TK_ID

   16 ATRIB: TK_ID TK_ATRIB E
   17      | TK_ID '[' E ']' TK_ATRIB E
   18      | TK_ID '[' E ']' '[' E ']' TK_ATRIB E

   19 TIPO: TK_INT
   20     | TK_CHAR
   21     | TK_DOUBLE
   22     | TK_STRING
   23     | TK_BOOL

   24 $@1: %empty

   25 BLOCO: TK_BEGIN $@1 CMDS TK_END

   26 SUB_BLOCO: TK_BEGIN CMDS TK_END

   27 CMDS: CMD CMDS
   28     | %empty

   29 CMD: CMD_WROTEU ';'
   30    | CMD_READU ';'
   31    | CMD_RETURN ';'
   32    | CMD_IF
   33    | CMD_FOR
   34    | CMD_WHILE
   35    | CMD_DOWHILE ';'
   36    | ATRIB ';'
   37    | VAR ';'

   38 CMD_WROTEU: TK_WRITE '(' E ')'

   39 CMD_READU: TK_READ '(' TK_ID ')'

   40 CMD_RETURN: TK_RETURN
   41           | TK_RETURN ':' E

   42 CMD_IF: TK_IF '(' E ')' CMD
   43       | TK_IF '(' E ')' CMD TK_ELSE CMD

   44 CMD_FOR: TK_FOR '(' BEGIN_FOR ';' E ';' CONT_FOR ')' SUB_BLOCO

   45 BEGIN_FOR: TIPO TK_ID TK_ATRIB E
   46          | TK_ID TK_ATRIB E

   47 CONT_FOR: TK_ID TK_ATRIB E

   48 CMD_WHILE: TK_WHILE '(' E ')' SUB_BLOCO

   49 CMD_DOWHILE: TK_DO SUB_BLOCO TK_WHILE '(' E ')'

   50 E: E '+' E
   51  | E '-' E
   52  | E '*' E
   53  | E '/' E
   54  | E TK_G E
   55  | E TK_L E
   56  | E TK_GE E
   57  | E TK_LE E
   58  | E TK_DIFF E
   59  | E TK_E E
   60  | E TK_AND E
   61  | E TK_OR E
   62  | E TK_MOD E
   63  | TK_NOT E
   64  | '(' E ')'
   65  | E TK_CMPARRAY E
   66  | E TK_IN F
   67  | F

   68 F: TK_ID
   69  | TK_CINT
   70  | TK_CDOUBLE
   71  | TK_CCHAR
   72  | TK_CSTRING
   73  | TK_ID '[' E ']'
   74  | TK_ID '[' E ']' '[' E ']'
   75  | BOOL

   76 BOOL: TK_TRUE
   77     | TK_FALSE


Terminals, with rules where they appear

$end (0) 0
'(' (40) 38 39 42 43 44 48 49 64
')' (41) 38 39 42 43 44 48 49 64
'*' (42) 52
'+' (43) 50
',' (44) 14
'-' (45) 51
'/' (47) 53
':' (58) 41
';' (59) 1 6 29 30 31 35 36 37 44
'[' (91) 8 9 12 13 17 18 73 74
']' (93) 8 9 12 13 17 18 73 74
error (256)
TK_INT (258) 19
TK_CHAR (259) 20
TK_DOUBLE (260) 21
TK_STRING (261) 22
TK_BOOL (262) 23
TK_TRUE (263) 76
TK_FALSE (264) 77
TK_MAIN (265) 2
TK_BEGIN (266) 25 26
TK_END (267) 25 26
TK_ID (268) 7 8 9 11 12 13 14 15 16 17 18 39 45 46 47 68 73 74
TK_CINT (269) 8 9 12 13 69
TK_CDOUBLE (270) 70
TK_CSTRING (271) 72
TK_RETURN (272) 40 41
TK_ATRIB (273) 11 16 17 18 45 46 47
TK_CCHAR (274) 71
TK_WRITE (275) 38
TK_READ (276) 39
TK_G (277) 54
TK_L (278) 55
TK_GE (279) 56
TK_LE (280) 57
TK_DIFF (281) 58
TK_IF (282) 42 43
TK_ELSE (283) 43
TK_E (284) 59
TK_AND (285) 60
TK_OR (286) 61
TK_NOT (287) 63
TK_BREAK (288)
TK_IN (289) 66
TK_CMPARRAY (290) 65
TK_FOR (291) 44
TK_WHILE (292) 48 49
TK_DO (293) 49
TK_SWITCH (294)
TK_START (295) 1
TK_STOP (296) 1
TK_MOD (297) 62


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
S (55)
    on left: 1, on right: 0
MAIN (56)
    on left: 2 3, on right: 1
DECLS (57)
    on left: 4 5, on right: 1 4
DECL (58)
    on left: 6, on right: 4
G_VAR (59)
    on left: 7 8 9, on right: 6
VAR (60)
    on left: 10 11 12 13, on right: 37
VAR_DEFS (61)
    on left: 14 15, on right: 10 14
ATRIB (62)
    on left: 16 17 18, on right: 36
TIPO (63)
    on left: 19 20 21 22 23, on right: 7 8 9 10 11 12 13 45
BLOCO (64)
    on left: 25, on right: 2
$@1 (65)
    on left: 24, on right: 25
SUB_BLOCO (66)
    on left: 26, on right: 44 48 49
CMDS (67)
    on left: 27 28, on right: 25 26 27
CMD (68)
    on left: 29 30 31 32 33 34 35 36 37, on right: 27 42 43
CMD_WROTEU (69)
    on left: 38, on right: 29
CMD_READU (70)
    on left: 39, on right: 30
CMD_RETURN (71)
    on left: 40 41, on right: 31
CMD_IF (72)
    on left: 42 43, on right: 32
CMD_FOR (73)
    on left: 44, on right: 33
BEGIN_FOR (74)
    on left: 45 46, on right: 44
CONT_FOR (75)
    on left: 47, on right: 44
CMD_WHILE (76)
    on left: 48, on right: 34
CMD_DOWHILE (77)
    on left: 49, on right: 35
E (78)
    on left: 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67,
    on right: 11 16 17 18 38 41 42 43 44 45 46 47 48 49 50 51 52 53
    54 55 56 57 58 59 60 61 62 63 64 65 66 73 74
F (79)
    on left: 68 69 70 71 72 73 74 75, on right: 66 67
BOOL (80)
    on left: 76 77, on right: 75


State 0

    0 $accept: . S $end

    TK_START  shift, and go to state 1

    S  go to state 2


State 1

    1 S: TK_START . ';' DECLS MAIN TK_STOP ';'

    ';'  shift, and go to state 3


State 2

    0 $accept: S . $end

    $end  shift, and go to state 4


State 3

    1 S: TK_START ';' . DECLS MAIN TK_STOP ';'

    $default  reduce using rule 5 (DECLS)

    DECLS  go to state 5


State 4

    0 $accept: S $end .

    $default  accept


State 5

    1 S: TK_START ';' DECLS . MAIN TK_STOP ';'
    4 DECLS: DECLS . DECL

    TK_INT     shift, and go to state 6
    TK_CHAR    shift, and go to state 7
    TK_DOUBLE  shift, and go to state 8
    TK_STRING  shift, and go to state 9
    TK_BOOL    shift, and go to state 10
    TK_MAIN    shift, and go to state 11

    $default  reduce using rule 3 (MAIN)

    MAIN   go to state 12
    DECL   go to state 13
    G_VAR  go to state 14
    TIPO   go to state 15


State 6

   19 TIPO: TK_INT .

    $default  reduce using rule 19 (TIPO)


State 7

   20 TIPO: TK_CHAR .

    $default  reduce using rule 20 (TIPO)


State 8

   21 TIPO: TK_DOUBLE .

    $default  reduce using rule 21 (TIPO)


State 9

   22 TIPO: TK_STRING .

    $default  reduce using rule 22 (TIPO)


State 10

   23 TIPO: TK_BOOL .

    $default  reduce using rule 23 (TIPO)


State 11

    2 MAIN: TK_MAIN . BLOCO

    TK_BEGIN  shift, and go to state 16

    BLOCO  go to state 17


State 12

    1 S: TK_START ';' DECLS MAIN . TK_STOP ';'

    TK_STOP  shift, and go to state 18


State 13

    4 DECLS: DECLS DECL .

    $default  reduce using rule 4 (DECLS)


State 14

    6 DECL: G_VAR . ';'

    ';'  shift, and go to state 19


State 15

    7 G_VAR: TIPO . TK_ID
    8      | TIPO . TK_ID '[' TK_CINT ']'
    9      | TIPO . TK_ID '[' TK_CINT ']' '[' TK_CINT ']'

    TK_ID  shift, and go to state 20


State 16

   25 BLOCO: TK_BEGIN . $@1 CMDS TK_END

    $default  reduce using rule 24 ($@1)

    $@1  go to state 21


State 17

    2 MAIN: TK_MAIN BLOCO .

    $default  reduce using rule 2 (MAIN)


State 18

    1 S: TK_START ';' DECLS MAIN TK_STOP . ';'

    ';'  shift, and go to state 22


State 19

    6 DECL: G_VAR ';' .

    $default  reduce using rule 6 (DECL)


State 20

    7 G_VAR: TIPO TK_ID .
    8      | TIPO TK_ID . '[' TK_CINT ']'
    9      | TIPO TK_ID . '[' TK_CINT ']' '[' TK_CINT ']'

    '['  shift, and go to state 23

    $default  reduce using rule 7 (G_VAR)


State 21

   25 BLOCO: TK_BEGIN $@1 . CMDS TK_END

    TK_INT     shift, and go to state 6
    TK_CHAR    shift, and go to state 7
    TK_DOUBLE  shift, and go to state 8
    TK_STRING  shift, and go to state 9
    TK_BOOL    shift, and go to state 10
    TK_ID      shift, and go to state 24
    TK_RETURN  shift, and go to state 25
    TK_WRITE   shift, and go to state 26
    TK_READ    shift, and go to state 27
    TK_IF      shift, and go to state 28
    TK_FOR     shift, and go to state 29
    TK_WHILE   shift, and go to state 30
    TK_DO      shift, and go to state 31

    $default  reduce using rule 28 (CMDS)

    VAR          go to state 32
    ATRIB        go to state 33
    TIPO         go to state 34
    CMDS         go to state 35
    CMD          go to state 36
    CMD_WROTEU   go to state 37
    CMD_READU    go to state 38
    CMD_RETURN   go to state 39
    CMD_IF       go to state 40
    CMD_FOR      go to state 41
    CMD_WHILE    go to state 42
    CMD_DOWHILE  go to state 43


State 22

    1 S: TK_START ';' DECLS MAIN TK_STOP ';' .

    $default  reduce using rule 1 (S)


State 23

    8 G_VAR: TIPO TK_ID '[' . TK_CINT ']'
    9      | TIPO TK_ID '[' . TK_CINT ']' '[' TK_CINT ']'

    TK_CINT  shift, and go to state 44


State 24

   16 ATRIB: TK_ID . TK_ATRIB E
   17      | TK_ID . '[' E ']' TK_ATRIB E
   18      | TK_ID . '[' E ']' '[' E ']' TK_ATRIB E

    TK_ATRIB  shift, and go to state 45
    '['       shift, and go to state 46


State 25

   40 CMD_RETURN: TK_RETURN .
   41           | TK_RETURN . ':' E

    ':'  shift, and go to state 47

    $default  reduce using rule 40 (CMD_RETURN)


State 26

   38 CMD_WROTEU: TK_WRITE . '(' E ')'

    '('  shift, and go to state 48


State 27

   39 CMD_READU: TK_READ . '(' TK_ID ')'

    '('  shift, and go to state 49


State 28

   42 CMD_IF: TK_IF . '(' E ')' CMD
   43       | TK_IF . '(' E ')' CMD TK_ELSE CMD

    '('  shift, and go to state 50


State 29

   44 CMD_FOR: TK_FOR . '(' BEGIN_FOR ';' E ';' CONT_FOR ')' SUB_BLOCO

    '('  shift, and go to state 51


State 30

   48 CMD_WHILE: TK_WHILE . '(' E ')' SUB_BLOCO

    '('  shift, and go to state 52


State 31

   49 CMD_DOWHILE: TK_DO . SUB_BLOCO TK_WHILE '(' E ')'

    TK_BEGIN  shift, and go to state 53

    SUB_BLOCO  go to state 54


State 32

   37 CMD: VAR . ';'

    ';'  shift, and go to state 55


State 33

   36 CMD: ATRIB . ';'

    ';'  shift, and go to state 56


State 34

   10 VAR: TIPO . VAR_DEFS
   11    | TIPO . TK_ID TK_ATRIB E
   12    | TIPO . TK_ID '[' TK_CINT ']'
   13    | TIPO . TK_ID '[' TK_CINT ']' '[' TK_CINT ']'

    TK_ID  shift, and go to state 57

    VAR_DEFS  go to state 58


State 35

   25 BLOCO: TK_BEGIN $@1 CMDS . TK_END

    TK_END  shift, and go to state 59


State 36

   27 CMDS: CMD . CMDS

    TK_INT     shift, and go to state 6
    TK_CHAR    shift, and go to state 7
    TK_DOUBLE  shift, and go to state 8
    TK_STRING  shift, and go to state 9
    TK_BOOL    shift, and go to state 10
    TK_ID      shift, and go to state 24
    TK_RETURN  shift, and go to state 25
    TK_WRITE   shift, and go to state 26
    TK_READ    shift, and go to state 27
    TK_IF      shift, and go to state 28
    TK_FOR     shift, and go to state 29
    TK_WHILE   shift, and go to state 30
    TK_DO      shift, and go to state 31

    $default  reduce using rule 28 (CMDS)

    VAR          go to state 32
    ATRIB        go to state 33
    TIPO         go to state 34
    CMDS         go to state 60
    CMD          go to state 36
    CMD_WROTEU   go to state 37
    CMD_READU    go to state 38
    CMD_RETURN   go to state 39
    CMD_IF       go to state 40
    CMD_FOR      go to state 41
    CMD_WHILE    go to state 42
    CMD_DOWHILE  go to state 43


State 37

   29 CMD: CMD_WROTEU . ';'

    ';'  shift, and go to state 61


State 38

   30 CMD: CMD_READU . ';'

    ';'  shift, and go to state 62


State 39

   31 CMD: CMD_RETURN . ';'

    ';'  shift, and go to state 63


State 40

   32 CMD: CMD_IF .

    $default  reduce using rule 32 (CMD)


State 41

   33 CMD: CMD_FOR .

    $default  reduce using rule 33 (CMD)


State 42

   34 CMD: CMD_WHILE .

    $default  reduce using rule 34 (CMD)


State 43

   35 CMD: CMD_DOWHILE . ';'

    ';'  shift, and go to state 64


State 44

    8 G_VAR: TIPO TK_ID '[' TK_CINT . ']'
    9      | TIPO TK_ID '[' TK_CINT . ']' '[' TK_CINT ']'

    ']'  shift, and go to state 65


State 45

   16 ATRIB: TK_ID TK_ATRIB . E

    TK_TRUE     shift, and go to state 66
    TK_FALSE    shift, and go to state 67
    TK_ID       shift, and go to state 68
    TK_CINT     shift, and go to state 69
    TK_CDOUBLE  shift, and go to state 70
    TK_CSTRING  shift, and go to state 71
    TK_CCHAR    shift, and go to state 72
    TK_NOT      shift, and go to state 73
    '('         shift, and go to state 74

    E     go to state 75
    F     go to state 76
    BOOL  go to state 77


State 46

   17 ATRIB: TK_ID '[' . E ']' TK_ATRIB E
   18      | TK_ID '[' . E ']' '[' E ']' TK_ATRIB E

    TK_TRUE     shift, and go to state 66
    TK_FALSE    shift, and go to state 67
    TK_ID       shift, and go to state 68
    TK_CINT     shift, and go to state 69
    TK_CDOUBLE  shift, and go to state 70
    TK_CSTRING  shift, and go to state 71
    TK_CCHAR    shift, and go to state 72
    TK_NOT      shift, and go to state 73
    '('         shift, and go to state 74

    E     go to state 78
    F     go to state 76
    BOOL  go to state 77


State 47

   41 CMD_RETURN: TK_RETURN ':' . E

    TK_TRUE     shift, and go to state 66
    TK_FALSE    shift, and go to state 67
    TK_ID       shift, and go to state 68
    TK_CINT     shift, and go to state 69
    TK_CDOUBLE  shift, and go to state 70
    TK_CSTRING  shift, and go to state 71
    TK_CCHAR    shift, and go to state 72
    TK_NOT      shift, and go to state 73
    '('         shift, and go to state 74

    E     go to state 79
    F     go to state 76
    BOOL  go to state 77


State 48

   38 CMD_WROTEU: TK_WRITE '(' . E ')'

    TK_TRUE     shift, and go to state 66
    TK_FALSE    shift, and go to state 67
    TK_ID       shift, and go to state 68
    TK_CINT     shift, and go to state 69
    TK_CDOUBLE  shift, and go to state 70
    TK_CSTRING  shift, and go to state 71
    TK_CCHAR    shift, and go to state 72
    TK_NOT      shift, and go to state 73
    '('         shift, and go to state 74

    E     go to state 80
    F     go to state 76
    BOOL  go to state 77


State 49

   39 CMD_READU: TK_READ '(' . TK_ID ')'

    TK_ID  shift, and go to state 81


State 50

   42 CMD_IF: TK_IF '(' . E ')' CMD
   43       | TK_IF '(' . E ')' CMD TK_ELSE CMD

    TK_TRUE     shift, and go to state 66
    TK_FALSE    shift, and go to state 67
    TK_ID       shift, and go to state 68
    TK_CINT     shift, and go to state 69
    TK_CDOUBLE  shift, and go to state 70
    TK_CSTRING  shift, and go to state 71
    TK_CCHAR    shift, and go to state 72
    TK_NOT      shift, and go to state 73
    '('         shift, and go to state 74

    E     go to state 82
    F     go to state 76
    BOOL  go to state 77


State 51

   44 CMD_FOR: TK_FOR '(' . BEGIN_FOR ';' E ';' CONT_FOR ')' SUB_BLOCO

    TK_INT     shift, and go to state 6
    TK_CHAR    shift, and go to state 7
    TK_DOUBLE  shift, and go to state 8
    TK_STRING  shift, and go to state 9
    TK_BOOL    shift, and go to state 10
    TK_ID      shift, and go to state 83

    TIPO       go to state 84
    BEGIN_FOR  go to state 85


State 52

   48 CMD_WHILE: TK_WHILE '(' . E ')' SUB_BLOCO

    TK_TRUE     shift, and go to state 66
    TK_FALSE    shift, and go to state 67
    TK_ID       shift, and go to state 68
    TK_CINT     shift, and go to state 69
    TK_CDOUBLE  shift, and go to state 70
    TK_CSTRING  shift, and go to state 71
    TK_CCHAR    shift, and go to state 72
    TK_NOT      shift, and go to state 73
    '('         shift, and go to state 74

    E     go to state 86
    F     go to state 76
    BOOL  go to state 77


State 53

   26 SUB_BLOCO: TK_BEGIN . CMDS TK_END

    TK_INT     shift, and go to state 6
    TK_CHAR    shift, and go to state 7
    TK_DOUBLE  shift, and go to state 8
    TK_STRING  shift, and go to state 9
    TK_BOOL    shift, and go to state 10
    TK_ID      shift, and go to state 24
    TK_RETURN  shift, and go to state 25
    TK_WRITE   shift, and go to state 26
    TK_READ    shift, and go to state 27
    TK_IF      shift, and go to state 28
    TK_FOR     shift, and go to state 29
    TK_WHILE   shift, and go to state 30
    TK_DO      shift, and go to state 31

    $default  reduce using rule 28 (CMDS)

    VAR          go to state 32
    ATRIB        go to state 33
    TIPO         go to state 34
    CMDS         go to state 87
    CMD          go to state 36
    CMD_WROTEU   go to state 37
    CMD_READU    go to state 38
    CMD_RETURN   go to state 39
    CMD_IF       go to state 40
    CMD_FOR      go to state 41
    CMD_WHILE    go to state 42
    CMD_DOWHILE  go to state 43


State 54

   49 CMD_DOWHILE: TK_DO SUB_BLOCO . TK_WHILE '(' E ')'

    TK_WHILE  shift, and go to state 88


State 55

   37 CMD: VAR ';' .

    $default  reduce using rule 37 (CMD)


State 56

   36 CMD: ATRIB ';' .

    $default  reduce using rule 36 (CMD)


State 57

   11 VAR: TIPO TK_ID . TK_ATRIB E
   12    | TIPO TK_ID . '[' TK_CINT ']'
   13    | TIPO TK_ID . '[' TK_CINT ']' '[' TK_CINT ']'
   14 VAR_DEFS: TK_ID . ',' VAR_DEFS
   15         | TK_ID .

    TK_ATRIB  shift, and go to state 89
    '['       shift, and go to state 90
    ','       shift, and go to state 91

    $default  reduce using rule 15 (VAR_DEFS)


State 58

   10 VAR: TIPO VAR_DEFS .

    $default  reduce using rule 10 (VAR)


State 59

   25 BLOCO: TK_BEGIN $@1 CMDS TK_END .

    $default  reduce using rule 25 (BLOCO)


State 60

   27 CMDS: CMD CMDS .

    $default  reduce using rule 27 (CMDS)


State 61

   29 CMD: CMD_WROTEU ';' .

    $default  reduce using rule 29 (CMD)


State 62

   30 CMD: CMD_READU ';' .

    $default  reduce using rule 30 (CMD)


State 63

   31 CMD: CMD_RETURN ';' .

    $default  reduce using rule 31 (CMD)


State 64

   35 CMD: CMD_DOWHILE ';' .

    $default  reduce using rule 35 (CMD)


State 65

    8 G_VAR: TIPO TK_ID '[' TK_CINT ']' .
    9      | TIPO TK_ID '[' TK_CINT ']' . '[' TK_CINT ']'

    '['  shift, and go to state 92

    $default  reduce using rule 8 (G_VAR)


State 66

   76 BOOL: TK_TRUE .

    $default  reduce using rule 76 (BOOL)


State 67

   77 BOOL: TK_FALSE .

    $default  reduce using rule 77 (BOOL)


State 68

   68 F: TK_ID .
   73  | TK_ID . '[' E ']'
   74  | TK_ID . '[' E ']' '[' E ']'

    '['  shift, and go to state 93

    $default  reduce using rule 68 (F)


State 69

   69 F: TK_CINT .

    $default  reduce using rule 69 (F)


State 70

   70 F: TK_CDOUBLE .

    $default  reduce using rule 70 (F)


State 71

   72 F: TK_CSTRING .

    $default  reduce using rule 72 (F)


State 72

   71 F: TK_CCHAR .

    $default  reduce using rule 71 (F)


State 73

   63 E: TK_NOT . E

    TK_TRUE     shift, and go to state 66
    TK_FALSE    shift, and go to state 67
    TK_ID       shift, and go to state 68
    TK_CINT     shift, and go to state 69
    TK_CDOUBLE  shift, and go to state 70
    TK_CSTRING  shift, and go to state 71
    TK_CCHAR    shift, and go to state 72
    TK_NOT      shift, and go to state 73
    '('         shift, and go to state 74

    E     go to state 94
    F     go to state 76
    BOOL  go to state 77


State 74

   64 E: '(' . E ')'

    TK_TRUE     shift, and go to state 66
    TK_FALSE    shift, and go to state 67
    TK_ID       shift, and go to state 68
    TK_CINT     shift, and go to state 69
    TK_CDOUBLE  shift, and go to state 70
    TK_CSTRING  shift, and go to state 71
    TK_CCHAR    shift, and go to state 72
    TK_NOT      shift, and go to state 73
    '('         shift, and go to state 74

    E     go to state 95
    F     go to state 76
    BOOL  go to state 77


State 75

   16 ATRIB: TK_ID TK_ATRIB E .
   50 E: E . '+' E
   51  | E . '-' E
   52  | E . '*' E
   53  | E . '/' E
   54  | E . TK_G E
   55  | E . TK_L E
   56  | E . TK_GE E
   57  | E . TK_LE E
   58  | E . TK_DIFF E
   59  | E . TK_E E
   60  | E . TK_AND E
   61  | E . TK_OR E
   62  | E . TK_MOD E
   65  | E . TK_CMPARRAY E
   66  | E . TK_IN F

    TK_G         shift, and go to state 96
    TK_L         shift, and go to state 97
    TK_GE        shift, and go to state 98
    TK_LE        shift, and go to state 99
    TK_DIFF      shift, and go to state 100
    TK_E         shift, and go to state 101
    TK_AND       shift, and go to state 102
    TK_OR        shift, and go to state 103
    TK_IN        shift, and go to state 104
    TK_CMPARRAY  shift, and go to state 105
    '+'          shift, and go to state 106
    '-'          shift, and go to state 107
    '*'          shift, and go to state 108
    '/'          shift, and go to state 109
    TK_MOD       shift, and go to state 110

    $default  reduce using rule 16 (ATRIB)


State 76

   67 E: F .

    $default  reduce using rule 67 (E)


State 77

   75 F: BOOL .

    $default  reduce using rule 75 (F)


State 78

   17 ATRIB: TK_ID '[' E . ']' TK_ATRIB E
   18      | TK_ID '[' E . ']' '[' E ']' TK_ATRIB E
   50 E: E . '+' E
   51  | E . '-' E
   52  | E . '*' E
   53  | E . '/' E
   54  | E . TK_G E
   55  | E . TK_L E
   56  | E . TK_GE E
   57  | E . TK_LE E
   58  | E . TK_DIFF E
   59  | E . TK_E E
   60  | E . TK_AND E
   61  | E . TK_OR E
   62  | E . TK_MOD E
   65  | E . TK_CMPARRAY E
   66  | E . TK_IN F

    TK_G         shift, and go to state 96
    TK_L         shift, and go to state 97
    TK_GE        shift, and go to state 98
    TK_LE        shift, and go to state 99
    TK_DIFF      shift, and go to state 100
    TK_E         shift, and go to state 101
    TK_AND       shift, and go to state 102
    TK_OR        shift, and go to state 103
    TK_IN        shift, and go to state 104
    TK_CMPARRAY  shift, and go to state 105
    '+'          shift, and go to state 106
    '-'          shift, and go to state 107
    '*'          shift, and go to state 108
    '/'          shift, and go to state 109
    TK_MOD       shift, and go to state 110
    ']'          shift, and go to state 111


State 79

   41 CMD_RETURN: TK_RETURN ':' E .
   50 E: E . '+' E
   51  | E . '-' E
   52  | E . '*' E
   53  | E . '/' E
   54  | E . TK_G E
   55  | E . TK_L E
   56  | E . TK_GE E
   57  | E . TK_LE E
   58  | E . TK_DIFF E
   59  | E . TK_E E
   60  | E . TK_AND E
   61  | E . TK_OR E
   62  | E . TK_MOD E
   65  | E . TK_CMPARRAY E
   66  | E . TK_IN F

    TK_G         shift, and go to state 96
    TK_L         shift, and go to state 97
    TK_GE        shift, and go to state 98
    TK_LE        shift, and go to state 99
    TK_DIFF      shift, and go to state 100
    TK_E         shift, and go to state 101
    TK_AND       shift, and go to state 102
    TK_OR        shift, and go to state 103
    TK_IN        shift, and go to state 104
    TK_CMPARRAY  shift, and go to state 105
    '+'          shift, and go to state 106
    '-'          shift, and go to state 107
    '*'          shift, and go to state 108
    '/'          shift, and go to state 109
    TK_MOD       shift, and go to state 110

    $default  reduce using rule 41 (CMD_RETURN)


State 80

   38 CMD_WROTEU: TK_WRITE '(' E . ')'
   50 E: E . '+' E
   51  | E . '-' E
   52  | E . '*' E
   53  | E . '/' E
   54  | E . TK_G E
   55  | E . TK_L E
   56  | E . TK_GE E
   57  | E . TK_LE E
   58  | E . TK_DIFF E
   59  | E . TK_E E
   60  | E . TK_AND E
   61  | E . TK_OR E
   62  | E . TK_MOD E
   65  | E . TK_CMPARRAY E
   66  | E . TK_IN F

    TK_G         shift, and go to state 96
    TK_L         shift, and go to state 97
    TK_GE        shift, and go to state 98
    TK_LE        shift, and go to state 99
    TK_DIFF      shift, and go to state 100
    TK_E         shift, and go to state 101
    TK_AND       shift, and go to state 102
    TK_OR        shift, and go to state 103
    TK_IN        shift, and go to state 104
    TK_CMPARRAY  shift, and go to state 105
    '+'          shift, and go to state 106
    '-'          shift, and go to state 107
    '*'          shift, and go to state 108
    '/'          shift, and go to state 109
    TK_MOD       shift, and go to state 110
    ')'          shift, and go to state 112


State 81

   39 CMD_READU: TK_READ '(' TK_ID . ')'

    ')'  shift, and go to state 113


State 82

   42 CMD_IF: TK_IF '(' E . ')' CMD
   43       | TK_IF '(' E . ')' CMD TK_ELSE CMD
   50 E: E . '+' E
   51  | E . '-' E
   52  | E . '*' E
   53  | E . '/' E
   54  | E . TK_G E
   55  | E . TK_L E
   56  | E . TK_GE E
   57  | E . TK_LE E
   58  | E . TK_DIFF E
   59  | E . TK_E E
   60  | E . TK_AND E
   61  | E . TK_OR E
   62  | E . TK_MOD E
   65  | E . TK_CMPARRAY E
   66  | E . TK_IN F

    TK_G         shift, and go to state 96
    TK_L         shift, and go to state 97
    TK_GE        shift, and go to state 98
    TK_LE        shift, and go to state 99
    TK_DIFF      shift, and go to state 100
    TK_E         shift, and go to state 101
    TK_AND       shift, and go to state 102
    TK_OR        shift, and go to state 103
    TK_IN        shift, and go to state 104
    TK_CMPARRAY  shift, and go to state 105
    '+'          shift, and go to state 106
    '-'          shift, and go to state 107
    '*'          shift, and go to state 108
    '/'          shift, and go to state 109
    TK_MOD       shift, and go to state 110
    ')'          shift, and go to state 114


State 83

   46 BEGIN_FOR: TK_ID . TK_ATRIB E

    TK_ATRIB  shift, and go to state 115


State 84

   45 BEGIN_FOR: TIPO . TK_ID TK_ATRIB E

    TK_ID  shift, and go to state 116


State 85

   44 CMD_FOR: TK_FOR '(' BEGIN_FOR . ';' E ';' CONT_FOR ')' SUB_BLOCO

    ';'  shift, and go to state 117


State 86

   48 CMD_WHILE: TK_WHILE '(' E . ')' SUB_BLOCO
   50 E: E . '+' E
   51  | E . '-' E
   52  | E . '*' E
   53  | E . '/' E
   54  | E . TK_G E
   55  | E . TK_L E
   56  | E . TK_GE E
   57  | E . TK_LE E
   58  | E . TK_DIFF E
   59  | E . TK_E E
   60  | E . TK_AND E
   61  | E . TK_OR E
   62  | E . TK_MOD E
   65  | E . TK_CMPARRAY E
   66  | E . TK_IN F

    TK_G         shift, and go to state 96
    TK_L         shift, and go to state 97
    TK_GE        shift, and go to state 98
    TK_LE        shift, and go to state 99
    TK_DIFF      shift, and go to state 100
    TK_E         shift, and go to state 101
    TK_AND       shift, and go to state 102
    TK_OR        shift, and go to state 103
    TK_IN        shift, and go to state 104
    TK_CMPARRAY  shift, and go to state 105
    '+'          shift, and go to state 106
    '-'          shift, and go to state 107
    '*'          shift, and go to state 108
    '/'          shift, and go to state 109
    TK_MOD       shift, and go to state 110
    ')'          shift, and go to state 118


State 87

   26 SUB_BLOCO: TK_BEGIN CMDS . TK_END

    TK_END  shift, and go to state 119


State 88

   49 CMD_DOWHILE: TK_DO SUB_BLOCO TK_WHILE . '(' E ')'

    '('  shift, and go to state 120


State 89

   11 VAR: TIPO TK_ID TK_ATRIB . E

    TK_TRUE     shift, and go to state 66
    TK_FALSE    shift, and go to state 67
    TK_ID       shift, and go to state 68
    TK_CINT     shift, and go to state 69
    TK_CDOUBLE  shift, and go to state 70
    TK_CSTRING  shift, and go to state 71
    TK_CCHAR    shift, and go to state 72
    TK_NOT      shift, and go to state 73
    '('         shift, and go to state 74

    E     go to state 121
    F     go to state 76
    BOOL  go to state 77


State 90

   12 VAR: TIPO TK_ID '[' . TK_CINT ']'
   13    | TIPO TK_ID '[' . TK_CINT ']' '[' TK_CINT ']'

    TK_CINT  shift, and go to state 122


State 91

   14 VAR_DEFS: TK_ID ',' . VAR_DEFS

    TK_ID  shift, and go to state 123

    VAR_DEFS  go to state 124


State 92

    9 G_VAR: TIPO TK_ID '[' TK_CINT ']' '[' . TK_CINT ']'

    TK_CINT  shift, and go to state 125


State 93

   73 F: TK_ID '[' . E ']'
   74  | TK_ID '[' . E ']' '[' E ']'

    TK_TRUE     shift, and go to state 66
    TK_FALSE    shift, and go to state 67
    TK_ID       shift, and go to state 68
    TK_CINT     shift, and go to state 69
    TK_CDOUBLE  shift, and go to state 70
    TK_CSTRING  shift, and go to state 71
    TK_CCHAR    shift, and go to state 72
    TK_NOT      shift, and go to state 73
    '('         shift, and go to state 74

    E     go to state 126
    F     go to state 76
    BOOL  go to state 77


State 94

   50 E: E . '+' E
   51  | E . '-' E
   52  | E . '*' E
   53  | E . '/' E
   54  | E . TK_G E
   55  | E . TK_L E
   56  | E . TK_GE E
   57  | E . TK_LE E
   58  | E . TK_DIFF E
   59  | E . TK_E E
   60  | E . TK_AND E
   61  | E . TK_OR E
   62  | E . TK_MOD E
   63  | TK_NOT E .
   65  | E . TK_CMPARRAY E
   66  | E . TK_IN F

    TK_IN        shift, and go to state 104
    TK_CMPARRAY  shift, and go to state 105

    TK_IN        [reduce using rule 63 (E)]
    TK_CMPARRAY  [reduce using rule 63 (E)]
    $default     reduce using rule 63 (E)


State 95

   50 E: E . '+' E
   51  | E . '-' E
   52  | E . '*' E
   53  | E . '/' E
   54  | E . TK_G E
   55  | E . TK_L E
   56  | E . TK_GE E
   57  | E . TK_LE E
   58  | E . TK_DIFF E
   59  | E . TK_E E
   60  | E . TK_AND E
   61  | E . TK_OR E
   62  | E . TK_MOD E
   64  | '(' E . ')'
   65  | E . TK_CMPARRAY E
   66  | E . TK_IN F

    TK_G         shift, and go to state 96
    TK_L         shift, and go to state 97
    TK_GE        shift, and go to state 98
    TK_LE        shift, and go to state 99
    TK_DIFF      shift, and go to state 100
    TK_E         shift, and go to state 101
    TK_AND       shift, and go to state 102
    TK_OR        shift, and go to state 103
    TK_IN        shift, and go to state 104
    TK_CMPARRAY  shift, and go to state 105
    '+'          shift, and go to state 106
    '-'          shift, and go to state 107
    '*'          shift, and go to state 108
    '/'          shift, and go to state 109
    TK_MOD       shift, and go to state 110
    ')'          shift, and go to state 127


State 96

   54 E: E TK_G . E

    TK_TRUE     shift, and go to state 66
    TK_FALSE    shift, and go to state 67
    TK_ID       shift, and go to state 68
    TK_CINT     shift, and go to state 69
    TK_CDOUBLE  shift, and go to state 70
    TK_CSTRING  shift, and go to state 71
    TK_CCHAR    shift, and go to state 72
    TK_NOT      shift, and go to state 73
    '('         shift, and go to state 74

    E     go to state 128
    F     go to state 76
    BOOL  go to state 77


State 97

   55 E: E TK_L . E

    TK_TRUE     shift, and go to state 66
    TK_FALSE    shift, and go to state 67
    TK_ID       shift, and go to state 68
    TK_CINT     shift, and go to state 69
    TK_CDOUBLE  shift, and go to state 70
    TK_CSTRING  shift, and go to state 71
    TK_CCHAR    shift, and go to state 72
    TK_NOT      shift, and go to state 73
    '('         shift, and go to state 74

    E     go to state 129
    F     go to state 76
    BOOL  go to state 77


State 98

   56 E: E TK_GE . E

    TK_TRUE     shift, and go to state 66
    TK_FALSE    shift, and go to state 67
    TK_ID       shift, and go to state 68
    TK_CINT     shift, and go to state 69
    TK_CDOUBLE  shift, and go to state 70
    TK_CSTRING  shift, and go to state 71
    TK_CCHAR    shift, and go to state 72
    TK_NOT      shift, and go to state 73
    '('         shift, and go to state 74

    E     go to state 130
    F     go to state 76
    BOOL  go to state 77


State 99

   57 E: E TK_LE . E

    TK_TRUE     shift, and go to state 66
    TK_FALSE    shift, and go to state 67
    TK_ID       shift, and go to state 68
    TK_CINT     shift, and go to state 69
    TK_CDOUBLE  shift, and go to state 70
    TK_CSTRING  shift, and go to state 71
    TK_CCHAR    shift, and go to state 72
    TK_NOT      shift, and go to state 73
    '('         shift, and go to state 74

    E     go to state 131
    F     go to state 76
    BOOL  go to state 77


State 100

   58 E: E TK_DIFF . E

    TK_TRUE     shift, and go to state 66
    TK_FALSE    shift, and go to state 67
    TK_ID       shift, and go to state 68
    TK_CINT     shift, and go to state 69
    TK_CDOUBLE  shift, and go to state 70
    TK_CSTRING  shift, and go to state 71
    TK_CCHAR    shift, and go to state 72
    TK_NOT      shift, and go to state 73
    '('         shift, and go to state 74

    E     go to state 132
    F     go to state 76
    BOOL  go to state 77


State 101

   59 E: E TK_E . E

    TK_TRUE     shift, and go to state 66
    TK_FALSE    shift, and go to state 67
    TK_ID       shift, and go to state 68
    TK_CINT     shift, and go to state 69
    TK_CDOUBLE  shift, and go to state 70
    TK_CSTRING  shift, and go to state 71
    TK_CCHAR    shift, and go to state 72
    TK_NOT      shift, and go to state 73
    '('         shift, and go to state 74

    E     go to state 133
    F     go to state 76
    BOOL  go to state 77


State 102

   60 E: E TK_AND . E

    TK_TRUE     shift, and go to state 66
    TK_FALSE    shift, and go to state 67
    TK_ID       shift, and go to state 68
    TK_CINT     shift, and go to state 69
    TK_CDOUBLE  shift, and go to state 70
    TK_CSTRING  shift, and go to state 71
    TK_CCHAR    shift, and go to state 72
    TK_NOT      shift, and go to state 73
    '('         shift, and go to state 74

    E     go to state 134
    F     go to state 76
    BOOL  go to state 77


State 103

   61 E: E TK_OR . E

    TK_TRUE     shift, and go to state 66
    TK_FALSE    shift, and go to state 67
    TK_ID       shift, and go to state 68
    TK_CINT     shift, and go to state 69
    TK_CDOUBLE  shift, and go to state 70
    TK_CSTRING  shift, and go to state 71
    TK_CCHAR    shift, and go to state 72
    TK_NOT      shift, and go to state 73
    '('         shift, and go to state 74

    E     go to state 135
    F     go to state 76
    BOOL  go to state 77


State 104

   66 E: E TK_IN . F

    TK_TRUE     shift, and go to state 66
    TK_FALSE    shift, and go to state 67
    TK_ID       shift, and go to state 68
    TK_CINT     shift, and go to state 69
    TK_CDOUBLE  shift, and go to state 70
    TK_CSTRING  shift, and go to state 71
    TK_CCHAR    shift, and go to state 72

    F     go to state 136
    BOOL  go to state 77


State 105

   65 E: E TK_CMPARRAY . E

    TK_TRUE     shift, and go to state 66
    TK_FALSE    shift, and go to state 67
    TK_ID       shift, and go to state 68
    TK_CINT     shift, and go to state 69
    TK_CDOUBLE  shift, and go to state 70
    TK_CSTRING  shift, and go to state 71
    TK_CCHAR    shift, and go to state 72
    TK_NOT      shift, and go to state 73
    '('         shift, and go to state 74

    E     go to state 137
    F     go to state 76
    BOOL  go to state 77


State 106

   50 E: E '+' . E

    TK_TRUE     shift, and go to state 66
    TK_FALSE    shift, and go to state 67
    TK_ID       shift, and go to state 68
    TK_CINT     shift, and go to state 69
    TK_CDOUBLE  shift, and go to state 70
    TK_CSTRING  shift, and go to state 71
    TK_CCHAR    shift, and go to state 72
    TK_NOT      shift, and go to state 73
    '('         shift, and go to state 74

    E     go to state 138
    F     go to state 76
    BOOL  go to state 77


State 107

   51 E: E '-' . E

    TK_TRUE     shift, and go to state 66
    TK_FALSE    shift, and go to state 67
    TK_ID       shift, and go to state 68
    TK_CINT     shift, and go to state 69
    TK_CDOUBLE  shift, and go to state 70
    TK_CSTRING  shift, and go to state 71
    TK_CCHAR    shift, and go to state 72
    TK_NOT      shift, and go to state 73
    '('         shift, and go to state 74

    E     go to state 139
    F     go to state 76
    BOOL  go to state 77


State 108

   52 E: E '*' . E

    TK_TRUE     shift, and go to state 66
    TK_FALSE    shift, and go to state 67
    TK_ID       shift, and go to state 68
    TK_CINT     shift, and go to state 69
    TK_CDOUBLE  shift, and go to state 70
    TK_CSTRING  shift, and go to state 71
    TK_CCHAR    shift, and go to state 72
    TK_NOT      shift, and go to state 73
    '('         shift, and go to state 74

    E     go to state 140
    F     go to state 76
    BOOL  go to state 77


State 109

   53 E: E '/' . E

    TK_TRUE     shift, and go to state 66
    TK_FALSE    shift, and go to state 67
    TK_ID       shift, and go to state 68
    TK_CINT     shift, and go to state 69
    TK_CDOUBLE  shift, and go to state 70
    TK_CSTRING  shift, and go to state 71
    TK_CCHAR    shift, and go to state 72
    TK_NOT      shift, and go to state 73
    '('         shift, and go to state 74

    E     go to state 141
    F     go to state 76
    BOOL  go to state 77


State 110

   62 E: E TK_MOD . E

    TK_TRUE     shift, and go to state 66
    TK_FALSE    shift, and go to state 67
    TK_ID       shift, and go to state 68
    TK_CINT     shift, and go to state 69
    TK_CDOUBLE  shift, and go to state 70
    TK_CSTRING  shift, and go to state 71
    TK_CCHAR    shift, and go to state 72
    TK_NOT      shift, and go to state 73
    '('         shift, and go to state 74

    E     go to state 142
    F     go to state 76
    BOOL  go to state 77


State 111

   17 ATRIB: TK_ID '[' E ']' . TK_ATRIB E
   18      | TK_ID '[' E ']' . '[' E ']' TK_ATRIB E

    TK_ATRIB  shift, and go to state 143
    '['       shift, and go to state 144


State 112

   38 CMD_WROTEU: TK_WRITE '(' E ')' .

    $default  reduce using rule 38 (CMD_WROTEU)


State 113

   39 CMD_READU: TK_READ '(' TK_ID ')' .

    $default  reduce using rule 39 (CMD_READU)


State 114

   42 CMD_IF: TK_IF '(' E ')' . CMD
   43       | TK_IF '(' E ')' . CMD TK_ELSE CMD

    TK_INT     shift, and go to state 6
    TK_CHAR    shift, and go to state 7
    TK_DOUBLE  shift, and go to state 8
    TK_STRING  shift, and go to state 9
    TK_BOOL    shift, and go to state 10
    TK_ID      shift, and go to state 24
    TK_RETURN  shift, and go to state 25
    TK_WRITE   shift, and go to state 26
    TK_READ    shift, and go to state 27
    TK_IF      shift, and go to state 28
    TK_FOR     shift, and go to state 29
    TK_WHILE   shift, and go to state 30
    TK_DO      shift, and go to state 31

    VAR          go to state 32
    ATRIB        go to state 33
    TIPO         go to state 34
    CMD          go to state 145
    CMD_WROTEU   go to state 37
    CMD_READU    go to state 38
    CMD_RETURN   go to state 39
    CMD_IF       go to state 40
    CMD_FOR      go to state 41
    CMD_WHILE    go to state 42
    CMD_DOWHILE  go to state 43


State 115

   46 BEGIN_FOR: TK_ID TK_ATRIB . E

    TK_TRUE     shift, and go to state 66
    TK_FALSE    shift, and go to state 67
    TK_ID       shift, and go to state 68
    TK_CINT     shift, and go to state 69
    TK_CDOUBLE  shift, and go to state 70
    TK_CSTRING  shift, and go to state 71
    TK_CCHAR    shift, and go to state 72
    TK_NOT      shift, and go to state 73
    '('         shift, and go to state 74

    E     go to state 146
    F     go to state 76
    BOOL  go to state 77


State 116

   45 BEGIN_FOR: TIPO TK_ID . TK_ATRIB E

    TK_ATRIB  shift, and go to state 147


State 117

   44 CMD_FOR: TK_FOR '(' BEGIN_FOR ';' . E ';' CONT_FOR ')' SUB_BLOCO

    TK_TRUE     shift, and go to state 66
    TK_FALSE    shift, and go to state 67
    TK_ID       shift, and go to state 68
    TK_CINT     shift, and go to state 69
    TK_CDOUBLE  shift, and go to state 70
    TK_CSTRING  shift, and go to state 71
    TK_CCHAR    shift, and go to state 72
    TK_NOT      shift, and go to state 73
    '('         shift, and go to state 74

    E     go to state 148
    F     go to state 76
    BOOL  go to state 77


State 118

   48 CMD_WHILE: TK_WHILE '(' E ')' . SUB_BLOCO

    TK_BEGIN  shift, and go to state 53

    SUB_BLOCO  go to state 149


State 119

   26 SUB_BLOCO: TK_BEGIN CMDS TK_END .

    $default  reduce using rule 26 (SUB_BLOCO)


State 120

   49 CMD_DOWHILE: TK_DO SUB_BLOCO TK_WHILE '(' . E ')'

    TK_TRUE     shift, and go to state 66
    TK_FALSE    shift, and go to state 67
    TK_ID       shift, and go to state 68
    TK_CINT     shift, and go to state 69
    TK_CDOUBLE  shift, and go to state 70
    TK_CSTRING  shift, and go to state 71
    TK_CCHAR    shift, and go to state 72
    TK_NOT      shift, and go to state 73
    '('         shift, and go to state 74

    E     go to state 150
    F     go to state 76
    BOOL  go to state 77


State 121

   11 VAR: TIPO TK_ID TK_ATRIB E .
   50 E: E . '+' E
   51  | E . '-' E
   52  | E . '*' E
   53  | E . '/' E
   54  | E . TK_G E
   55  | E . TK_L E
   56  | E . TK_GE E
   57  | E . TK_LE E
   58  | E . TK_DIFF E
   59  | E . TK_E E
   60  | E . TK_AND E
   61  | E . TK_OR E
   62  | E . TK_MOD E
   65  | E . TK_CMPARRAY E
   66  | E . TK_IN F

    TK_G         shift, and go to state 96
    TK_L         shift, and go to state 97
    TK_GE        shift, and go to state 98
    TK_LE        shift, and go to state 99
    TK_DIFF      shift, and go to state 100
    TK_E         shift, and go to state 101
    TK_AND       shift, and go to state 102
    TK_OR        shift, and go to state 103
    TK_IN        shift, and go to state 104
    TK_CMPARRAY  shift, and go to state 105
    '+'          shift, and go to state 106
    '-'          shift, and go to state 107
    '*'          shift, and go to state 108
    '/'          shift, and go to state 109
    TK_MOD       shift, and go to state 110

    $default  reduce using rule 11 (VAR)


State 122

   12 VAR: TIPO TK_ID '[' TK_CINT . ']'
   13    | TIPO TK_ID '[' TK_CINT . ']' '[' TK_CINT ']'

    ']'  shift, and go to state 151


State 123

   14 VAR_DEFS: TK_ID . ',' VAR_DEFS
   15         | TK_ID .

    ','  shift, and go to state 91

    $default  reduce using rule 15 (VAR_DEFS)


State 124

   14 VAR_DEFS: TK_ID ',' VAR_DEFS .

    $default  reduce using rule 14 (VAR_DEFS)


State 125

    9 G_VAR: TIPO TK_ID '[' TK_CINT ']' '[' TK_CINT . ']'

    ']'  shift, and go to state 152


State 126

   50 E: E . '+' E
   51  | E . '-' E
   52  | E . '*' E
   53  | E . '/' E
   54  | E . TK_G E
   55  | E . TK_L E
   56  | E . TK_GE E
   57  | E . TK_LE E
   58  | E . TK_DIFF E
   59  | E . TK_E E
   60  | E . TK_AND E
   61  | E . TK_OR E
   62  | E . TK_MOD E
   65  | E . TK_CMPARRAY E
   66  | E . TK_IN F
   73 F: TK_ID '[' E . ']'
   74  | TK_ID '[' E . ']' '[' E ']'

    TK_G         shift, and go to state 96
    TK_L         shift, and go to state 97
    TK_GE        shift, and go to state 98
    TK_LE        shift, and go to state 99
    TK_DIFF      shift, and go to state 100
    TK_E         shift, and go to state 101
    TK_AND       shift, and go to state 102
    TK_OR        shift, and go to state 103
    TK_IN        shift, and go to state 104
    TK_CMPARRAY  shift, and go to state 105
    '+'          shift, and go to state 106
    '-'          shift, and go to state 107
    '*'          shift, and go to state 108
    '/'          shift, and go to state 109
    TK_MOD       shift, and go to state 110
    ']'          shift, and go to state 153


State 127

   64 E: '(' E ')' .

    $default  reduce using rule 64 (E)


State 128

   50 E: E . '+' E
   51  | E . '-' E
   52  | E . '*' E
   53  | E . '/' E
   54  | E . TK_G E
   54  | E TK_G E .
   55  | E . TK_L E
   56  | E . TK_GE E
   57  | E . TK_LE E
   58  | E . TK_DIFF E
   59  | E . TK_E E
   60  | E . TK_AND E
   61  | E . TK_OR E
   62  | E . TK_MOD E
   65  | E . TK_CMPARRAY E
   66  | E . TK_IN F

    TK_IN        shift, and go to state 104
    TK_CMPARRAY  shift, and go to state 105
    '+'          shift, and go to state 106
    '-'          shift, and go to state 107
    '*'          shift, and go to state 108
    '/'          shift, and go to state 109
    TK_MOD       shift, and go to state 110

    TK_G     error (nonassociative)
    TK_L     error (nonassociative)
    TK_GE    error (nonassociative)
    TK_LE    error (nonassociative)
    TK_DIFF  error (nonassociative)
    TK_E     error (nonassociative)

    TK_IN        [reduce using rule 54 (E)]
    TK_CMPARRAY  [reduce using rule 54 (E)]
    $default     reduce using rule 54 (E)


State 129

   50 E: E . '+' E
   51  | E . '-' E
   52  | E . '*' E
   53  | E . '/' E
   54  | E . TK_G E
   55  | E . TK_L E
   55  | E TK_L E .
   56  | E . TK_GE E
   57  | E . TK_LE E
   58  | E . TK_DIFF E
   59  | E . TK_E E
   60  | E . TK_AND E
   61  | E . TK_OR E
   62  | E . TK_MOD E
   65  | E . TK_CMPARRAY E
   66  | E . TK_IN F

    TK_IN        shift, and go to state 104
    TK_CMPARRAY  shift, and go to state 105
    '+'          shift, and go to state 106
    '-'          shift, and go to state 107
    '*'          shift, and go to state 108
    '/'          shift, and go to state 109
    TK_MOD       shift, and go to state 110

    TK_G     error (nonassociative)
    TK_L     error (nonassociative)
    TK_GE    error (nonassociative)
    TK_LE    error (nonassociative)
    TK_DIFF  error (nonassociative)
    TK_E     error (nonassociative)

    TK_IN        [reduce using rule 55 (E)]
    TK_CMPARRAY  [reduce using rule 55 (E)]
    $default     reduce using rule 55 (E)


State 130

   50 E: E . '+' E
   51  | E . '-' E
   52  | E . '*' E
   53  | E . '/' E
   54  | E . TK_G E
   55  | E . TK_L E
   56  | E . TK_GE E
   56  | E TK_GE E .
   57  | E . TK_LE E
   58  | E . TK_DIFF E
   59  | E . TK_E E
   60  | E . TK_AND E
   61  | E . TK_OR E
   62  | E . TK_MOD E
   65  | E . TK_CMPARRAY E
   66  | E . TK_IN F

    TK_IN        shift, and go to state 104
    TK_CMPARRAY  shift, and go to state 105
    '+'          shift, and go to state 106
    '-'          shift, and go to state 107
    '*'          shift, and go to state 108
    '/'          shift, and go to state 109
    TK_MOD       shift, and go to state 110

    TK_G     error (nonassociative)
    TK_L     error (nonassociative)
    TK_GE    error (nonassociative)
    TK_LE    error (nonassociative)
    TK_DIFF  error (nonassociative)
    TK_E     error (nonassociative)

    TK_IN        [reduce using rule 56 (E)]
    TK_CMPARRAY  [reduce using rule 56 (E)]
    $default     reduce using rule 56 (E)


State 131

   50 E: E . '+' E
   51  | E . '-' E
   52  | E . '*' E
   53  | E . '/' E
   54  | E . TK_G E
   55  | E . TK_L E
   56  | E . TK_GE E
   57  | E . TK_LE E
   57  | E TK_LE E .
   58  | E . TK_DIFF E
   59  | E . TK_E E
   60  | E . TK_AND E
   61  | E . TK_OR E
   62  | E . TK_MOD E
   65  | E . TK_CMPARRAY E
   66  | E . TK_IN F

    TK_IN        shift, and go to state 104
    TK_CMPARRAY  shift, and go to state 105
    '+'          shift, and go to state 106
    '-'          shift, and go to state 107
    '*'          shift, and go to state 108
    '/'          shift, and go to state 109
    TK_MOD       shift, and go to state 110

    TK_G     error (nonassociative)
    TK_L     error (nonassociative)
    TK_GE    error (nonassociative)
    TK_LE    error (nonassociative)
    TK_DIFF  error (nonassociative)
    TK_E     error (nonassociative)

    TK_IN        [reduce using rule 57 (E)]
    TK_CMPARRAY  [reduce using rule 57 (E)]
    $default     reduce using rule 57 (E)


State 132

   50 E: E . '+' E
   51  | E . '-' E
   52  | E . '*' E
   53  | E . '/' E
   54  | E . TK_G E
   55  | E . TK_L E
   56  | E . TK_GE E
   57  | E . TK_LE E
   58  | E . TK_DIFF E
   58  | E TK_DIFF E .
   59  | E . TK_E E
   60  | E . TK_AND E
   61  | E . TK_OR E
   62  | E . TK_MOD E
   65  | E . TK_CMPARRAY E
   66  | E . TK_IN F

    TK_IN        shift, and go to state 104
    TK_CMPARRAY  shift, and go to state 105
    '+'          shift, and go to state 106
    '-'          shift, and go to state 107
    '*'          shift, and go to state 108
    '/'          shift, and go to state 109
    TK_MOD       shift, and go to state 110

    TK_G     error (nonassociative)
    TK_L     error (nonassociative)
    TK_GE    error (nonassociative)
    TK_LE    error (nonassociative)
    TK_DIFF  error (nonassociative)
    TK_E     error (nonassociative)

    TK_IN        [reduce using rule 58 (E)]
    TK_CMPARRAY  [reduce using rule 58 (E)]
    $default     reduce using rule 58 (E)


State 133

   50 E: E . '+' E
   51  | E . '-' E
   52  | E . '*' E
   53  | E . '/' E
   54  | E . TK_G E
   55  | E . TK_L E
   56  | E . TK_GE E
   57  | E . TK_LE E
   58  | E . TK_DIFF E
   59  | E . TK_E E
   59  | E TK_E E .
   60  | E . TK_AND E
   61  | E . TK_OR E
   62  | E . TK_MOD E
   65  | E . TK_CMPARRAY E
   66  | E . TK_IN F

    TK_IN        shift, and go to state 104
    TK_CMPARRAY  shift, and go to state 105
    '+'          shift, and go to state 106
    '-'          shift, and go to state 107
    '*'          shift, and go to state 108
    '/'          shift, and go to state 109
    TK_MOD       shift, and go to state 110

    TK_G     error (nonassociative)
    TK_L     error (nonassociative)
    TK_GE    error (nonassociative)
    TK_LE    error (nonassociative)
    TK_DIFF  error (nonassociative)
    TK_E     error (nonassociative)

    TK_IN        [reduce using rule 59 (E)]
    TK_CMPARRAY  [reduce using rule 59 (E)]
    $default     reduce using rule 59 (E)


State 134

   50 E: E . '+' E
   51  | E . '-' E
   52  | E . '*' E
   53  | E . '/' E
   54  | E . TK_G E
   55  | E . TK_L E
   56  | E . TK_GE E
   57  | E . TK_LE E
   58  | E . TK_DIFF E
   59  | E . TK_E E
   60  | E . TK_AND E
   60  | E TK_AND E .
   61  | E . TK_OR E
   62  | E . TK_MOD E
   65  | E . TK_CMPARRAY E
   66  | E . TK_IN F

    TK_G         shift, and go to state 96
    TK_L         shift, and go to state 97
    TK_GE        shift, and go to state 98
    TK_LE        shift, and go to state 99
    TK_DIFF      shift, and go to state 100
    TK_E         shift, and go to state 101
    TK_IN        shift, and go to state 104
    TK_CMPARRAY  shift, and go to state 105
    '+'          shift, and go to state 106
    '-'          shift, and go to state 107
    '*'          shift, and go to state 108
    '/'          shift, and go to state 109
    TK_MOD       shift, and go to state 110

    TK_IN        [reduce using rule 60 (E)]
    TK_CMPARRAY  [reduce using rule 60 (E)]
    $default     reduce using rule 60 (E)


State 135

   50 E: E . '+' E
   51  | E . '-' E
   52  | E . '*' E
   53  | E . '/' E
   54  | E . TK_G E
   55  | E . TK_L E
   56  | E . TK_GE E
   57  | E . TK_LE E
   58  | E . TK_DIFF E
   59  | E . TK_E E
   60  | E . TK_AND E
   61  | E . TK_OR E
   61  | E TK_OR E .
   62  | E . TK_MOD E
   65  | E . TK_CMPARRAY E
   66  | E . TK_IN F

    TK_G         shift, and go to state 96
    TK_L         shift, and go to state 97
    TK_GE        shift, and go to state 98
    TK_LE        shift, and go to state 99
    TK_DIFF      shift, and go to state 100
    TK_E         shift, and go to state 101
    TK_AND       shift, and go to state 102
    TK_IN        shift, and go to state 104
    TK_CMPARRAY  shift, and go to state 105
    '+'          shift, and go to state 106
    '-'          shift, and go to state 107
    '*'          shift, and go to state 108
    '/'          shift, and go to state 109
    TK_MOD       shift, and go to state 110

    TK_IN        [reduce using rule 61 (E)]
    TK_CMPARRAY  [reduce using rule 61 (E)]
    $default     reduce using rule 61 (E)


State 136

   66 E: E TK_IN F .

    $default  reduce using rule 66 (E)


State 137

   50 E: E . '+' E
   51  | E . '-' E
   52  | E . '*' E
   53  | E . '/' E
   54  | E . TK_G E
   55  | E . TK_L E
   56  | E . TK_GE E
   57  | E . TK_LE E
   58  | E . TK_DIFF E
   59  | E . TK_E E
   60  | E . TK_AND E
   61  | E . TK_OR E
   62  | E . TK_MOD E
   65  | E . TK_CMPARRAY E
   65  | E TK_CMPARRAY E .
   66  | E . TK_IN F

    TK_G         shift, and go to state 96
    TK_L         shift, and go to state 97
    TK_GE        shift, and go to state 98
    TK_LE        shift, and go to state 99
    TK_DIFF      shift, and go to state 100
    TK_E         shift, and go to state 101
    TK_AND       shift, and go to state 102
    TK_OR        shift, and go to state 103
    TK_IN        shift, and go to state 104
    TK_CMPARRAY  shift, and go to state 105
    '+'          shift, and go to state 106
    '-'          shift, and go to state 107
    '*'          shift, and go to state 108
    '/'          shift, and go to state 109
    TK_MOD       shift, and go to state 110

    TK_G         [reduce using rule 65 (E)]
    TK_L         [reduce using rule 65 (E)]
    TK_GE        [reduce using rule 65 (E)]
    TK_LE        [reduce using rule 65 (E)]
    TK_DIFF      [reduce using rule 65 (E)]
    TK_E         [reduce using rule 65 (E)]
    TK_AND       [reduce using rule 65 (E)]
    TK_OR        [reduce using rule 65 (E)]
    TK_IN        [reduce using rule 65 (E)]
    TK_CMPARRAY  [reduce using rule 65 (E)]
    '+'          [reduce using rule 65 (E)]
    '-'          [reduce using rule 65 (E)]
    '*'          [reduce using rule 65 (E)]
    '/'          [reduce using rule 65 (E)]
    TK_MOD       [reduce using rule 65 (E)]
    $default     reduce using rule 65 (E)


State 138

   50 E: E . '+' E
   50  | E '+' E .
   51  | E . '-' E
   52  | E . '*' E
   53  | E . '/' E
   54  | E . TK_G E
   55  | E . TK_L E
   56  | E . TK_GE E
   57  | E . TK_LE E
   58  | E . TK_DIFF E
   59  | E . TK_E E
   60  | E . TK_AND E
   61  | E . TK_OR E
   62  | E . TK_MOD E
   65  | E . TK_CMPARRAY E
   66  | E . TK_IN F

    TK_IN        shift, and go to state 104
    TK_CMPARRAY  shift, and go to state 105
    '*'          shift, and go to state 108
    '/'          shift, and go to state 109
    TK_MOD       shift, and go to state 110

    TK_IN        [reduce using rule 50 (E)]
    TK_CMPARRAY  [reduce using rule 50 (E)]
    $default     reduce using rule 50 (E)


State 139

   50 E: E . '+' E
   51  | E . '-' E
   51  | E '-' E .
   52  | E . '*' E
   53  | E . '/' E
   54  | E . TK_G E
   55  | E . TK_L E
   56  | E . TK_GE E
   57  | E . TK_LE E
   58  | E . TK_DIFF E
   59  | E . TK_E E
   60  | E . TK_AND E
   61  | E . TK_OR E
   62  | E . TK_MOD E
   65  | E . TK_CMPARRAY E
   66  | E . TK_IN F

    TK_IN        shift, and go to state 104
    TK_CMPARRAY  shift, and go to state 105
    '*'          shift, and go to state 108
    '/'          shift, and go to state 109
    TK_MOD       shift, and go to state 110

    TK_IN        [reduce using rule 51 (E)]
    TK_CMPARRAY  [reduce using rule 51 (E)]
    $default     reduce using rule 51 (E)


State 140

   50 E: E . '+' E
   51  | E . '-' E
   52  | E . '*' E
   52  | E '*' E .
   53  | E . '/' E
   54  | E . TK_G E
   55  | E . TK_L E
   56  | E . TK_GE E
   57  | E . TK_LE E
   58  | E . TK_DIFF E
   59  | E . TK_E E
   60  | E . TK_AND E
   61  | E . TK_OR E
   62  | E . TK_MOD E
   65  | E . TK_CMPARRAY E
   66  | E . TK_IN F

    TK_IN        shift, and go to state 104
    TK_CMPARRAY  shift, and go to state 105

    TK_IN        [reduce using rule 52 (E)]
    TK_CMPARRAY  [reduce using rule 52 (E)]
    $default     reduce using rule 52 (E)


State 141

   50 E: E . '+' E
   51  | E . '-' E
   52  | E . '*' E
   53  | E . '/' E
   53  | E '/' E .
   54  | E . TK_G E
   55  | E . TK_L E
   56  | E . TK_GE E
   57  | E . TK_LE E
   58  | E . TK_DIFF E
   59  | E . TK_E E
   60  | E . TK_AND E
   61  | E . TK_OR E
   62  | E . TK_MOD E
   65  | E . TK_CMPARRAY E
   66  | E . TK_IN F

    TK_IN        shift, and go to state 104
    TK_CMPARRAY  shift, and go to state 105

    TK_IN        [reduce using rule 53 (E)]
    TK_CMPARRAY  [reduce using rule 53 (E)]
    $default     reduce using rule 53 (E)


State 142

   50 E: E . '+' E
   51  | E . '-' E
   52  | E . '*' E
   53  | E . '/' E
   54  | E . TK_G E
   55  | E . TK_L E
   56  | E . TK_GE E
   57  | E . TK_LE E
   58  | E . TK_DIFF E
   59  | E . TK_E E
   60  | E . TK_AND E
   61  | E . TK_OR E
   62  | E . TK_MOD E
   62  | E TK_MOD E .
   65  | E . TK_CMPARRAY E
   66  | E . TK_IN F

    TK_IN        shift, and go to state 104
    TK_CMPARRAY  shift, and go to state 105

    TK_IN        [reduce using rule 62 (E)]
    TK_CMPARRAY  [reduce using rule 62 (E)]
    $default     reduce using rule 62 (E)


State 143

   17 ATRIB: TK_ID '[' E ']' TK_ATRIB . E

    TK_TRUE     shift, and go to state 66
    TK_FALSE    shift, and go to state 67
    TK_ID       shift, and go to state 68
    TK_CINT     shift, and go to state 69
    TK_CDOUBLE  shift, and go to state 70
    TK_CSTRING  shift, and go to state 71
    TK_CCHAR    shift, and go to state 72
    TK_NOT      shift, and go to state 73
    '('         shift, and go to state 74

    E     go to state 154
    F     go to state 76
    BOOL  go to state 77


State 144

   18 ATRIB: TK_ID '[' E ']' '[' . E ']' TK_ATRIB E

    TK_TRUE     shift, and go to state 66
    TK_FALSE    shift, and go to state 67
    TK_ID       shift, and go to state 68
    TK_CINT     shift, and go to state 69
    TK_CDOUBLE  shift, and go to state 70
    TK_CSTRING  shift, and go to state 71
    TK_CCHAR    shift, and go to state 72
    TK_NOT      shift, and go to state 73
    '('         shift, and go to state 74

    E     go to state 155
    F     go to state 76
    BOOL  go to state 77


State 145

   42 CMD_IF: TK_IF '(' E ')' CMD .
   43       | TK_IF '(' E ')' CMD . TK_ELSE CMD

    TK_ELSE  shift, and go to state 156

    TK_ELSE   [reduce using rule 42 (CMD_IF)]
    $default  reduce using rule 42 (CMD_IF)


State 146

   46 BEGIN_FOR: TK_ID TK_ATRIB E .
   50 E: E . '+' E
   51  | E . '-' E
   52  | E . '*' E
   53  | E . '/' E
   54  | E . TK_G E
   55  | E . TK_L E
   56  | E . TK_GE E
   57  | E . TK_LE E
   58  | E . TK_DIFF E
   59  | E . TK_E E
   60  | E . TK_AND E
   61  | E . TK_OR E
   62  | E . TK_MOD E
   65  | E . TK_CMPARRAY E
   66  | E . TK_IN F

    TK_G         shift, and go to state 96
    TK_L         shift, and go to state 97
    TK_GE        shift, and go to state 98
    TK_LE        shift, and go to state 99
    TK_DIFF      shift, and go to state 100
    TK_E         shift, and go to state 101
    TK_AND       shift, and go to state 102
    TK_OR        shift, and go to state 103
    TK_IN        shift, and go to state 104
    TK_CMPARRAY  shift, and go to state 105
    '+'          shift, and go to state 106
    '-'          shift, and go to state 107
    '*'          shift, and go to state 108
    '/'          shift, and go to state 109
    TK_MOD       shift, and go to state 110

    $default  reduce using rule 46 (BEGIN_FOR)


State 147

   45 BEGIN_FOR: TIPO TK_ID TK_ATRIB . E

    TK_TRUE     shift, and go to state 66
    TK_FALSE    shift, and go to state 67
    TK_ID       shift, and go to state 68
    TK_CINT     shift, and go to state 69
    TK_CDOUBLE  shift, and go to state 70
    TK_CSTRING  shift, and go to state 71
    TK_CCHAR    shift, and go to state 72
    TK_NOT      shift, and go to state 73
    '('         shift, and go to state 74

    E     go to state 157
    F     go to state 76
    BOOL  go to state 77


State 148

   44 CMD_FOR: TK_FOR '(' BEGIN_FOR ';' E . ';' CONT_FOR ')' SUB_BLOCO
   50 E: E . '+' E
   51  | E . '-' E
   52  | E . '*' E
   53  | E . '/' E
   54  | E . TK_G E
   55  | E . TK_L E
   56  | E . TK_GE E
   57  | E . TK_LE E
   58  | E . TK_DIFF E
   59  | E . TK_E E
   60  | E . TK_AND E
   61  | E . TK_OR E
   62  | E . TK_MOD E
   65  | E . TK_CMPARRAY E
   66  | E . TK_IN F

    TK_G         shift, and go to state 96
    TK_L         shift, and go to state 97
    TK_GE        shift, and go to state 98
    TK_LE        shift, and go to state 99
    TK_DIFF      shift, and go to state 100
    TK_E         shift, and go to state 101
    TK_AND       shift, and go to state 102
    TK_OR        shift, and go to state 103
    TK_IN        shift, and go to state 104
    TK_CMPARRAY  shift, and go to state 105
    '+'          shift, and go to state 106
    '-'          shift, and go to state 107
    '*'          shift, and go to state 108
    '/'          shift, and go to state 109
    TK_MOD       shift, and go to state 110
    ';'          shift, and go to state 158


State 149

   48 CMD_WHILE: TK_WHILE '(' E ')' SUB_BLOCO .

    $default  reduce using rule 48 (CMD_WHILE)


State 150

   49 CMD_DOWHILE: TK_DO SUB_BLOCO TK_WHILE '(' E . ')'
   50 E: E . '+' E
   51  | E . '-' E
   52  | E . '*' E
   53  | E . '/' E
   54  | E . TK_G E
   55  | E . TK_L E
   56  | E . TK_GE E
   57  | E . TK_LE E
   58  | E . TK_DIFF E
   59  | E . TK_E E
   60  | E . TK_AND E
   61  | E . TK_OR E
   62  | E . TK_MOD E
   65  | E . TK_CMPARRAY E
   66  | E . TK_IN F

    TK_G         shift, and go to state 96
    TK_L         shift, and go to state 97
    TK_GE        shift, and go to state 98
    TK_LE        shift, and go to state 99
    TK_DIFF      shift, and go to state 100
    TK_E         shift, and go to state 101
    TK_AND       shift, and go to state 102
    TK_OR        shift, and go to state 103
    TK_IN        shift, and go to state 104
    TK_CMPARRAY  shift, and go to state 105
    '+'          shift, and go to state 106
    '-'          shift, and go to state 107
    '*'          shift, and go to state 108
    '/'          shift, and go to state 109
    TK_MOD       shift, and go to state 110
    ')'          shift, and go to state 159


State 151

   12 VAR: TIPO TK_ID '[' TK_CINT ']' .
   13    | TIPO TK_ID '[' TK_CINT ']' . '[' TK_CINT ']'

    '['  shift, and go to state 160

    $default  reduce using rule 12 (VAR)


State 152

    9 G_VAR: TIPO TK_ID '[' TK_CINT ']' '[' TK_CINT ']' .

    $default  reduce using rule 9 (G_VAR)


State 153

   73 F: TK_ID '[' E ']' .
   74  | TK_ID '[' E ']' . '[' E ']'

    '['  shift, and go to state 161

    $default  reduce using rule 73 (F)


State 154

   17 ATRIB: TK_ID '[' E ']' TK_ATRIB E .
   50 E: E . '+' E
   51  | E . '-' E
   52  | E . '*' E
   53  | E . '/' E
   54  | E . TK_G E
   55  | E . TK_L E
   56  | E . TK_GE E
   57  | E . TK_LE E
   58  | E . TK_DIFF E
   59  | E . TK_E E
   60  | E . TK_AND E
   61  | E . TK_OR E
   62  | E . TK_MOD E
   65  | E . TK_CMPARRAY E
   66  | E . TK_IN F

    TK_G         shift, and go to state 96
    TK_L         shift, and go to state 97
    TK_GE        shift, and go to state 98
    TK_LE        shift, and go to state 99
    TK_DIFF      shift, and go to state 100
    TK_E         shift, and go to state 101
    TK_AND       shift, and go to state 102
    TK_OR        shift, and go to state 103
    TK_IN        shift, and go to state 104
    TK_CMPARRAY  shift, and go to state 105
    '+'          shift, and go to state 106
    '-'          shift, and go to state 107
    '*'          shift, and go to state 108
    '/'          shift, and go to state 109
    TK_MOD       shift, and go to state 110

    $default  reduce using rule 17 (ATRIB)


State 155

   18 ATRIB: TK_ID '[' E ']' '[' E . ']' TK_ATRIB E
   50 E: E . '+' E
   51  | E . '-' E
   52  | E . '*' E
   53  | E . '/' E
   54  | E . TK_G E
   55  | E . TK_L E
   56  | E . TK_GE E
   57  | E . TK_LE E
   58  | E . TK_DIFF E
   59  | E . TK_E E
   60  | E . TK_AND E
   61  | E . TK_OR E
   62  | E . TK_MOD E
   65  | E . TK_CMPARRAY E
   66  | E . TK_IN F

    TK_G         shift, and go to state 96
    TK_L         shift, and go to state 97
    TK_GE        shift, and go to state 98
    TK_LE        shift, and go to state 99
    TK_DIFF      shift, and go to state 100
    TK_E         shift, and go to state 101
    TK_AND       shift, and go to state 102
    TK_OR        shift, and go to state 103
    TK_IN        shift, and go to state 104
    TK_CMPARRAY  shift, and go to state 105
    '+'          shift, and go to state 106
    '-'          shift, and go to state 107
    '*'          shift, and go to state 108
    '/'          shift, and go to state 109
    TK_MOD       shift, and go to state 110
    ']'          shift, and go to state 162


State 156

   43 CMD_IF: TK_IF '(' E ')' CMD TK_ELSE . CMD

    TK_INT     shift, and go to state 6
    TK_CHAR    shift, and go to state 7
    TK_DOUBLE  shift, and go to state 8
    TK_STRING  shift, and go to state 9
    TK_BOOL    shift, and go to state 10
    TK_ID      shift, and go to state 24
    TK_RETURN  shift, and go to state 25
    TK_WRITE   shift, and go to state 26
    TK_READ    shift, and go to state 27
    TK_IF      shift, and go to state 28
    TK_FOR     shift, and go to state 29
    TK_WHILE   shift, and go to state 30
    TK_DO      shift, and go to state 31

    VAR          go to state 32
    ATRIB        go to state 33
    TIPO         go to state 34
    CMD          go to state 163
    CMD_WROTEU   go to state 37
    CMD_READU    go to state 38
    CMD_RETURN   go to state 39
    CMD_IF       go to state 40
    CMD_FOR      go to state 41
    CMD_WHILE    go to state 42
    CMD_DOWHILE  go to state 43


State 157

   45 BEGIN_FOR: TIPO TK_ID TK_ATRIB E .
   50 E: E . '+' E
   51  | E . '-' E
   52  | E . '*' E
   53  | E . '/' E
   54  | E . TK_G E
   55  | E . TK_L E
   56  | E . TK_GE E
   57  | E . TK_LE E
   58  | E . TK_DIFF E
   59  | E . TK_E E
   60  | E . TK_AND E
   61  | E . TK_OR E
   62  | E . TK_MOD E
   65  | E . TK_CMPARRAY E
   66  | E . TK_IN F

    TK_G         shift, and go to state 96
    TK_L         shift, and go to state 97
    TK_GE        shift, and go to state 98
    TK_LE        shift, and go to state 99
    TK_DIFF      shift, and go to state 100
    TK_E         shift, and go to state 101
    TK_AND       shift, and go to state 102
    TK_OR        shift, and go to state 103
    TK_IN        shift, and go to state 104
    TK_CMPARRAY  shift, and go to state 105
    '+'          shift, and go to state 106
    '-'          shift, and go to state 107
    '*'          shift, and go to state 108
    '/'          shift, and go to state 109
    TK_MOD       shift, and go to state 110

    $default  reduce using rule 45 (BEGIN_FOR)


State 158

   44 CMD_FOR: TK_FOR '(' BEGIN_FOR ';' E ';' . CONT_FOR ')' SUB_BLOCO

    TK_ID  shift, and go to state 164

    CONT_FOR  go to state 165


State 159

   49 CMD_DOWHILE: TK_DO SUB_BLOCO TK_WHILE '(' E ')' .

    $default  reduce using rule 49 (CMD_DOWHILE)


State 160

   13 VAR: TIPO TK_ID '[' TK_CINT ']' '[' . TK_CINT ']'

    TK_CINT  shift, and go to state 166


State 161

   74 F: TK_ID '[' E ']' '[' . E ']'

    TK_TRUE     shift, and go to state 66
    TK_FALSE    shift, and go to state 67
    TK_ID       shift, and go to state 68
    TK_CINT     shift, and go to state 69
    TK_CDOUBLE  shift, and go to state 70
    TK_CSTRING  shift, and go to state 71
    TK_CCHAR    shift, and go to state 72
    TK_NOT      shift, and go to state 73
    '('         shift, and go to state 74

    E     go to state 167
    F     go to state 76
    BOOL  go to state 77


State 162

   18 ATRIB: TK_ID '[' E ']' '[' E ']' . TK_ATRIB E

    TK_ATRIB  shift, and go to state 168


State 163

   43 CMD_IF: TK_IF '(' E ')' CMD TK_ELSE CMD .

    $default  reduce using rule 43 (CMD_IF)


State 164

   47 CONT_FOR: TK_ID . TK_ATRIB E

    TK_ATRIB  shift, and go to state 169


State 165

   44 CMD_FOR: TK_FOR '(' BEGIN_FOR ';' E ';' CONT_FOR . ')' SUB_BLOCO

    ')'  shift, and go to state 170


State 166

   13 VAR: TIPO TK_ID '[' TK_CINT ']' '[' TK_CINT . ']'

    ']'  shift, and go to state 171


State 167

   50 E: E . '+' E
   51  | E . '-' E
   52  | E . '*' E
   53  | E . '/' E
   54  | E . TK_G E
   55  | E . TK_L E
   56  | E . TK_GE E
   57  | E . TK_LE E
   58  | E . TK_DIFF E
   59  | E . TK_E E
   60  | E . TK_AND E
   61  | E . TK_OR E
   62  | E . TK_MOD E
   65  | E . TK_CMPARRAY E
   66  | E . TK_IN F
   74 F: TK_ID '[' E ']' '[' E . ']'

    TK_G         shift, and go to state 96
    TK_L         shift, and go to state 97
    TK_GE        shift, and go to state 98
    TK_LE        shift, and go to state 99
    TK_DIFF      shift, and go to state 100
    TK_E         shift, and go to state 101
    TK_AND       shift, and go to state 102
    TK_OR        shift, and go to state 103
    TK_IN        shift, and go to state 104
    TK_CMPARRAY  shift, and go to state 105
    '+'          shift, and go to state 106
    '-'          shift, and go to state 107
    '*'          shift, and go to state 108
    '/'          shift, and go to state 109
    TK_MOD       shift, and go to state 110
    ']'          shift, and go to state 172


State 168

   18 ATRIB: TK_ID '[' E ']' '[' E ']' TK_ATRIB . E

    TK_TRUE     shift, and go to state 66
    TK_FALSE    shift, and go to state 67
    TK_ID       shift, and go to state 68
    TK_CINT     shift, and go to state 69
    TK_CDOUBLE  shift, and go to state 70
    TK_CSTRING  shift, and go to state 71
    TK_CCHAR    shift, and go to state 72
    TK_NOT      shift, and go to state 73
    '('         shift, and go to state 74

    E     go to state 173
    F     go to state 76
    BOOL  go to state 77


State 169

   47 CONT_FOR: TK_ID TK_ATRIB . E

    TK_TRUE     shift, and go to state 66
    TK_FALSE    shift, and go to state 67
    TK_ID       shift, and go to state 68
    TK_CINT     shift, and go to state 69
    TK_CDOUBLE  shift, and go to state 70
    TK_CSTRING  shift, and go to state 71
    TK_CCHAR    shift, and go to state 72
    TK_NOT      shift, and go to state 73
    '('         shift, and go to state 74

    E     go to state 174
    F     go to state 76
    BOOL  go to state 77


State 170

   44 CMD_FOR: TK_FOR '(' BEGIN_FOR ';' E ';' CONT_FOR ')' . SUB_BLOCO

    TK_BEGIN  shift, and go to state 53

    SUB_BLOCO  go to state 175


State 171

   13 VAR: TIPO TK_ID '[' TK_CINT ']' '[' TK_CINT ']' .

    $default  reduce using rule 13 (VAR)


State 172

   74 F: TK_ID '[' E ']' '[' E ']' .

    $default  reduce using rule 74 (F)


State 173

   18 ATRIB: TK_ID '[' E ']' '[' E ']' TK_ATRIB E .
   50 E: E . '+' E
   51  | E . '-' E
   52  | E . '*' E
   53  | E . '/' E
   54  | E . TK_G E
   55  | E . TK_L E
   56  | E . TK_GE E
   57  | E . TK_LE E
   58  | E . TK_DIFF E
   59  | E . TK_E E
   60  | E . TK_AND E
   61  | E . TK_OR E
   62  | E . TK_MOD E
   65  | E . TK_CMPARRAY E
   66  | E . TK_IN F

    TK_G         shift, and go to state 96
    TK_L         shift, and go to state 97
    TK_GE        shift, and go to state 98
    TK_LE        shift, and go to state 99
    TK_DIFF      shift, and go to state 100
    TK_E         shift, and go to state 101
    TK_AND       shift, and go to state 102
    TK_OR        shift, and go to state 103
    TK_IN        shift, and go to state 104
    TK_CMPARRAY  shift, and go to state 105
    '+'          shift, and go to state 106
    '-'          shift, and go to state 107
    '*'          shift, and go to state 108
    '/'          shift, and go to state 109
    TK_MOD       shift, and go to state 110

    $default  reduce using rule 18 (ATRIB)


State 174

   47 CONT_FOR: TK_ID TK_ATRIB E .
   50 E: E . '+' E
   51  | E . '-' E
   52  | E . '*' E
   53  | E . '/' E
   54  | E . TK_G E
   55  | E . TK_L E
   56  | E . TK_GE E
   57  | E . TK_LE E
   58  | E . TK_DIFF E
   59  | E . TK_E E
   60  | E . TK_AND E
   61  | E . TK_OR E
   62  | E . TK_MOD E
   65  | E . TK_CMPARRAY E
   66  | E . TK_IN F

    TK_G         shift, and go to state 96
    TK_L         shift, and go to state 97
    TK_GE        shift, and go to state 98
    TK_LE        shift, and go to state 99
    TK_DIFF      shift, and go to state 100
    TK_E         shift, and go to state 101
    TK_AND       shift, and go to state 102
    TK_OR        shift, and go to state 103
    TK_IN        shift, and go to state 104
    TK_CMPARRAY  shift, and go to state 105
    '+'          shift, and go to state 106
    '-'          shift, and go to state 107
    '*'          shift, and go to state 108
    '/'          shift, and go to state 109
    TK_MOD       shift, and go to state 110

    $default  reduce using rule 47 (CONT_FOR)


State 175

   44 CMD_FOR: TK_FOR '(' BEGIN_FOR ';' E ';' CONT_FOR ')' SUB_BLOCO .

    $default  reduce using rule 44 (CMD_FOR)
