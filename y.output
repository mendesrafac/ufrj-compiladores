Terminals unused in grammar

   TK_BREAK
   TK_SWITCH


State 29 conflicts: 1 reduce/reduce
State 166 conflicts: 1 shift/reduce


Grammar

    0 $accept: S $end

    1 S: TK_START ';' DECLS MAIN TK_STOP ';'

    2 MAIN: TK_MAIN BLOCO
    3     | %empty

    4 DECLS: DECLS DECL
    5      | %empty

    6 DECL: VAR ';'
    7     | FUNCTION

    8 VAR: TIPO VAR_DEFS
    9    | TIPO TK_ID TK_ATRIB E
   10    | TIPO TK_ID '[' TK_CINT ']'
   11    | TIPO TK_ID '[' TK_CINT ']' '[' TK_CINT ']'

   12 VAR_DEFS: TK_ID ',' VAR_DEFS
   13         | TK_ID

   14 ATRIB: TK_ID TK_ATRIB E
   15      | TK_ID '[' E ']' TK_ATRIB E
   16      | TK_ID '[' E ']' '[' E ']' TK_ATRIB E

   17 TIPO: TK_INT
   18     | TK_CHAR
   19     | TK_DOUBLE
   20     | TK_STRING
   21     | TK_BOOL
   22     | TK_VOID

   23 FUNCTION: TIPO TK_ID '(' F_PARAMS ')' BLOCO

   24 F_PARAMS: PARAMS
   25         | %empty

   26 PARAMS: PARAMS ',' PARAM
   27       | PARAM

   28 PARAM: TIPO TK_ID
   29      | TIPO TK_ID '[' E ']'
   30      | TIPO TK_ID '[' E ']' '[' E ']'
   31      | %empty

   32 $@1: %empty

   33 BLOCO: TK_BEGIN $@1 CMDS TK_END

   34 SUB_BLOCO: TK_BEGIN CMDS TK_END

   35 CMDS: CMD CMDS
   36     | %empty

   37 CMD: CMD_WROTEU ';'
   38    | CMD_READU ';'
   39    | CMD_RETURN ';'
   40    | CMD_CALL ';'
   41    | CMD_IF
   42    | CMD_FOR
   43    | CMD_WHILE
   44    | CMD_DOWHILE ';'
   45    | ATRIB ';'
   46    | VAR ';'

   47 CMD_WROTEU: TK_WRITE '(' E ')'

   48 CMD_READU: TK_READ '(' TK_ID ')'

   49 CMD_RETURN: TK_RETURN
   50           | TK_RETURN ':' E

   51 CMD_CALL: TK_ID '(' CALL_PARAMS ')'

   52 CALL_PARAMS: C_PARAMS
   53            | %empty

   54 C_PARAMS: C_PARAMS ',' C_PARAM
   55         | C_PARAM

   56 C_PARAM: TK_ID
   57        | TK_ID '[' E ']'

   58 CMD_IF: TK_IF '(' E ')' CMD
   59       | TK_IF '(' E ')' CMD TK_ELSE CMD

   60 CMD_FOR: TK_FOR '(' BEGIN_FOR ';' E ';' CONT_FOR ')' SUB_BLOCO

   61 BEGIN_FOR: TIPO TK_ID TK_ATRIB E
   62          | TK_ID TK_ATRIB E

   63 CONT_FOR: TK_ID TK_ATRIB E

   64 CMD_WHILE: TK_WHILE '(' E ')' SUB_BLOCO

   65 CMD_DOWHILE: TK_DO SUB_BLOCO TK_WHILE '(' E ')'

   66 E: E '+' E
   67  | E '-' E
   68  | E '*' E
   69  | E '/' E
   70  | E TK_G E
   71  | E TK_L E
   72  | E TK_GE E
   73  | E TK_LE E
   74  | E TK_DIFF E
   75  | E TK_E E
   76  | E TK_AND E
   77  | E TK_OR E
   78  | E TK_MOD E
   79  | TK_NOT E
   80  | '(' E ')'
   81  | F

   82 F: TK_ID
   83  | TK_CINT
   84  | TK_CDOUBLE
   85  | TK_CCHAR
   86  | TK_CSTRING
   87  | TK_ID '[' E ']'
   88  | TK_ID '[' E ']' '[' E ']'
   89  | BOOL

   90 BOOL: TK_TRUE
   91     | TK_FALSE


Terminals, with rules where they appear

$end (0) 0
'(' (40) 23 47 48 51 58 59 60 64 65 80
')' (41) 23 47 48 51 58 59 60 64 65 80
'*' (42) 68
'+' (43) 66
',' (44) 12 26 54
'-' (45) 67
'/' (47) 69
':' (58) 50
';' (59) 1 6 37 38 39 40 44 45 46 60
'[' (91) 10 11 15 16 29 30 57 87 88
']' (93) 10 11 15 16 29 30 57 87 88
error (256)
TK_INT (258) 17
TK_CHAR (259) 18
TK_DOUBLE (260) 19
TK_STRING (261) 20
TK_BOOL (262) 21
TK_VOID (263) 22
TK_TRUE (264) 90
TK_FALSE (265) 91
TK_MAIN (266) 2
TK_BEGIN (267) 33 34
TK_END (268) 33 34
TK_ID (269) 9 10 11 12 13 14 15 16 23 28 29 30 48 51 56 57 61 62 63
    82 87 88
TK_CINT (270) 10 11 83
TK_CDOUBLE (271) 84
TK_CSTRING (272) 86
TK_RETURN (273) 49 50
TK_ATRIB (274) 9 14 15 16 61 62 63
TK_CCHAR (275) 85
TK_WRITE (276) 47
TK_READ (277) 48
TK_G (278) 70
TK_L (279) 71
TK_GE (280) 72
TK_LE (281) 73
TK_DIFF (282) 74
TK_IF (283) 58 59
TK_ELSE (284) 59
TK_E (285) 75
TK_AND (286) 76
TK_OR (287) 77
TK_NOT (288) 79
TK_BREAK (289)
TK_FOR (290) 60
TK_WHILE (291) 64 65
TK_DO (292) 65
TK_SWITCH (293)
TK_START (294) 1
TK_STOP (295) 1
TK_MOD (296) 78


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
S (54)
    on left: 1, on right: 0
MAIN (55)
    on left: 2 3, on right: 1
DECLS (56)
    on left: 4 5, on right: 1 4
DECL (57)
    on left: 6 7, on right: 4
VAR (58)
    on left: 8 9 10 11, on right: 6 46
VAR_DEFS (59)
    on left: 12 13, on right: 8 12
ATRIB (60)
    on left: 14 15 16, on right: 45
TIPO (61)
    on left: 17 18 19 20 21 22, on right: 8 9 10 11 23 28 29 30 61
FUNCTION (62)
    on left: 23, on right: 7
F_PARAMS (63)
    on left: 24 25, on right: 23
PARAMS (64)
    on left: 26 27, on right: 24 26
PARAM (65)
    on left: 28 29 30 31, on right: 26 27
BLOCO (66)
    on left: 33, on right: 2 23
$@1 (67)
    on left: 32, on right: 33
SUB_BLOCO (68)
    on left: 34, on right: 60 64 65
CMDS (69)
    on left: 35 36, on right: 33 34 35
CMD (70)
    on left: 37 38 39 40 41 42 43 44 45 46, on right: 35 58 59
CMD_WROTEU (71)
    on left: 47, on right: 37
CMD_READU (72)
    on left: 48, on right: 38
CMD_RETURN (73)
    on left: 49 50, on right: 39
CMD_CALL (74)
    on left: 51, on right: 40
CALL_PARAMS (75)
    on left: 52 53, on right: 51
C_PARAMS (76)
    on left: 54 55, on right: 52 54
C_PARAM (77)
    on left: 56 57, on right: 54 55
CMD_IF (78)
    on left: 58 59, on right: 41
CMD_FOR (79)
    on left: 60, on right: 42
BEGIN_FOR (80)
    on left: 61 62, on right: 60
CONT_FOR (81)
    on left: 63, on right: 60
CMD_WHILE (82)
    on left: 64, on right: 43
CMD_DOWHILE (83)
    on left: 65, on right: 44
E (84)
    on left: 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81, on right:
    9 14 15 16 29 30 47 50 57 58 59 60 61 62 63 64 65 66 67 68 69 70
    71 72 73 74 75 76 77 78 79 80 87 88
F (85)
    on left: 82 83 84 85 86 87 88 89, on right: 81
BOOL (86)
    on left: 90 91, on right: 89


State 0

    0 $accept: . S $end

    TK_START  shift, and go to state 1

    S  go to state 2


State 1

    1 S: TK_START . ';' DECLS MAIN TK_STOP ';'

    ';'  shift, and go to state 3


State 2

    0 $accept: S . $end

    $end  shift, and go to state 4


State 3

    1 S: TK_START ';' . DECLS MAIN TK_STOP ';'

    $default  reduce using rule 5 (DECLS)

    DECLS  go to state 5


State 4

    0 $accept: S $end .

    $default  accept


State 5

    1 S: TK_START ';' DECLS . MAIN TK_STOP ';'
    4 DECLS: DECLS . DECL

    TK_INT     shift, and go to state 6
    TK_CHAR    shift, and go to state 7
    TK_DOUBLE  shift, and go to state 8
    TK_STRING  shift, and go to state 9
    TK_BOOL    shift, and go to state 10
    TK_VOID    shift, and go to state 11
    TK_MAIN    shift, and go to state 12

    $default  reduce using rule 3 (MAIN)

    MAIN      go to state 13
    DECL      go to state 14
    VAR       go to state 15
    TIPO      go to state 16
    FUNCTION  go to state 17


State 6

   17 TIPO: TK_INT .

    $default  reduce using rule 17 (TIPO)


State 7

   18 TIPO: TK_CHAR .

    $default  reduce using rule 18 (TIPO)


State 8

   19 TIPO: TK_DOUBLE .

    $default  reduce using rule 19 (TIPO)


State 9

   20 TIPO: TK_STRING .

    $default  reduce using rule 20 (TIPO)


State 10

   21 TIPO: TK_BOOL .

    $default  reduce using rule 21 (TIPO)


State 11

   22 TIPO: TK_VOID .

    $default  reduce using rule 22 (TIPO)


State 12

    2 MAIN: TK_MAIN . BLOCO

    TK_BEGIN  shift, and go to state 18

    BLOCO  go to state 19


State 13

    1 S: TK_START ';' DECLS MAIN . TK_STOP ';'

    TK_STOP  shift, and go to state 20


State 14

    4 DECLS: DECLS DECL .

    $default  reduce using rule 4 (DECLS)


State 15

    6 DECL: VAR . ';'

    ';'  shift, and go to state 21


State 16

    8 VAR: TIPO . VAR_DEFS
    9    | TIPO . TK_ID TK_ATRIB E
   10    | TIPO . TK_ID '[' TK_CINT ']'
   11    | TIPO . TK_ID '[' TK_CINT ']' '[' TK_CINT ']'
   23 FUNCTION: TIPO . TK_ID '(' F_PARAMS ')' BLOCO

    TK_ID  shift, and go to state 22

    VAR_DEFS  go to state 23


State 17

    7 DECL: FUNCTION .

    $default  reduce using rule 7 (DECL)


State 18

   33 BLOCO: TK_BEGIN . $@1 CMDS TK_END

    $default  reduce using rule 32 ($@1)

    $@1  go to state 24


State 19

    2 MAIN: TK_MAIN BLOCO .

    $default  reduce using rule 2 (MAIN)


State 20

    1 S: TK_START ';' DECLS MAIN TK_STOP . ';'

    ';'  shift, and go to state 25


State 21

    6 DECL: VAR ';' .

    $default  reduce using rule 6 (DECL)


State 22

    9 VAR: TIPO TK_ID . TK_ATRIB E
   10    | TIPO TK_ID . '[' TK_CINT ']'
   11    | TIPO TK_ID . '[' TK_CINT ']' '[' TK_CINT ']'
   12 VAR_DEFS: TK_ID . ',' VAR_DEFS
   13         | TK_ID .
   23 FUNCTION: TIPO TK_ID . '(' F_PARAMS ')' BLOCO

    TK_ATRIB  shift, and go to state 26
    '['       shift, and go to state 27
    ','       shift, and go to state 28
    '('       shift, and go to state 29

    $default  reduce using rule 13 (VAR_DEFS)


State 23

    8 VAR: TIPO VAR_DEFS .

    $default  reduce using rule 8 (VAR)


State 24

   33 BLOCO: TK_BEGIN $@1 . CMDS TK_END

    TK_INT     shift, and go to state 6
    TK_CHAR    shift, and go to state 7
    TK_DOUBLE  shift, and go to state 8
    TK_STRING  shift, and go to state 9
    TK_BOOL    shift, and go to state 10
    TK_VOID    shift, and go to state 11
    TK_ID      shift, and go to state 30
    TK_RETURN  shift, and go to state 31
    TK_WRITE   shift, and go to state 32
    TK_READ    shift, and go to state 33
    TK_IF      shift, and go to state 34
    TK_FOR     shift, and go to state 35
    TK_WHILE   shift, and go to state 36
    TK_DO      shift, and go to state 37

    $default  reduce using rule 36 (CMDS)

    VAR          go to state 38
    ATRIB        go to state 39
    TIPO         go to state 40
    CMDS         go to state 41
    CMD          go to state 42
    CMD_WROTEU   go to state 43
    CMD_READU    go to state 44
    CMD_RETURN   go to state 45
    CMD_CALL     go to state 46
    CMD_IF       go to state 47
    CMD_FOR      go to state 48
    CMD_WHILE    go to state 49
    CMD_DOWHILE  go to state 50


State 25

    1 S: TK_START ';' DECLS MAIN TK_STOP ';' .

    $default  reduce using rule 1 (S)


State 26

    9 VAR: TIPO TK_ID TK_ATRIB . E

    TK_TRUE     shift, and go to state 51
    TK_FALSE    shift, and go to state 52
    TK_ID       shift, and go to state 53
    TK_CINT     shift, and go to state 54
    TK_CDOUBLE  shift, and go to state 55
    TK_CSTRING  shift, and go to state 56
    TK_CCHAR    shift, and go to state 57
    TK_NOT      shift, and go to state 58
    '('         shift, and go to state 59

    E     go to state 60
    F     go to state 61
    BOOL  go to state 62


State 27

   10 VAR: TIPO TK_ID '[' . TK_CINT ']'
   11    | TIPO TK_ID '[' . TK_CINT ']' '[' TK_CINT ']'

    TK_CINT  shift, and go to state 63


State 28

   12 VAR_DEFS: TK_ID ',' . VAR_DEFS

    TK_ID  shift, and go to state 64

    VAR_DEFS  go to state 65


State 29

   23 FUNCTION: TIPO TK_ID '(' . F_PARAMS ')' BLOCO

    TK_INT     shift, and go to state 6
    TK_CHAR    shift, and go to state 7
    TK_DOUBLE  shift, and go to state 8
    TK_STRING  shift, and go to state 9
    TK_BOOL    shift, and go to state 10
    TK_VOID    shift, and go to state 11

    ','       reduce using rule 31 (PARAM)
    ')'       reduce using rule 25 (F_PARAMS)
    ')'       [reduce using rule 31 (PARAM)]
    $default  reduce using rule 25 (F_PARAMS)

    TIPO      go to state 66
    F_PARAMS  go to state 67
    PARAMS    go to state 68
    PARAM     go to state 69


State 30

   14 ATRIB: TK_ID . TK_ATRIB E
   15      | TK_ID . '[' E ']' TK_ATRIB E
   16      | TK_ID . '[' E ']' '[' E ']' TK_ATRIB E
   51 CMD_CALL: TK_ID . '(' CALL_PARAMS ')'

    TK_ATRIB  shift, and go to state 70
    '['       shift, and go to state 71
    '('       shift, and go to state 72


State 31

   49 CMD_RETURN: TK_RETURN .
   50           | TK_RETURN . ':' E

    ':'  shift, and go to state 73

    $default  reduce using rule 49 (CMD_RETURN)


State 32

   47 CMD_WROTEU: TK_WRITE . '(' E ')'

    '('  shift, and go to state 74


State 33

   48 CMD_READU: TK_READ . '(' TK_ID ')'

    '('  shift, and go to state 75


State 34

   58 CMD_IF: TK_IF . '(' E ')' CMD
   59       | TK_IF . '(' E ')' CMD TK_ELSE CMD

    '('  shift, and go to state 76


State 35

   60 CMD_FOR: TK_FOR . '(' BEGIN_FOR ';' E ';' CONT_FOR ')' SUB_BLOCO

    '('  shift, and go to state 77


State 36

   64 CMD_WHILE: TK_WHILE . '(' E ')' SUB_BLOCO

    '('  shift, and go to state 78


State 37

   65 CMD_DOWHILE: TK_DO . SUB_BLOCO TK_WHILE '(' E ')'

    TK_BEGIN  shift, and go to state 79

    SUB_BLOCO  go to state 80


State 38

   46 CMD: VAR . ';'

    ';'  shift, and go to state 81


State 39

   45 CMD: ATRIB . ';'

    ';'  shift, and go to state 82


State 40

    8 VAR: TIPO . VAR_DEFS
    9    | TIPO . TK_ID TK_ATRIB E
   10    | TIPO . TK_ID '[' TK_CINT ']'
   11    | TIPO . TK_ID '[' TK_CINT ']' '[' TK_CINT ']'

    TK_ID  shift, and go to state 83

    VAR_DEFS  go to state 23


State 41

   33 BLOCO: TK_BEGIN $@1 CMDS . TK_END

    TK_END  shift, and go to state 84


State 42

   35 CMDS: CMD . CMDS

    TK_INT     shift, and go to state 6
    TK_CHAR    shift, and go to state 7
    TK_DOUBLE  shift, and go to state 8
    TK_STRING  shift, and go to state 9
    TK_BOOL    shift, and go to state 10
    TK_VOID    shift, and go to state 11
    TK_ID      shift, and go to state 30
    TK_RETURN  shift, and go to state 31
    TK_WRITE   shift, and go to state 32
    TK_READ    shift, and go to state 33
    TK_IF      shift, and go to state 34
    TK_FOR     shift, and go to state 35
    TK_WHILE   shift, and go to state 36
    TK_DO      shift, and go to state 37

    $default  reduce using rule 36 (CMDS)

    VAR          go to state 38
    ATRIB        go to state 39
    TIPO         go to state 40
    CMDS         go to state 85
    CMD          go to state 42
    CMD_WROTEU   go to state 43
    CMD_READU    go to state 44
    CMD_RETURN   go to state 45
    CMD_CALL     go to state 46
    CMD_IF       go to state 47
    CMD_FOR      go to state 48
    CMD_WHILE    go to state 49
    CMD_DOWHILE  go to state 50


State 43

   37 CMD: CMD_WROTEU . ';'

    ';'  shift, and go to state 86


State 44

   38 CMD: CMD_READU . ';'

    ';'  shift, and go to state 87


State 45

   39 CMD: CMD_RETURN . ';'

    ';'  shift, and go to state 88


State 46

   40 CMD: CMD_CALL . ';'

    ';'  shift, and go to state 89


State 47

   41 CMD: CMD_IF .

    $default  reduce using rule 41 (CMD)


State 48

   42 CMD: CMD_FOR .

    $default  reduce using rule 42 (CMD)


State 49

   43 CMD: CMD_WHILE .

    $default  reduce using rule 43 (CMD)


State 50

   44 CMD: CMD_DOWHILE . ';'

    ';'  shift, and go to state 90


State 51

   90 BOOL: TK_TRUE .

    $default  reduce using rule 90 (BOOL)


State 52

   91 BOOL: TK_FALSE .

    $default  reduce using rule 91 (BOOL)


State 53

   82 F: TK_ID .
   87  | TK_ID . '[' E ']'
   88  | TK_ID . '[' E ']' '[' E ']'

    '['  shift, and go to state 91

    $default  reduce using rule 82 (F)


State 54

   83 F: TK_CINT .

    $default  reduce using rule 83 (F)


State 55

   84 F: TK_CDOUBLE .

    $default  reduce using rule 84 (F)


State 56

   86 F: TK_CSTRING .

    $default  reduce using rule 86 (F)


State 57

   85 F: TK_CCHAR .

    $default  reduce using rule 85 (F)


State 58

   79 E: TK_NOT . E

    TK_TRUE     shift, and go to state 51
    TK_FALSE    shift, and go to state 52
    TK_ID       shift, and go to state 53
    TK_CINT     shift, and go to state 54
    TK_CDOUBLE  shift, and go to state 55
    TK_CSTRING  shift, and go to state 56
    TK_CCHAR    shift, and go to state 57
    TK_NOT      shift, and go to state 58
    '('         shift, and go to state 59

    E     go to state 92
    F     go to state 61
    BOOL  go to state 62


State 59

   80 E: '(' . E ')'

    TK_TRUE     shift, and go to state 51
    TK_FALSE    shift, and go to state 52
    TK_ID       shift, and go to state 53
    TK_CINT     shift, and go to state 54
    TK_CDOUBLE  shift, and go to state 55
    TK_CSTRING  shift, and go to state 56
    TK_CCHAR    shift, and go to state 57
    TK_NOT      shift, and go to state 58
    '('         shift, and go to state 59

    E     go to state 93
    F     go to state 61
    BOOL  go to state 62


State 60

    9 VAR: TIPO TK_ID TK_ATRIB E .
   66 E: E . '+' E
   67  | E . '-' E
   68  | E . '*' E
   69  | E . '/' E
   70  | E . TK_G E
   71  | E . TK_L E
   72  | E . TK_GE E
   73  | E . TK_LE E
   74  | E . TK_DIFF E
   75  | E . TK_E E
   76  | E . TK_AND E
   77  | E . TK_OR E
   78  | E . TK_MOD E

    TK_G     shift, and go to state 94
    TK_L     shift, and go to state 95
    TK_GE    shift, and go to state 96
    TK_LE    shift, and go to state 97
    TK_DIFF  shift, and go to state 98
    TK_E     shift, and go to state 99
    TK_AND   shift, and go to state 100
    TK_OR    shift, and go to state 101
    '+'      shift, and go to state 102
    '-'      shift, and go to state 103
    '*'      shift, and go to state 104
    '/'      shift, and go to state 105
    TK_MOD   shift, and go to state 106

    $default  reduce using rule 9 (VAR)


State 61

   81 E: F .

    $default  reduce using rule 81 (E)


State 62

   89 F: BOOL .

    $default  reduce using rule 89 (F)


State 63

   10 VAR: TIPO TK_ID '[' TK_CINT . ']'
   11    | TIPO TK_ID '[' TK_CINT . ']' '[' TK_CINT ']'

    ']'  shift, and go to state 107


State 64

   12 VAR_DEFS: TK_ID . ',' VAR_DEFS
   13         | TK_ID .

    ','  shift, and go to state 28

    $default  reduce using rule 13 (VAR_DEFS)


State 65

   12 VAR_DEFS: TK_ID ',' VAR_DEFS .

    $default  reduce using rule 12 (VAR_DEFS)


State 66

   28 PARAM: TIPO . TK_ID
   29      | TIPO . TK_ID '[' E ']'
   30      | TIPO . TK_ID '[' E ']' '[' E ']'

    TK_ID  shift, and go to state 108


State 67

   23 FUNCTION: TIPO TK_ID '(' F_PARAMS . ')' BLOCO

    ')'  shift, and go to state 109


State 68

   24 F_PARAMS: PARAMS .
   26 PARAMS: PARAMS . ',' PARAM

    ','  shift, and go to state 110

    $default  reduce using rule 24 (F_PARAMS)


State 69

   27 PARAMS: PARAM .

    $default  reduce using rule 27 (PARAMS)


State 70

   14 ATRIB: TK_ID TK_ATRIB . E

    TK_TRUE     shift, and go to state 51
    TK_FALSE    shift, and go to state 52
    TK_ID       shift, and go to state 53
    TK_CINT     shift, and go to state 54
    TK_CDOUBLE  shift, and go to state 55
    TK_CSTRING  shift, and go to state 56
    TK_CCHAR    shift, and go to state 57
    TK_NOT      shift, and go to state 58
    '('         shift, and go to state 59

    E     go to state 111
    F     go to state 61
    BOOL  go to state 62


State 71

   15 ATRIB: TK_ID '[' . E ']' TK_ATRIB E
   16      | TK_ID '[' . E ']' '[' E ']' TK_ATRIB E

    TK_TRUE     shift, and go to state 51
    TK_FALSE    shift, and go to state 52
    TK_ID       shift, and go to state 53
    TK_CINT     shift, and go to state 54
    TK_CDOUBLE  shift, and go to state 55
    TK_CSTRING  shift, and go to state 56
    TK_CCHAR    shift, and go to state 57
    TK_NOT      shift, and go to state 58
    '('         shift, and go to state 59

    E     go to state 112
    F     go to state 61
    BOOL  go to state 62


State 72

   51 CMD_CALL: TK_ID '(' . CALL_PARAMS ')'

    TK_ID  shift, and go to state 113

    $default  reduce using rule 53 (CALL_PARAMS)

    CALL_PARAMS  go to state 114
    C_PARAMS     go to state 115
    C_PARAM      go to state 116


State 73

   50 CMD_RETURN: TK_RETURN ':' . E

    TK_TRUE     shift, and go to state 51
    TK_FALSE    shift, and go to state 52
    TK_ID       shift, and go to state 53
    TK_CINT     shift, and go to state 54
    TK_CDOUBLE  shift, and go to state 55
    TK_CSTRING  shift, and go to state 56
    TK_CCHAR    shift, and go to state 57
    TK_NOT      shift, and go to state 58
    '('         shift, and go to state 59

    E     go to state 117
    F     go to state 61
    BOOL  go to state 62


State 74

   47 CMD_WROTEU: TK_WRITE '(' . E ')'

    TK_TRUE     shift, and go to state 51
    TK_FALSE    shift, and go to state 52
    TK_ID       shift, and go to state 53
    TK_CINT     shift, and go to state 54
    TK_CDOUBLE  shift, and go to state 55
    TK_CSTRING  shift, and go to state 56
    TK_CCHAR    shift, and go to state 57
    TK_NOT      shift, and go to state 58
    '('         shift, and go to state 59

    E     go to state 118
    F     go to state 61
    BOOL  go to state 62


State 75

   48 CMD_READU: TK_READ '(' . TK_ID ')'

    TK_ID  shift, and go to state 119


State 76

   58 CMD_IF: TK_IF '(' . E ')' CMD
   59       | TK_IF '(' . E ')' CMD TK_ELSE CMD

    TK_TRUE     shift, and go to state 51
    TK_FALSE    shift, and go to state 52
    TK_ID       shift, and go to state 53
    TK_CINT     shift, and go to state 54
    TK_CDOUBLE  shift, and go to state 55
    TK_CSTRING  shift, and go to state 56
    TK_CCHAR    shift, and go to state 57
    TK_NOT      shift, and go to state 58
    '('         shift, and go to state 59

    E     go to state 120
    F     go to state 61
    BOOL  go to state 62


State 77

   60 CMD_FOR: TK_FOR '(' . BEGIN_FOR ';' E ';' CONT_FOR ')' SUB_BLOCO

    TK_INT     shift, and go to state 6
    TK_CHAR    shift, and go to state 7
    TK_DOUBLE  shift, and go to state 8
    TK_STRING  shift, and go to state 9
    TK_BOOL    shift, and go to state 10
    TK_VOID    shift, and go to state 11
    TK_ID      shift, and go to state 121

    TIPO       go to state 122
    BEGIN_FOR  go to state 123


State 78

   64 CMD_WHILE: TK_WHILE '(' . E ')' SUB_BLOCO

    TK_TRUE     shift, and go to state 51
    TK_FALSE    shift, and go to state 52
    TK_ID       shift, and go to state 53
    TK_CINT     shift, and go to state 54
    TK_CDOUBLE  shift, and go to state 55
    TK_CSTRING  shift, and go to state 56
    TK_CCHAR    shift, and go to state 57
    TK_NOT      shift, and go to state 58
    '('         shift, and go to state 59

    E     go to state 124
    F     go to state 61
    BOOL  go to state 62


State 79

   34 SUB_BLOCO: TK_BEGIN . CMDS TK_END

    TK_INT     shift, and go to state 6
    TK_CHAR    shift, and go to state 7
    TK_DOUBLE  shift, and go to state 8
    TK_STRING  shift, and go to state 9
    TK_BOOL    shift, and go to state 10
    TK_VOID    shift, and go to state 11
    TK_ID      shift, and go to state 30
    TK_RETURN  shift, and go to state 31
    TK_WRITE   shift, and go to state 32
    TK_READ    shift, and go to state 33
    TK_IF      shift, and go to state 34
    TK_FOR     shift, and go to state 35
    TK_WHILE   shift, and go to state 36
    TK_DO      shift, and go to state 37

    $default  reduce using rule 36 (CMDS)

    VAR          go to state 38
    ATRIB        go to state 39
    TIPO         go to state 40
    CMDS         go to state 125
    CMD          go to state 42
    CMD_WROTEU   go to state 43
    CMD_READU    go to state 44
    CMD_RETURN   go to state 45
    CMD_CALL     go to state 46
    CMD_IF       go to state 47
    CMD_FOR      go to state 48
    CMD_WHILE    go to state 49
    CMD_DOWHILE  go to state 50


State 80

   65 CMD_DOWHILE: TK_DO SUB_BLOCO . TK_WHILE '(' E ')'

    TK_WHILE  shift, and go to state 126


State 81

   46 CMD: VAR ';' .

    $default  reduce using rule 46 (CMD)


State 82

   45 CMD: ATRIB ';' .

    $default  reduce using rule 45 (CMD)


State 83

    9 VAR: TIPO TK_ID . TK_ATRIB E
   10    | TIPO TK_ID . '[' TK_CINT ']'
   11    | TIPO TK_ID . '[' TK_CINT ']' '[' TK_CINT ']'
   12 VAR_DEFS: TK_ID . ',' VAR_DEFS
   13         | TK_ID .

    TK_ATRIB  shift, and go to state 26
    '['       shift, and go to state 27
    ','       shift, and go to state 28

    $default  reduce using rule 13 (VAR_DEFS)


State 84

   33 BLOCO: TK_BEGIN $@1 CMDS TK_END .

    $default  reduce using rule 33 (BLOCO)


State 85

   35 CMDS: CMD CMDS .

    $default  reduce using rule 35 (CMDS)


State 86

   37 CMD: CMD_WROTEU ';' .

    $default  reduce using rule 37 (CMD)


State 87

   38 CMD: CMD_READU ';' .

    $default  reduce using rule 38 (CMD)


State 88

   39 CMD: CMD_RETURN ';' .

    $default  reduce using rule 39 (CMD)


State 89

   40 CMD: CMD_CALL ';' .

    $default  reduce using rule 40 (CMD)


State 90

   44 CMD: CMD_DOWHILE ';' .

    $default  reduce using rule 44 (CMD)


State 91

   87 F: TK_ID '[' . E ']'
   88  | TK_ID '[' . E ']' '[' E ']'

    TK_TRUE     shift, and go to state 51
    TK_FALSE    shift, and go to state 52
    TK_ID       shift, and go to state 53
    TK_CINT     shift, and go to state 54
    TK_CDOUBLE  shift, and go to state 55
    TK_CSTRING  shift, and go to state 56
    TK_CCHAR    shift, and go to state 57
    TK_NOT      shift, and go to state 58
    '('         shift, and go to state 59

    E     go to state 127
    F     go to state 61
    BOOL  go to state 62


State 92

   66 E: E . '+' E
   67  | E . '-' E
   68  | E . '*' E
   69  | E . '/' E
   70  | E . TK_G E
   71  | E . TK_L E
   72  | E . TK_GE E
   73  | E . TK_LE E
   74  | E . TK_DIFF E
   75  | E . TK_E E
   76  | E . TK_AND E
   77  | E . TK_OR E
   78  | E . TK_MOD E
   79  | TK_NOT E .

    $default  reduce using rule 79 (E)


State 93

   66 E: E . '+' E
   67  | E . '-' E
   68  | E . '*' E
   69  | E . '/' E
   70  | E . TK_G E
   71  | E . TK_L E
   72  | E . TK_GE E
   73  | E . TK_LE E
   74  | E . TK_DIFF E
   75  | E . TK_E E
   76  | E . TK_AND E
   77  | E . TK_OR E
   78  | E . TK_MOD E
   80  | '(' E . ')'

    TK_G     shift, and go to state 94
    TK_L     shift, and go to state 95
    TK_GE    shift, and go to state 96
    TK_LE    shift, and go to state 97
    TK_DIFF  shift, and go to state 98
    TK_E     shift, and go to state 99
    TK_AND   shift, and go to state 100
    TK_OR    shift, and go to state 101
    '+'      shift, and go to state 102
    '-'      shift, and go to state 103
    '*'      shift, and go to state 104
    '/'      shift, and go to state 105
    TK_MOD   shift, and go to state 106
    ')'      shift, and go to state 128


State 94

   70 E: E TK_G . E

    TK_TRUE     shift, and go to state 51
    TK_FALSE    shift, and go to state 52
    TK_ID       shift, and go to state 53
    TK_CINT     shift, and go to state 54
    TK_CDOUBLE  shift, and go to state 55
    TK_CSTRING  shift, and go to state 56
    TK_CCHAR    shift, and go to state 57
    TK_NOT      shift, and go to state 58
    '('         shift, and go to state 59

    E     go to state 129
    F     go to state 61
    BOOL  go to state 62


State 95

   71 E: E TK_L . E

    TK_TRUE     shift, and go to state 51
    TK_FALSE    shift, and go to state 52
    TK_ID       shift, and go to state 53
    TK_CINT     shift, and go to state 54
    TK_CDOUBLE  shift, and go to state 55
    TK_CSTRING  shift, and go to state 56
    TK_CCHAR    shift, and go to state 57
    TK_NOT      shift, and go to state 58
    '('         shift, and go to state 59

    E     go to state 130
    F     go to state 61
    BOOL  go to state 62


State 96

   72 E: E TK_GE . E

    TK_TRUE     shift, and go to state 51
    TK_FALSE    shift, and go to state 52
    TK_ID       shift, and go to state 53
    TK_CINT     shift, and go to state 54
    TK_CDOUBLE  shift, and go to state 55
    TK_CSTRING  shift, and go to state 56
    TK_CCHAR    shift, and go to state 57
    TK_NOT      shift, and go to state 58
    '('         shift, and go to state 59

    E     go to state 131
    F     go to state 61
    BOOL  go to state 62


State 97

   73 E: E TK_LE . E

    TK_TRUE     shift, and go to state 51
    TK_FALSE    shift, and go to state 52
    TK_ID       shift, and go to state 53
    TK_CINT     shift, and go to state 54
    TK_CDOUBLE  shift, and go to state 55
    TK_CSTRING  shift, and go to state 56
    TK_CCHAR    shift, and go to state 57
    TK_NOT      shift, and go to state 58
    '('         shift, and go to state 59

    E     go to state 132
    F     go to state 61
    BOOL  go to state 62


State 98

   74 E: E TK_DIFF . E

    TK_TRUE     shift, and go to state 51
    TK_FALSE    shift, and go to state 52
    TK_ID       shift, and go to state 53
    TK_CINT     shift, and go to state 54
    TK_CDOUBLE  shift, and go to state 55
    TK_CSTRING  shift, and go to state 56
    TK_CCHAR    shift, and go to state 57
    TK_NOT      shift, and go to state 58
    '('         shift, and go to state 59

    E     go to state 133
    F     go to state 61
    BOOL  go to state 62


State 99

   75 E: E TK_E . E

    TK_TRUE     shift, and go to state 51
    TK_FALSE    shift, and go to state 52
    TK_ID       shift, and go to state 53
    TK_CINT     shift, and go to state 54
    TK_CDOUBLE  shift, and go to state 55
    TK_CSTRING  shift, and go to state 56
    TK_CCHAR    shift, and go to state 57
    TK_NOT      shift, and go to state 58
    '('         shift, and go to state 59

    E     go to state 134
    F     go to state 61
    BOOL  go to state 62


State 100

   76 E: E TK_AND . E

    TK_TRUE     shift, and go to state 51
    TK_FALSE    shift, and go to state 52
    TK_ID       shift, and go to state 53
    TK_CINT     shift, and go to state 54
    TK_CDOUBLE  shift, and go to state 55
    TK_CSTRING  shift, and go to state 56
    TK_CCHAR    shift, and go to state 57
    TK_NOT      shift, and go to state 58
    '('         shift, and go to state 59

    E     go to state 135
    F     go to state 61
    BOOL  go to state 62


State 101

   77 E: E TK_OR . E

    TK_TRUE     shift, and go to state 51
    TK_FALSE    shift, and go to state 52
    TK_ID       shift, and go to state 53
    TK_CINT     shift, and go to state 54
    TK_CDOUBLE  shift, and go to state 55
    TK_CSTRING  shift, and go to state 56
    TK_CCHAR    shift, and go to state 57
    TK_NOT      shift, and go to state 58
    '('         shift, and go to state 59

    E     go to state 136
    F     go to state 61
    BOOL  go to state 62


State 102

   66 E: E '+' . E

    TK_TRUE     shift, and go to state 51
    TK_FALSE    shift, and go to state 52
    TK_ID       shift, and go to state 53
    TK_CINT     shift, and go to state 54
    TK_CDOUBLE  shift, and go to state 55
    TK_CSTRING  shift, and go to state 56
    TK_CCHAR    shift, and go to state 57
    TK_NOT      shift, and go to state 58
    '('         shift, and go to state 59

    E     go to state 137
    F     go to state 61
    BOOL  go to state 62


State 103

   67 E: E '-' . E

    TK_TRUE     shift, and go to state 51
    TK_FALSE    shift, and go to state 52
    TK_ID       shift, and go to state 53
    TK_CINT     shift, and go to state 54
    TK_CDOUBLE  shift, and go to state 55
    TK_CSTRING  shift, and go to state 56
    TK_CCHAR    shift, and go to state 57
    TK_NOT      shift, and go to state 58
    '('         shift, and go to state 59

    E     go to state 138
    F     go to state 61
    BOOL  go to state 62


State 104

   68 E: E '*' . E

    TK_TRUE     shift, and go to state 51
    TK_FALSE    shift, and go to state 52
    TK_ID       shift, and go to state 53
    TK_CINT     shift, and go to state 54
    TK_CDOUBLE  shift, and go to state 55
    TK_CSTRING  shift, and go to state 56
    TK_CCHAR    shift, and go to state 57
    TK_NOT      shift, and go to state 58
    '('         shift, and go to state 59

    E     go to state 139
    F     go to state 61
    BOOL  go to state 62


State 105

   69 E: E '/' . E

    TK_TRUE     shift, and go to state 51
    TK_FALSE    shift, and go to state 52
    TK_ID       shift, and go to state 53
    TK_CINT     shift, and go to state 54
    TK_CDOUBLE  shift, and go to state 55
    TK_CSTRING  shift, and go to state 56
    TK_CCHAR    shift, and go to state 57
    TK_NOT      shift, and go to state 58
    '('         shift, and go to state 59

    E     go to state 140
    F     go to state 61
    BOOL  go to state 62


State 106

   78 E: E TK_MOD . E

    TK_TRUE     shift, and go to state 51
    TK_FALSE    shift, and go to state 52
    TK_ID       shift, and go to state 53
    TK_CINT     shift, and go to state 54
    TK_CDOUBLE  shift, and go to state 55
    TK_CSTRING  shift, and go to state 56
    TK_CCHAR    shift, and go to state 57
    TK_NOT      shift, and go to state 58
    '('         shift, and go to state 59

    E     go to state 141
    F     go to state 61
    BOOL  go to state 62


State 107

   10 VAR: TIPO TK_ID '[' TK_CINT ']' .
   11    | TIPO TK_ID '[' TK_CINT ']' . '[' TK_CINT ']'

    '['  shift, and go to state 142

    $default  reduce using rule 10 (VAR)


State 108

   28 PARAM: TIPO TK_ID .
   29      | TIPO TK_ID . '[' E ']'
   30      | TIPO TK_ID . '[' E ']' '[' E ']'

    '['  shift, and go to state 143

    $default  reduce using rule 28 (PARAM)


State 109

   23 FUNCTION: TIPO TK_ID '(' F_PARAMS ')' . BLOCO

    TK_BEGIN  shift, and go to state 18

    BLOCO  go to state 144


State 110

   26 PARAMS: PARAMS ',' . PARAM

    TK_INT     shift, and go to state 6
    TK_CHAR    shift, and go to state 7
    TK_DOUBLE  shift, and go to state 8
    TK_STRING  shift, and go to state 9
    TK_BOOL    shift, and go to state 10
    TK_VOID    shift, and go to state 11

    $default  reduce using rule 31 (PARAM)

    TIPO   go to state 66
    PARAM  go to state 145


State 111

   14 ATRIB: TK_ID TK_ATRIB E .
   66 E: E . '+' E
   67  | E . '-' E
   68  | E . '*' E
   69  | E . '/' E
   70  | E . TK_G E
   71  | E . TK_L E
   72  | E . TK_GE E
   73  | E . TK_LE E
   74  | E . TK_DIFF E
   75  | E . TK_E E
   76  | E . TK_AND E
   77  | E . TK_OR E
   78  | E . TK_MOD E

    TK_G     shift, and go to state 94
    TK_L     shift, and go to state 95
    TK_GE    shift, and go to state 96
    TK_LE    shift, and go to state 97
    TK_DIFF  shift, and go to state 98
    TK_E     shift, and go to state 99
    TK_AND   shift, and go to state 100
    TK_OR    shift, and go to state 101
    '+'      shift, and go to state 102
    '-'      shift, and go to state 103
    '*'      shift, and go to state 104
    '/'      shift, and go to state 105
    TK_MOD   shift, and go to state 106

    $default  reduce using rule 14 (ATRIB)


State 112

   15 ATRIB: TK_ID '[' E . ']' TK_ATRIB E
   16      | TK_ID '[' E . ']' '[' E ']' TK_ATRIB E
   66 E: E . '+' E
   67  | E . '-' E
   68  | E . '*' E
   69  | E . '/' E
   70  | E . TK_G E
   71  | E . TK_L E
   72  | E . TK_GE E
   73  | E . TK_LE E
   74  | E . TK_DIFF E
   75  | E . TK_E E
   76  | E . TK_AND E
   77  | E . TK_OR E
   78  | E . TK_MOD E

    TK_G     shift, and go to state 94
    TK_L     shift, and go to state 95
    TK_GE    shift, and go to state 96
    TK_LE    shift, and go to state 97
    TK_DIFF  shift, and go to state 98
    TK_E     shift, and go to state 99
    TK_AND   shift, and go to state 100
    TK_OR    shift, and go to state 101
    '+'      shift, and go to state 102
    '-'      shift, and go to state 103
    '*'      shift, and go to state 104
    '/'      shift, and go to state 105
    TK_MOD   shift, and go to state 106
    ']'      shift, and go to state 146


State 113

   56 C_PARAM: TK_ID .
   57        | TK_ID . '[' E ']'

    '['  shift, and go to state 147

    $default  reduce using rule 56 (C_PARAM)


State 114

   51 CMD_CALL: TK_ID '(' CALL_PARAMS . ')'

    ')'  shift, and go to state 148


State 115

   52 CALL_PARAMS: C_PARAMS .
   54 C_PARAMS: C_PARAMS . ',' C_PARAM

    ','  shift, and go to state 149

    $default  reduce using rule 52 (CALL_PARAMS)


State 116

   55 C_PARAMS: C_PARAM .

    $default  reduce using rule 55 (C_PARAMS)


State 117

   50 CMD_RETURN: TK_RETURN ':' E .
   66 E: E . '+' E
   67  | E . '-' E
   68  | E . '*' E
   69  | E . '/' E
   70  | E . TK_G E
   71  | E . TK_L E
   72  | E . TK_GE E
   73  | E . TK_LE E
   74  | E . TK_DIFF E
   75  | E . TK_E E
   76  | E . TK_AND E
   77  | E . TK_OR E
   78  | E . TK_MOD E

    TK_G     shift, and go to state 94
    TK_L     shift, and go to state 95
    TK_GE    shift, and go to state 96
    TK_LE    shift, and go to state 97
    TK_DIFF  shift, and go to state 98
    TK_E     shift, and go to state 99
    TK_AND   shift, and go to state 100
    TK_OR    shift, and go to state 101
    '+'      shift, and go to state 102
    '-'      shift, and go to state 103
    '*'      shift, and go to state 104
    '/'      shift, and go to state 105
    TK_MOD   shift, and go to state 106

    $default  reduce using rule 50 (CMD_RETURN)


State 118

   47 CMD_WROTEU: TK_WRITE '(' E . ')'
   66 E: E . '+' E
   67  | E . '-' E
   68  | E . '*' E
   69  | E . '/' E
   70  | E . TK_G E
   71  | E . TK_L E
   72  | E . TK_GE E
   73  | E . TK_LE E
   74  | E . TK_DIFF E
   75  | E . TK_E E
   76  | E . TK_AND E
   77  | E . TK_OR E
   78  | E . TK_MOD E

    TK_G     shift, and go to state 94
    TK_L     shift, and go to state 95
    TK_GE    shift, and go to state 96
    TK_LE    shift, and go to state 97
    TK_DIFF  shift, and go to state 98
    TK_E     shift, and go to state 99
    TK_AND   shift, and go to state 100
    TK_OR    shift, and go to state 101
    '+'      shift, and go to state 102
    '-'      shift, and go to state 103
    '*'      shift, and go to state 104
    '/'      shift, and go to state 105
    TK_MOD   shift, and go to state 106
    ')'      shift, and go to state 150


State 119

   48 CMD_READU: TK_READ '(' TK_ID . ')'

    ')'  shift, and go to state 151


State 120

   58 CMD_IF: TK_IF '(' E . ')' CMD
   59       | TK_IF '(' E . ')' CMD TK_ELSE CMD
   66 E: E . '+' E
   67  | E . '-' E
   68  | E . '*' E
   69  | E . '/' E
   70  | E . TK_G E
   71  | E . TK_L E
   72  | E . TK_GE E
   73  | E . TK_LE E
   74  | E . TK_DIFF E
   75  | E . TK_E E
   76  | E . TK_AND E
   77  | E . TK_OR E
   78  | E . TK_MOD E

    TK_G     shift, and go to state 94
    TK_L     shift, and go to state 95
    TK_GE    shift, and go to state 96
    TK_LE    shift, and go to state 97
    TK_DIFF  shift, and go to state 98
    TK_E     shift, and go to state 99
    TK_AND   shift, and go to state 100
    TK_OR    shift, and go to state 101
    '+'      shift, and go to state 102
    '-'      shift, and go to state 103
    '*'      shift, and go to state 104
    '/'      shift, and go to state 105
    TK_MOD   shift, and go to state 106
    ')'      shift, and go to state 152


State 121

   62 BEGIN_FOR: TK_ID . TK_ATRIB E

    TK_ATRIB  shift, and go to state 153


State 122

   61 BEGIN_FOR: TIPO . TK_ID TK_ATRIB E

    TK_ID  shift, and go to state 154


State 123

   60 CMD_FOR: TK_FOR '(' BEGIN_FOR . ';' E ';' CONT_FOR ')' SUB_BLOCO

    ';'  shift, and go to state 155


State 124

   64 CMD_WHILE: TK_WHILE '(' E . ')' SUB_BLOCO
   66 E: E . '+' E
   67  | E . '-' E
   68  | E . '*' E
   69  | E . '/' E
   70  | E . TK_G E
   71  | E . TK_L E
   72  | E . TK_GE E
   73  | E . TK_LE E
   74  | E . TK_DIFF E
   75  | E . TK_E E
   76  | E . TK_AND E
   77  | E . TK_OR E
   78  | E . TK_MOD E

    TK_G     shift, and go to state 94
    TK_L     shift, and go to state 95
    TK_GE    shift, and go to state 96
    TK_LE    shift, and go to state 97
    TK_DIFF  shift, and go to state 98
    TK_E     shift, and go to state 99
    TK_AND   shift, and go to state 100
    TK_OR    shift, and go to state 101
    '+'      shift, and go to state 102
    '-'      shift, and go to state 103
    '*'      shift, and go to state 104
    '/'      shift, and go to state 105
    TK_MOD   shift, and go to state 106
    ')'      shift, and go to state 156


State 125

   34 SUB_BLOCO: TK_BEGIN CMDS . TK_END

    TK_END  shift, and go to state 157


State 126

   65 CMD_DOWHILE: TK_DO SUB_BLOCO TK_WHILE . '(' E ')'

    '('  shift, and go to state 158


State 127

   66 E: E . '+' E
   67  | E . '-' E
   68  | E . '*' E
   69  | E . '/' E
   70  | E . TK_G E
   71  | E . TK_L E
   72  | E . TK_GE E
   73  | E . TK_LE E
   74  | E . TK_DIFF E
   75  | E . TK_E E
   76  | E . TK_AND E
   77  | E . TK_OR E
   78  | E . TK_MOD E
   87 F: TK_ID '[' E . ']'
   88  | TK_ID '[' E . ']' '[' E ']'

    TK_G     shift, and go to state 94
    TK_L     shift, and go to state 95
    TK_GE    shift, and go to state 96
    TK_LE    shift, and go to state 97
    TK_DIFF  shift, and go to state 98
    TK_E     shift, and go to state 99
    TK_AND   shift, and go to state 100
    TK_OR    shift, and go to state 101
    '+'      shift, and go to state 102
    '-'      shift, and go to state 103
    '*'      shift, and go to state 104
    '/'      shift, and go to state 105
    TK_MOD   shift, and go to state 106
    ']'      shift, and go to state 159


State 128

   80 E: '(' E ')' .

    $default  reduce using rule 80 (E)


State 129

   66 E: E . '+' E
   67  | E . '-' E
   68  | E . '*' E
   69  | E . '/' E
   70  | E . TK_G E
   70  | E TK_G E .
   71  | E . TK_L E
   72  | E . TK_GE E
   73  | E . TK_LE E
   74  | E . TK_DIFF E
   75  | E . TK_E E
   76  | E . TK_AND E
   77  | E . TK_OR E
   78  | E . TK_MOD E

    '+'     shift, and go to state 102
    '-'     shift, and go to state 103
    '*'     shift, and go to state 104
    '/'     shift, and go to state 105
    TK_MOD  shift, and go to state 106

    TK_G     error (nonassociative)
    TK_L     error (nonassociative)
    TK_GE    error (nonassociative)
    TK_LE    error (nonassociative)
    TK_DIFF  error (nonassociative)
    TK_E     error (nonassociative)

    $default  reduce using rule 70 (E)


State 130

   66 E: E . '+' E
   67  | E . '-' E
   68  | E . '*' E
   69  | E . '/' E
   70  | E . TK_G E
   71  | E . TK_L E
   71  | E TK_L E .
   72  | E . TK_GE E
   73  | E . TK_LE E
   74  | E . TK_DIFF E
   75  | E . TK_E E
   76  | E . TK_AND E
   77  | E . TK_OR E
   78  | E . TK_MOD E

    '+'     shift, and go to state 102
    '-'     shift, and go to state 103
    '*'     shift, and go to state 104
    '/'     shift, and go to state 105
    TK_MOD  shift, and go to state 106

    TK_G     error (nonassociative)
    TK_L     error (nonassociative)
    TK_GE    error (nonassociative)
    TK_LE    error (nonassociative)
    TK_DIFF  error (nonassociative)
    TK_E     error (nonassociative)

    $default  reduce using rule 71 (E)


State 131

   66 E: E . '+' E
   67  | E . '-' E
   68  | E . '*' E
   69  | E . '/' E
   70  | E . TK_G E
   71  | E . TK_L E
   72  | E . TK_GE E
   72  | E TK_GE E .
   73  | E . TK_LE E
   74  | E . TK_DIFF E
   75  | E . TK_E E
   76  | E . TK_AND E
   77  | E . TK_OR E
   78  | E . TK_MOD E

    '+'     shift, and go to state 102
    '-'     shift, and go to state 103
    '*'     shift, and go to state 104
    '/'     shift, and go to state 105
    TK_MOD  shift, and go to state 106

    TK_G     error (nonassociative)
    TK_L     error (nonassociative)
    TK_GE    error (nonassociative)
    TK_LE    error (nonassociative)
    TK_DIFF  error (nonassociative)
    TK_E     error (nonassociative)

    $default  reduce using rule 72 (E)


State 132

   66 E: E . '+' E
   67  | E . '-' E
   68  | E . '*' E
   69  | E . '/' E
   70  | E . TK_G E
   71  | E . TK_L E
   72  | E . TK_GE E
   73  | E . TK_LE E
   73  | E TK_LE E .
   74  | E . TK_DIFF E
   75  | E . TK_E E
   76  | E . TK_AND E
   77  | E . TK_OR E
   78  | E . TK_MOD E

    '+'     shift, and go to state 102
    '-'     shift, and go to state 103
    '*'     shift, and go to state 104
    '/'     shift, and go to state 105
    TK_MOD  shift, and go to state 106

    TK_G     error (nonassociative)
    TK_L     error (nonassociative)
    TK_GE    error (nonassociative)
    TK_LE    error (nonassociative)
    TK_DIFF  error (nonassociative)
    TK_E     error (nonassociative)

    $default  reduce using rule 73 (E)


State 133

   66 E: E . '+' E
   67  | E . '-' E
   68  | E . '*' E
   69  | E . '/' E
   70  | E . TK_G E
   71  | E . TK_L E
   72  | E . TK_GE E
   73  | E . TK_LE E
   74  | E . TK_DIFF E
   74  | E TK_DIFF E .
   75  | E . TK_E E
   76  | E . TK_AND E
   77  | E . TK_OR E
   78  | E . TK_MOD E

    '+'     shift, and go to state 102
    '-'     shift, and go to state 103
    '*'     shift, and go to state 104
    '/'     shift, and go to state 105
    TK_MOD  shift, and go to state 106

    TK_G     error (nonassociative)
    TK_L     error (nonassociative)
    TK_GE    error (nonassociative)
    TK_LE    error (nonassociative)
    TK_DIFF  error (nonassociative)
    TK_E     error (nonassociative)

    $default  reduce using rule 74 (E)


State 134

   66 E: E . '+' E
   67  | E . '-' E
   68  | E . '*' E
   69  | E . '/' E
   70  | E . TK_G E
   71  | E . TK_L E
   72  | E . TK_GE E
   73  | E . TK_LE E
   74  | E . TK_DIFF E
   75  | E . TK_E E
   75  | E TK_E E .
   76  | E . TK_AND E
   77  | E . TK_OR E
   78  | E . TK_MOD E

    '+'     shift, and go to state 102
    '-'     shift, and go to state 103
    '*'     shift, and go to state 104
    '/'     shift, and go to state 105
    TK_MOD  shift, and go to state 106

    TK_G     error (nonassociative)
    TK_L     error (nonassociative)
    TK_GE    error (nonassociative)
    TK_LE    error (nonassociative)
    TK_DIFF  error (nonassociative)
    TK_E     error (nonassociative)

    $default  reduce using rule 75 (E)


State 135

   66 E: E . '+' E
   67  | E . '-' E
   68  | E . '*' E
   69  | E . '/' E
   70  | E . TK_G E
   71  | E . TK_L E
   72  | E . TK_GE E
   73  | E . TK_LE E
   74  | E . TK_DIFF E
   75  | E . TK_E E
   76  | E . TK_AND E
   76  | E TK_AND E .
   77  | E . TK_OR E
   78  | E . TK_MOD E

    TK_G     shift, and go to state 94
    TK_L     shift, and go to state 95
    TK_GE    shift, and go to state 96
    TK_LE    shift, and go to state 97
    TK_DIFF  shift, and go to state 98
    TK_E     shift, and go to state 99
    '+'      shift, and go to state 102
    '-'      shift, and go to state 103
    '*'      shift, and go to state 104
    '/'      shift, and go to state 105
    TK_MOD   shift, and go to state 106

    $default  reduce using rule 76 (E)


State 136

   66 E: E . '+' E
   67  | E . '-' E
   68  | E . '*' E
   69  | E . '/' E
   70  | E . TK_G E
   71  | E . TK_L E
   72  | E . TK_GE E
   73  | E . TK_LE E
   74  | E . TK_DIFF E
   75  | E . TK_E E
   76  | E . TK_AND E
   77  | E . TK_OR E
   77  | E TK_OR E .
   78  | E . TK_MOD E

    TK_G     shift, and go to state 94
    TK_L     shift, and go to state 95
    TK_GE    shift, and go to state 96
    TK_LE    shift, and go to state 97
    TK_DIFF  shift, and go to state 98
    TK_E     shift, and go to state 99
    TK_AND   shift, and go to state 100
    '+'      shift, and go to state 102
    '-'      shift, and go to state 103
    '*'      shift, and go to state 104
    '/'      shift, and go to state 105
    TK_MOD   shift, and go to state 106

    $default  reduce using rule 77 (E)


State 137

   66 E: E . '+' E
   66  | E '+' E .
   67  | E . '-' E
   68  | E . '*' E
   69  | E . '/' E
   70  | E . TK_G E
   71  | E . TK_L E
   72  | E . TK_GE E
   73  | E . TK_LE E
   74  | E . TK_DIFF E
   75  | E . TK_E E
   76  | E . TK_AND E
   77  | E . TK_OR E
   78  | E . TK_MOD E

    '*'     shift, and go to state 104
    '/'     shift, and go to state 105
    TK_MOD  shift, and go to state 106

    $default  reduce using rule 66 (E)


State 138

   66 E: E . '+' E
   67  | E . '-' E
   67  | E '-' E .
   68  | E . '*' E
   69  | E . '/' E
   70  | E . TK_G E
   71  | E . TK_L E
   72  | E . TK_GE E
   73  | E . TK_LE E
   74  | E . TK_DIFF E
   75  | E . TK_E E
   76  | E . TK_AND E
   77  | E . TK_OR E
   78  | E . TK_MOD E

    '*'     shift, and go to state 104
    '/'     shift, and go to state 105
    TK_MOD  shift, and go to state 106

    $default  reduce using rule 67 (E)


State 139

   66 E: E . '+' E
   67  | E . '-' E
   68  | E . '*' E
   68  | E '*' E .
   69  | E . '/' E
   70  | E . TK_G E
   71  | E . TK_L E
   72  | E . TK_GE E
   73  | E . TK_LE E
   74  | E . TK_DIFF E
   75  | E . TK_E E
   76  | E . TK_AND E
   77  | E . TK_OR E
   78  | E . TK_MOD E

    $default  reduce using rule 68 (E)


State 140

   66 E: E . '+' E
   67  | E . '-' E
   68  | E . '*' E
   69  | E . '/' E
   69  | E '/' E .
   70  | E . TK_G E
   71  | E . TK_L E
   72  | E . TK_GE E
   73  | E . TK_LE E
   74  | E . TK_DIFF E
   75  | E . TK_E E
   76  | E . TK_AND E
   77  | E . TK_OR E
   78  | E . TK_MOD E

    $default  reduce using rule 69 (E)


State 141

   66 E: E . '+' E
   67  | E . '-' E
   68  | E . '*' E
   69  | E . '/' E
   70  | E . TK_G E
   71  | E . TK_L E
   72  | E . TK_GE E
   73  | E . TK_LE E
   74  | E . TK_DIFF E
   75  | E . TK_E E
   76  | E . TK_AND E
   77  | E . TK_OR E
   78  | E . TK_MOD E
   78  | E TK_MOD E .

    $default  reduce using rule 78 (E)


State 142

   11 VAR: TIPO TK_ID '[' TK_CINT ']' '[' . TK_CINT ']'

    TK_CINT  shift, and go to state 160


State 143

   29 PARAM: TIPO TK_ID '[' . E ']'
   30      | TIPO TK_ID '[' . E ']' '[' E ']'

    TK_TRUE     shift, and go to state 51
    TK_FALSE    shift, and go to state 52
    TK_ID       shift, and go to state 53
    TK_CINT     shift, and go to state 54
    TK_CDOUBLE  shift, and go to state 55
    TK_CSTRING  shift, and go to state 56
    TK_CCHAR    shift, and go to state 57
    TK_NOT      shift, and go to state 58
    '('         shift, and go to state 59

    E     go to state 161
    F     go to state 61
    BOOL  go to state 62


State 144

   23 FUNCTION: TIPO TK_ID '(' F_PARAMS ')' BLOCO .

    $default  reduce using rule 23 (FUNCTION)


State 145

   26 PARAMS: PARAMS ',' PARAM .

    $default  reduce using rule 26 (PARAMS)


State 146

   15 ATRIB: TK_ID '[' E ']' . TK_ATRIB E
   16      | TK_ID '[' E ']' . '[' E ']' TK_ATRIB E

    TK_ATRIB  shift, and go to state 162
    '['       shift, and go to state 163


State 147

   57 C_PARAM: TK_ID '[' . E ']'

    TK_TRUE     shift, and go to state 51
    TK_FALSE    shift, and go to state 52
    TK_ID       shift, and go to state 53
    TK_CINT     shift, and go to state 54
    TK_CDOUBLE  shift, and go to state 55
    TK_CSTRING  shift, and go to state 56
    TK_CCHAR    shift, and go to state 57
    TK_NOT      shift, and go to state 58
    '('         shift, and go to state 59

    E     go to state 164
    F     go to state 61
    BOOL  go to state 62


State 148

   51 CMD_CALL: TK_ID '(' CALL_PARAMS ')' .

    $default  reduce using rule 51 (CMD_CALL)


State 149

   54 C_PARAMS: C_PARAMS ',' . C_PARAM

    TK_ID  shift, and go to state 113

    C_PARAM  go to state 165


State 150

   47 CMD_WROTEU: TK_WRITE '(' E ')' .

    $default  reduce using rule 47 (CMD_WROTEU)


State 151

   48 CMD_READU: TK_READ '(' TK_ID ')' .

    $default  reduce using rule 48 (CMD_READU)


State 152

   58 CMD_IF: TK_IF '(' E ')' . CMD
   59       | TK_IF '(' E ')' . CMD TK_ELSE CMD

    TK_INT     shift, and go to state 6
    TK_CHAR    shift, and go to state 7
    TK_DOUBLE  shift, and go to state 8
    TK_STRING  shift, and go to state 9
    TK_BOOL    shift, and go to state 10
    TK_VOID    shift, and go to state 11
    TK_ID      shift, and go to state 30
    TK_RETURN  shift, and go to state 31
    TK_WRITE   shift, and go to state 32
    TK_READ    shift, and go to state 33
    TK_IF      shift, and go to state 34
    TK_FOR     shift, and go to state 35
    TK_WHILE   shift, and go to state 36
    TK_DO      shift, and go to state 37

    VAR          go to state 38
    ATRIB        go to state 39
    TIPO         go to state 40
    CMD          go to state 166
    CMD_WROTEU   go to state 43
    CMD_READU    go to state 44
    CMD_RETURN   go to state 45
    CMD_CALL     go to state 46
    CMD_IF       go to state 47
    CMD_FOR      go to state 48
    CMD_WHILE    go to state 49
    CMD_DOWHILE  go to state 50


State 153

   62 BEGIN_FOR: TK_ID TK_ATRIB . E

    TK_TRUE     shift, and go to state 51
    TK_FALSE    shift, and go to state 52
    TK_ID       shift, and go to state 53
    TK_CINT     shift, and go to state 54
    TK_CDOUBLE  shift, and go to state 55
    TK_CSTRING  shift, and go to state 56
    TK_CCHAR    shift, and go to state 57
    TK_NOT      shift, and go to state 58
    '('         shift, and go to state 59

    E     go to state 167
    F     go to state 61
    BOOL  go to state 62


State 154

   61 BEGIN_FOR: TIPO TK_ID . TK_ATRIB E

    TK_ATRIB  shift, and go to state 168


State 155

   60 CMD_FOR: TK_FOR '(' BEGIN_FOR ';' . E ';' CONT_FOR ')' SUB_BLOCO

    TK_TRUE     shift, and go to state 51
    TK_FALSE    shift, and go to state 52
    TK_ID       shift, and go to state 53
    TK_CINT     shift, and go to state 54
    TK_CDOUBLE  shift, and go to state 55
    TK_CSTRING  shift, and go to state 56
    TK_CCHAR    shift, and go to state 57
    TK_NOT      shift, and go to state 58
    '('         shift, and go to state 59

    E     go to state 169
    F     go to state 61
    BOOL  go to state 62


State 156

   64 CMD_WHILE: TK_WHILE '(' E ')' . SUB_BLOCO

    TK_BEGIN  shift, and go to state 79

    SUB_BLOCO  go to state 170


State 157

   34 SUB_BLOCO: TK_BEGIN CMDS TK_END .

    $default  reduce using rule 34 (SUB_BLOCO)


State 158

   65 CMD_DOWHILE: TK_DO SUB_BLOCO TK_WHILE '(' . E ')'

    TK_TRUE     shift, and go to state 51
    TK_FALSE    shift, and go to state 52
    TK_ID       shift, and go to state 53
    TK_CINT     shift, and go to state 54
    TK_CDOUBLE  shift, and go to state 55
    TK_CSTRING  shift, and go to state 56
    TK_CCHAR    shift, and go to state 57
    TK_NOT      shift, and go to state 58
    '('         shift, and go to state 59

    E     go to state 171
    F     go to state 61
    BOOL  go to state 62


State 159

   87 F: TK_ID '[' E ']' .
   88  | TK_ID '[' E ']' . '[' E ']'

    '['  shift, and go to state 172

    $default  reduce using rule 87 (F)


State 160

   11 VAR: TIPO TK_ID '[' TK_CINT ']' '[' TK_CINT . ']'

    ']'  shift, and go to state 173


State 161

   29 PARAM: TIPO TK_ID '[' E . ']'
   30      | TIPO TK_ID '[' E . ']' '[' E ']'
   66 E: E . '+' E
   67  | E . '-' E
   68  | E . '*' E
   69  | E . '/' E
   70  | E . TK_G E
   71  | E . TK_L E
   72  | E . TK_GE E
   73  | E . TK_LE E
   74  | E . TK_DIFF E
   75  | E . TK_E E
   76  | E . TK_AND E
   77  | E . TK_OR E
   78  | E . TK_MOD E

    TK_G     shift, and go to state 94
    TK_L     shift, and go to state 95
    TK_GE    shift, and go to state 96
    TK_LE    shift, and go to state 97
    TK_DIFF  shift, and go to state 98
    TK_E     shift, and go to state 99
    TK_AND   shift, and go to state 100
    TK_OR    shift, and go to state 101
    '+'      shift, and go to state 102
    '-'      shift, and go to state 103
    '*'      shift, and go to state 104
    '/'      shift, and go to state 105
    TK_MOD   shift, and go to state 106
    ']'      shift, and go to state 174


State 162

   15 ATRIB: TK_ID '[' E ']' TK_ATRIB . E

    TK_TRUE     shift, and go to state 51
    TK_FALSE    shift, and go to state 52
    TK_ID       shift, and go to state 53
    TK_CINT     shift, and go to state 54
    TK_CDOUBLE  shift, and go to state 55
    TK_CSTRING  shift, and go to state 56
    TK_CCHAR    shift, and go to state 57
    TK_NOT      shift, and go to state 58
    '('         shift, and go to state 59

    E     go to state 175
    F     go to state 61
    BOOL  go to state 62


State 163

   16 ATRIB: TK_ID '[' E ']' '[' . E ']' TK_ATRIB E

    TK_TRUE     shift, and go to state 51
    TK_FALSE    shift, and go to state 52
    TK_ID       shift, and go to state 53
    TK_CINT     shift, and go to state 54
    TK_CDOUBLE  shift, and go to state 55
    TK_CSTRING  shift, and go to state 56
    TK_CCHAR    shift, and go to state 57
    TK_NOT      shift, and go to state 58
    '('         shift, and go to state 59

    E     go to state 176
    F     go to state 61
    BOOL  go to state 62


State 164

   57 C_PARAM: TK_ID '[' E . ']'
   66 E: E . '+' E
   67  | E . '-' E
   68  | E . '*' E
   69  | E . '/' E
   70  | E . TK_G E
   71  | E . TK_L E
   72  | E . TK_GE E
   73  | E . TK_LE E
   74  | E . TK_DIFF E
   75  | E . TK_E E
   76  | E . TK_AND E
   77  | E . TK_OR E
   78  | E . TK_MOD E

    TK_G     shift, and go to state 94
    TK_L     shift, and go to state 95
    TK_GE    shift, and go to state 96
    TK_LE    shift, and go to state 97
    TK_DIFF  shift, and go to state 98
    TK_E     shift, and go to state 99
    TK_AND   shift, and go to state 100
    TK_OR    shift, and go to state 101
    '+'      shift, and go to state 102
    '-'      shift, and go to state 103
    '*'      shift, and go to state 104
    '/'      shift, and go to state 105
    TK_MOD   shift, and go to state 106
    ']'      shift, and go to state 177


State 165

   54 C_PARAMS: C_PARAMS ',' C_PARAM .

    $default  reduce using rule 54 (C_PARAMS)


State 166

   58 CMD_IF: TK_IF '(' E ')' CMD .
   59       | TK_IF '(' E ')' CMD . TK_ELSE CMD

    TK_ELSE  shift, and go to state 178

    TK_ELSE   [reduce using rule 58 (CMD_IF)]
    $default  reduce using rule 58 (CMD_IF)


State 167

   62 BEGIN_FOR: TK_ID TK_ATRIB E .
   66 E: E . '+' E
   67  | E . '-' E
   68  | E . '*' E
   69  | E . '/' E
   70  | E . TK_G E
   71  | E . TK_L E
   72  | E . TK_GE E
   73  | E . TK_LE E
   74  | E . TK_DIFF E
   75  | E . TK_E E
   76  | E . TK_AND E
   77  | E . TK_OR E
   78  | E . TK_MOD E

    TK_G     shift, and go to state 94
    TK_L     shift, and go to state 95
    TK_GE    shift, and go to state 96
    TK_LE    shift, and go to state 97
    TK_DIFF  shift, and go to state 98
    TK_E     shift, and go to state 99
    TK_AND   shift, and go to state 100
    TK_OR    shift, and go to state 101
    '+'      shift, and go to state 102
    '-'      shift, and go to state 103
    '*'      shift, and go to state 104
    '/'      shift, and go to state 105
    TK_MOD   shift, and go to state 106

    $default  reduce using rule 62 (BEGIN_FOR)


State 168

   61 BEGIN_FOR: TIPO TK_ID TK_ATRIB . E

    TK_TRUE     shift, and go to state 51
    TK_FALSE    shift, and go to state 52
    TK_ID       shift, and go to state 53
    TK_CINT     shift, and go to state 54
    TK_CDOUBLE  shift, and go to state 55
    TK_CSTRING  shift, and go to state 56
    TK_CCHAR    shift, and go to state 57
    TK_NOT      shift, and go to state 58
    '('         shift, and go to state 59

    E     go to state 179
    F     go to state 61
    BOOL  go to state 62


State 169

   60 CMD_FOR: TK_FOR '(' BEGIN_FOR ';' E . ';' CONT_FOR ')' SUB_BLOCO
   66 E: E . '+' E
   67  | E . '-' E
   68  | E . '*' E
   69  | E . '/' E
   70  | E . TK_G E
   71  | E . TK_L E
   72  | E . TK_GE E
   73  | E . TK_LE E
   74  | E . TK_DIFF E
   75  | E . TK_E E
   76  | E . TK_AND E
   77  | E . TK_OR E
   78  | E . TK_MOD E

    TK_G     shift, and go to state 94
    TK_L     shift, and go to state 95
    TK_GE    shift, and go to state 96
    TK_LE    shift, and go to state 97
    TK_DIFF  shift, and go to state 98
    TK_E     shift, and go to state 99
    TK_AND   shift, and go to state 100
    TK_OR    shift, and go to state 101
    '+'      shift, and go to state 102
    '-'      shift, and go to state 103
    '*'      shift, and go to state 104
    '/'      shift, and go to state 105
    TK_MOD   shift, and go to state 106
    ';'      shift, and go to state 180


State 170

   64 CMD_WHILE: TK_WHILE '(' E ')' SUB_BLOCO .

    $default  reduce using rule 64 (CMD_WHILE)


State 171

   65 CMD_DOWHILE: TK_DO SUB_BLOCO TK_WHILE '(' E . ')'
   66 E: E . '+' E
   67  | E . '-' E
   68  | E . '*' E
   69  | E . '/' E
   70  | E . TK_G E
   71  | E . TK_L E
   72  | E . TK_GE E
   73  | E . TK_LE E
   74  | E . TK_DIFF E
   75  | E . TK_E E
   76  | E . TK_AND E
   77  | E . TK_OR E
   78  | E . TK_MOD E

    TK_G     shift, and go to state 94
    TK_L     shift, and go to state 95
    TK_GE    shift, and go to state 96
    TK_LE    shift, and go to state 97
    TK_DIFF  shift, and go to state 98
    TK_E     shift, and go to state 99
    TK_AND   shift, and go to state 100
    TK_OR    shift, and go to state 101
    '+'      shift, and go to state 102
    '-'      shift, and go to state 103
    '*'      shift, and go to state 104
    '/'      shift, and go to state 105
    TK_MOD   shift, and go to state 106
    ')'      shift, and go to state 181


State 172

   88 F: TK_ID '[' E ']' '[' . E ']'

    TK_TRUE     shift, and go to state 51
    TK_FALSE    shift, and go to state 52
    TK_ID       shift, and go to state 53
    TK_CINT     shift, and go to state 54
    TK_CDOUBLE  shift, and go to state 55
    TK_CSTRING  shift, and go to state 56
    TK_CCHAR    shift, and go to state 57
    TK_NOT      shift, and go to state 58
    '('         shift, and go to state 59

    E     go to state 182
    F     go to state 61
    BOOL  go to state 62


State 173

   11 VAR: TIPO TK_ID '[' TK_CINT ']' '[' TK_CINT ']' .

    $default  reduce using rule 11 (VAR)


State 174

   29 PARAM: TIPO TK_ID '[' E ']' .
   30      | TIPO TK_ID '[' E ']' . '[' E ']'

    '['  shift, and go to state 183

    $default  reduce using rule 29 (PARAM)


State 175

   15 ATRIB: TK_ID '[' E ']' TK_ATRIB E .
   66 E: E . '+' E
   67  | E . '-' E
   68  | E . '*' E
   69  | E . '/' E
   70  | E . TK_G E
   71  | E . TK_L E
   72  | E . TK_GE E
   73  | E . TK_LE E
   74  | E . TK_DIFF E
   75  | E . TK_E E
   76  | E . TK_AND E
   77  | E . TK_OR E
   78  | E . TK_MOD E

    TK_G     shift, and go to state 94
    TK_L     shift, and go to state 95
    TK_GE    shift, and go to state 96
    TK_LE    shift, and go to state 97
    TK_DIFF  shift, and go to state 98
    TK_E     shift, and go to state 99
    TK_AND   shift, and go to state 100
    TK_OR    shift, and go to state 101
    '+'      shift, and go to state 102
    '-'      shift, and go to state 103
    '*'      shift, and go to state 104
    '/'      shift, and go to state 105
    TK_MOD   shift, and go to state 106

    $default  reduce using rule 15 (ATRIB)


State 176

   16 ATRIB: TK_ID '[' E ']' '[' E . ']' TK_ATRIB E
   66 E: E . '+' E
   67  | E . '-' E
   68  | E . '*' E
   69  | E . '/' E
   70  | E . TK_G E
   71  | E . TK_L E
   72  | E . TK_GE E
   73  | E . TK_LE E
   74  | E . TK_DIFF E
   75  | E . TK_E E
   76  | E . TK_AND E
   77  | E . TK_OR E
   78  | E . TK_MOD E

    TK_G     shift, and go to state 94
    TK_L     shift, and go to state 95
    TK_GE    shift, and go to state 96
    TK_LE    shift, and go to state 97
    TK_DIFF  shift, and go to state 98
    TK_E     shift, and go to state 99
    TK_AND   shift, and go to state 100
    TK_OR    shift, and go to state 101
    '+'      shift, and go to state 102
    '-'      shift, and go to state 103
    '*'      shift, and go to state 104
    '/'      shift, and go to state 105
    TK_MOD   shift, and go to state 106
    ']'      shift, and go to state 184


State 177

   57 C_PARAM: TK_ID '[' E ']' .

    $default  reduce using rule 57 (C_PARAM)


State 178

   59 CMD_IF: TK_IF '(' E ')' CMD TK_ELSE . CMD

    TK_INT     shift, and go to state 6
    TK_CHAR    shift, and go to state 7
    TK_DOUBLE  shift, and go to state 8
    TK_STRING  shift, and go to state 9
    TK_BOOL    shift, and go to state 10
    TK_VOID    shift, and go to state 11
    TK_ID      shift, and go to state 30
    TK_RETURN  shift, and go to state 31
    TK_WRITE   shift, and go to state 32
    TK_READ    shift, and go to state 33
    TK_IF      shift, and go to state 34
    TK_FOR     shift, and go to state 35
    TK_WHILE   shift, and go to state 36
    TK_DO      shift, and go to state 37

    VAR          go to state 38
    ATRIB        go to state 39
    TIPO         go to state 40
    CMD          go to state 185
    CMD_WROTEU   go to state 43
    CMD_READU    go to state 44
    CMD_RETURN   go to state 45
    CMD_CALL     go to state 46
    CMD_IF       go to state 47
    CMD_FOR      go to state 48
    CMD_WHILE    go to state 49
    CMD_DOWHILE  go to state 50


State 179

   61 BEGIN_FOR: TIPO TK_ID TK_ATRIB E .
   66 E: E . '+' E
   67  | E . '-' E
   68  | E . '*' E
   69  | E . '/' E
   70  | E . TK_G E
   71  | E . TK_L E
   72  | E . TK_GE E
   73  | E . TK_LE E
   74  | E . TK_DIFF E
   75  | E . TK_E E
   76  | E . TK_AND E
   77  | E . TK_OR E
   78  | E . TK_MOD E

    TK_G     shift, and go to state 94
    TK_L     shift, and go to state 95
    TK_GE    shift, and go to state 96
    TK_LE    shift, and go to state 97
    TK_DIFF  shift, and go to state 98
    TK_E     shift, and go to state 99
    TK_AND   shift, and go to state 100
    TK_OR    shift, and go to state 101
    '+'      shift, and go to state 102
    '-'      shift, and go to state 103
    '*'      shift, and go to state 104
    '/'      shift, and go to state 105
    TK_MOD   shift, and go to state 106

    $default  reduce using rule 61 (BEGIN_FOR)


State 180

   60 CMD_FOR: TK_FOR '(' BEGIN_FOR ';' E ';' . CONT_FOR ')' SUB_BLOCO

    TK_ID  shift, and go to state 186

    CONT_FOR  go to state 187


State 181

   65 CMD_DOWHILE: TK_DO SUB_BLOCO TK_WHILE '(' E ')' .

    $default  reduce using rule 65 (CMD_DOWHILE)


State 182

   66 E: E . '+' E
   67  | E . '-' E
   68  | E . '*' E
   69  | E . '/' E
   70  | E . TK_G E
   71  | E . TK_L E
   72  | E . TK_GE E
   73  | E . TK_LE E
   74  | E . TK_DIFF E
   75  | E . TK_E E
   76  | E . TK_AND E
   77  | E . TK_OR E
   78  | E . TK_MOD E
   88 F: TK_ID '[' E ']' '[' E . ']'

    TK_G     shift, and go to state 94
    TK_L     shift, and go to state 95
    TK_GE    shift, and go to state 96
    TK_LE    shift, and go to state 97
    TK_DIFF  shift, and go to state 98
    TK_E     shift, and go to state 99
    TK_AND   shift, and go to state 100
    TK_OR    shift, and go to state 101
    '+'      shift, and go to state 102
    '-'      shift, and go to state 103
    '*'      shift, and go to state 104
    '/'      shift, and go to state 105
    TK_MOD   shift, and go to state 106
    ']'      shift, and go to state 188


State 183

   30 PARAM: TIPO TK_ID '[' E ']' '[' . E ']'

    TK_TRUE     shift, and go to state 51
    TK_FALSE    shift, and go to state 52
    TK_ID       shift, and go to state 53
    TK_CINT     shift, and go to state 54
    TK_CDOUBLE  shift, and go to state 55
    TK_CSTRING  shift, and go to state 56
    TK_CCHAR    shift, and go to state 57
    TK_NOT      shift, and go to state 58
    '('         shift, and go to state 59

    E     go to state 189
    F     go to state 61
    BOOL  go to state 62


State 184

   16 ATRIB: TK_ID '[' E ']' '[' E ']' . TK_ATRIB E

    TK_ATRIB  shift, and go to state 190


State 185

   59 CMD_IF: TK_IF '(' E ')' CMD TK_ELSE CMD .

    $default  reduce using rule 59 (CMD_IF)


State 186

   63 CONT_FOR: TK_ID . TK_ATRIB E

    TK_ATRIB  shift, and go to state 191


State 187

   60 CMD_FOR: TK_FOR '(' BEGIN_FOR ';' E ';' CONT_FOR . ')' SUB_BLOCO

    ')'  shift, and go to state 192


State 188

   88 F: TK_ID '[' E ']' '[' E ']' .

    $default  reduce using rule 88 (F)


State 189

   30 PARAM: TIPO TK_ID '[' E ']' '[' E . ']'
   66 E: E . '+' E
   67  | E . '-' E
   68  | E . '*' E
   69  | E . '/' E
   70  | E . TK_G E
   71  | E . TK_L E
   72  | E . TK_GE E
   73  | E . TK_LE E
   74  | E . TK_DIFF E
   75  | E . TK_E E
   76  | E . TK_AND E
   77  | E . TK_OR E
   78  | E . TK_MOD E

    TK_G     shift, and go to state 94
    TK_L     shift, and go to state 95
    TK_GE    shift, and go to state 96
    TK_LE    shift, and go to state 97
    TK_DIFF  shift, and go to state 98
    TK_E     shift, and go to state 99
    TK_AND   shift, and go to state 100
    TK_OR    shift, and go to state 101
    '+'      shift, and go to state 102
    '-'      shift, and go to state 103
    '*'      shift, and go to state 104
    '/'      shift, and go to state 105
    TK_MOD   shift, and go to state 106
    ']'      shift, and go to state 193


State 190

   16 ATRIB: TK_ID '[' E ']' '[' E ']' TK_ATRIB . E

    TK_TRUE     shift, and go to state 51
    TK_FALSE    shift, and go to state 52
    TK_ID       shift, and go to state 53
    TK_CINT     shift, and go to state 54
    TK_CDOUBLE  shift, and go to state 55
    TK_CSTRING  shift, and go to state 56
    TK_CCHAR    shift, and go to state 57
    TK_NOT      shift, and go to state 58
    '('         shift, and go to state 59

    E     go to state 194
    F     go to state 61
    BOOL  go to state 62


State 191

   63 CONT_FOR: TK_ID TK_ATRIB . E

    TK_TRUE     shift, and go to state 51
    TK_FALSE    shift, and go to state 52
    TK_ID       shift, and go to state 53
    TK_CINT     shift, and go to state 54
    TK_CDOUBLE  shift, and go to state 55
    TK_CSTRING  shift, and go to state 56
    TK_CCHAR    shift, and go to state 57
    TK_NOT      shift, and go to state 58
    '('         shift, and go to state 59

    E     go to state 195
    F     go to state 61
    BOOL  go to state 62


State 192

   60 CMD_FOR: TK_FOR '(' BEGIN_FOR ';' E ';' CONT_FOR ')' . SUB_BLOCO

    TK_BEGIN  shift, and go to state 79

    SUB_BLOCO  go to state 196


State 193

   30 PARAM: TIPO TK_ID '[' E ']' '[' E ']' .

    $default  reduce using rule 30 (PARAM)


State 194

   16 ATRIB: TK_ID '[' E ']' '[' E ']' TK_ATRIB E .
   66 E: E . '+' E
   67  | E . '-' E
   68  | E . '*' E
   69  | E . '/' E
   70  | E . TK_G E
   71  | E . TK_L E
   72  | E . TK_GE E
   73  | E . TK_LE E
   74  | E . TK_DIFF E
   75  | E . TK_E E
   76  | E . TK_AND E
   77  | E . TK_OR E
   78  | E . TK_MOD E

    TK_G     shift, and go to state 94
    TK_L     shift, and go to state 95
    TK_GE    shift, and go to state 96
    TK_LE    shift, and go to state 97
    TK_DIFF  shift, and go to state 98
    TK_E     shift, and go to state 99
    TK_AND   shift, and go to state 100
    TK_OR    shift, and go to state 101
    '+'      shift, and go to state 102
    '-'      shift, and go to state 103
    '*'      shift, and go to state 104
    '/'      shift, and go to state 105
    TK_MOD   shift, and go to state 106

    $default  reduce using rule 16 (ATRIB)


State 195

   63 CONT_FOR: TK_ID TK_ATRIB E .
   66 E: E . '+' E
   67  | E . '-' E
   68  | E . '*' E
   69  | E . '/' E
   70  | E . TK_G E
   71  | E . TK_L E
   72  | E . TK_GE E
   73  | E . TK_LE E
   74  | E . TK_DIFF E
   75  | E . TK_E E
   76  | E . TK_AND E
   77  | E . TK_OR E
   78  | E . TK_MOD E

    TK_G     shift, and go to state 94
    TK_L     shift, and go to state 95
    TK_GE    shift, and go to state 96
    TK_LE    shift, and go to state 97
    TK_DIFF  shift, and go to state 98
    TK_E     shift, and go to state 99
    TK_AND   shift, and go to state 100
    TK_OR    shift, and go to state 101
    '+'      shift, and go to state 102
    '-'      shift, and go to state 103
    '*'      shift, and go to state 104
    '/'      shift, and go to state 105
    TK_MOD   shift, and go to state 106

    $default  reduce using rule 63 (CONT_FOR)


State 196

   60 CMD_FOR: TK_FOR '(' BEGIN_FOR ';' E ';' CONT_FOR ')' SUB_BLOCO .

    $default  reduce using rule 60 (CMD_FOR)
